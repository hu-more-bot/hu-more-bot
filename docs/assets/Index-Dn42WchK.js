import{r as Ye,a as qy,g as jy,j as xt,c as Zy}from"./index-hsWIllaC.js";/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Xc="157",es={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},ts={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},C0=0,xf=1,P0=2,Jy=3,L0=0,Yc=1,ra=2,gi=3,ir=0,Un=1,Pi=2,Ky=2,nr=0,cs=1,Sf=2,Mf=3,Ef=4,I0=5,is=100,D0=101,N0=102,wf=103,Tf=104,U0=200,O0=201,F0=202,z0=203,hd=204,fd=205,B0=206,k0=207,H0=208,V0=209,G0=210,W0=0,X0=1,Y0=2,Bc=3,q0=4,j0=5,Z0=6,J0=7,La=0,K0=1,Q0=2,Di=0,$0=1,e_=2,t_=3,dd=4,n_=5,qc=300,rr=301,Cr=302,ua=303,ha=304,xo=306,fa=1e3,Rn=1001,da=1002,$t=1003,kc=1004,Qy=1004,sa=1005,$y=1005,en=1006,pd=1007,ex=1007,Pr=1008,tx=1008,Ni=1009,i_=1010,r_=1011,jc=1012,md=1013,tr=1014,Li=1015,mo=1016,gd=1017,_d=1018,Tr=1020,s_=1021,Gn=1023,o_=1024,a_=1025,Ar=1026,ds=1027,l_=1028,vd=1029,c_=1030,yd=1031,xd=1033,Pc=33776,Lc=33777,Ic=33778,Dc=33779,Af=35840,bf=35841,Rf=35842,Cf=35843,u_=36196,Pf=37492,Lf=37496,If=37808,Df=37809,Nf=37810,Uf=37811,Of=37812,Ff=37813,zf=37814,Bf=37815,kf=37816,Hf=37817,Vf=37818,Gf=37819,Wf=37820,Xf=37821,Nc=36492,Yf=36494,qf=36495,h_=36283,jf=36284,Zf=36285,Jf=36286,f_=2200,d_=2201,p_=2202,pa=2300,ma=2301,Uc=2302,ss=2400,os=2401,ga=2402,Zc=2500,Sd=2501,nx=0,ix=1,rx=2,Md=3e3,br=3001,m_=3200,g_=3201,Ir=0,__=1,$n="",hn="srgb",Oi="srgb-linear",Jc="display-p3",Ia="display-p3-linear",_a="linear",zt="srgb",va="rec709",ya="p3",sx=0,Oc=7680,ox=7681,ax=7682,lx=7683,cx=34055,ux=34056,hx=5386,fx=512,dx=513,px=514,mx=515,gx=516,_x=517,vx=518,v_=519,y_=512,x_=513,S_=514,M_=515,E_=516,w_=517,T_=518,A_=519,xa=35044,yx=35048,xx=35040,Sx=35045,Mx=35049,Ex=35041,wx=35046,Tx=35050,Ax=35042,bx="100",Kf="300 es",Hc=1035,Ii=2e3,Sa=2001;let or=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}};const An=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Im=1234567;const us=Math.PI/180,go=180/Math.PI;function ei(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(An[r&255]+An[r>>8&255]+An[r>>16&255]+An[r>>24&255]+"-"+An[e&255]+An[e>>8&255]+"-"+An[e>>16&15|64]+An[e>>24&255]+"-"+An[t&63|128]+An[t>>8&255]+"-"+An[t>>16&255]+An[t>>24&255]+An[n&255]+An[n>>8&255]+An[n>>16&255]+An[n>>24&255]).toLowerCase()}function Jt(r,e,t){return Math.max(e,Math.min(t,r))}function Ed(r,e){return(r%e+e)%e}function Rx(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function Cx(r,e,t){return r!==e?(t-r)/(e-r):0}function oa(r,e,t){return(1-t)*r+t*e}function Px(r,e,t,n){return oa(r,e,1-Math.exp(-t*n))}function Lx(r,e=1){return e-Math.abs(Ed(r,e*2)-e)}function Ix(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function Dx(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function Nx(r,e){return r+Math.floor(Math.random()*(e-r+1))}function Ux(r,e){return r+Math.random()*(e-r)}function Ox(r){return r*(.5-Math.random())}function Fx(r){r!==void 0&&(Im=r);let e=Im+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function zx(r){return r*us}function Bx(r){return r*go}function Qf(r){return(r&r-1)===0&&r!==0}function b_(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function Vc(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function kx(r,e,t,n,i){const s=Math.cos,l=Math.sin,c=s(t/2),u=l(t/2),h=s((e+n)/2),d=l((e+n)/2),p=s((e-n)/2),m=l((e-n)/2),_=s((n-e)/2),y=l((n-e)/2);switch(i){case"XYX":r.set(c*d,u*p,u*m,c*h);break;case"YZY":r.set(u*m,c*d,u*p,c*h);break;case"ZXZ":r.set(u*p,u*m,c*d,c*h);break;case"XZX":r.set(c*d,u*y,u*_,c*h);break;case"YXY":r.set(u*_,c*d,u*y,c*h);break;case"ZYZ":r.set(u*y,u*_,c*d,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Wn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function ft(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const Hx={DEG2RAD:us,RAD2DEG:go,generateUUID:ei,clamp:Jt,euclideanModulo:Ed,mapLinear:Rx,inverseLerp:Cx,lerp:oa,damp:Px,pingpong:Lx,smoothstep:Ix,smootherstep:Dx,randInt:Nx,randFloat:Ux,randFloatSpread:Ox,seededRandom:Fx,degToRad:zx,radToDeg:Bx,isPowerOfTwo:Qf,ceilPowerOfTwo:b_,floorPowerOfTwo:Vc,setQuaternionFromProperEuler:kx,normalize:ft,denormalize:Wn};class ue{constructor(e=0,t=0){ue.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Jt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,l=this.y-e.y;return this.x=s*n-l*i+e.x,this.y=s*i+l*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class pt{constructor(e,t,n,i,s,l,c,u,h){pt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h)}set(e,t,n,i,s,l,c,u,h){const d=this.elements;return d[0]=e,d[1]=i,d[2]=c,d[3]=t,d[4]=s,d[5]=u,d[6]=n,d[7]=l,d[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[3],u=n[6],h=n[1],d=n[4],p=n[7],m=n[2],_=n[5],y=n[8],E=i[0],x=i[3],v=i[6],w=i[1],M=i[4],A=i[7],R=i[2],C=i[5],I=i[8];return s[0]=l*E+c*w+u*R,s[3]=l*x+c*M+u*C,s[6]=l*v+c*A+u*I,s[1]=h*E+d*w+p*R,s[4]=h*x+d*M+p*C,s[7]=h*v+d*A+p*I,s[2]=m*E+_*w+y*R,s[5]=m*x+_*M+y*C,s[8]=m*v+_*A+y*I,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8];return t*l*d-t*c*h-n*s*d+n*c*u+i*s*h-i*l*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=d*l-c*h,m=c*u-d*s,_=h*s-l*u,y=t*p+n*m+i*_;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const E=1/y;return e[0]=p*E,e[1]=(i*h-d*n)*E,e[2]=(c*n-i*l)*E,e[3]=m*E,e[4]=(d*t-i*u)*E,e[5]=(i*s-c*t)*E,e[6]=_*E,e[7]=(n*u-h*t)*E,e[8]=(l*t-n*s)*E,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,l,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*l+h*c)+l+e,-i*h,i*u,-i*(-h*l+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(bh.makeScale(e,t)),this}rotate(e){return this.premultiply(bh.makeRotation(-e)),this}translate(e,t){return this.premultiply(bh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const bh=new pt;function R_(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const Vx={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function ao(r,e){return new Vx[r](e)}function Ma(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function C_(){const r=Ma("canvas");return r.style.display="block",r}const Dm={};function aa(r){r in Dm||(Dm[r]=!0,console.warn(r))}const Nm=new pt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Um=new pt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Bl={[Oi]:{transfer:_a,primaries:va,toReference:r=>r,fromReference:r=>r},[hn]:{transfer:zt,primaries:va,toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[Ia]:{transfer:_a,primaries:ya,toReference:r=>r.applyMatrix3(Um),fromReference:r=>r.applyMatrix3(Nm)},[Jc]:{transfer:zt,primaries:ya,toReference:r=>r.convertSRGBToLinear().applyMatrix3(Um),fromReference:r=>r.applyMatrix3(Nm).convertLinearToSRGB()}},Gx=new Set([Oi,Ia]),Lt={enabled:!0,_workingColorSpace:Oi,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(r){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!r},get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!Gx.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=Bl[e].toReference,i=Bl[t].fromReference;return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this._workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this._workingColorSpace)},getPrimaries:function(r){return Bl[r].primaries},getTransfer:function(r){return r===$n?_a:Bl[r].transfer}};function fo(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Rh(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Us;class wd{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Us===void 0&&(Us=Ma("canvas")),Us.width=e.width,Us.height=e.height;const n=Us.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Us}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Ma("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let l=0;l<s.length;l++)s[l]=fo(s[l]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(fo(t[n]/255)*255):t[n]=fo(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let Wx=0;class as{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:Wx++}),this.uuid=ei(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let l=0,c=i.length;l<c;l++)i[l].isDataTexture?s.push(Ch(i[l].image)):s.push(Ch(i[l]))}else s=Ch(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Ch(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?wd.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Xx=0;class nn extends or{constructor(e=nn.DEFAULT_IMAGE,t=nn.DEFAULT_MAPPING,n=Rn,i=Rn,s=en,l=Pr,c=Gn,u=Ni,h=nn.DEFAULT_ANISOTROPY,d=$n){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Xx++}),this.uuid=ei(),this.name="",this.source=new as(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=l,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new ue(0,0),this.repeat=new ue(1,1),this.center=new ue(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new pt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof d=="string"?this.colorSpace=d:(aa("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=d===br?hn:$n),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==qc)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case fa:e.x=e.x-Math.floor(e.x);break;case Rn:e.x=e.x<0?0:1;break;case da:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case fa:e.y=e.y-Math.floor(e.y);break;case Rn:e.y=e.y<0?0:1;break;case da:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return aa("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===hn?br:Md}set encoding(e){aa("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===br?hn:$n}}nn.DEFAULT_IMAGE=null;nn.DEFAULT_MAPPING=qc;nn.DEFAULT_ANISOTROPY=1;class It{constructor(e=0,t=0,n=0,i=1){It.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,l=e.elements;return this.x=l[0]*t+l[4]*n+l[8]*i+l[12]*s,this.y=l[1]*t+l[5]*n+l[9]*i+l[13]*s,this.z=l[2]*t+l[6]*n+l[10]*i+l[14]*s,this.w=l[3]*t+l[7]*n+l[11]*i+l[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],d=u[4],p=u[8],m=u[1],_=u[5],y=u[9],E=u[2],x=u[6],v=u[10];if(Math.abs(d-m)<.01&&Math.abs(p-E)<.01&&Math.abs(y-x)<.01){if(Math.abs(d+m)<.1&&Math.abs(p+E)<.1&&Math.abs(y+x)<.1&&Math.abs(h+_+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const M=(h+1)/2,A=(_+1)/2,R=(v+1)/2,C=(d+m)/4,I=(p+E)/4,z=(y+x)/4;return M>A&&M>R?M<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(M),i=C/n,s=I/n):A>R?A<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(A),n=C/i,s=z/i):R<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(R),n=I/s,i=z/s),this.set(n,i,s,t),this}let w=Math.sqrt((x-y)*(x-y)+(p-E)*(p-E)+(m-d)*(m-d));return Math.abs(w)<.001&&(w=1),this.x=(x-y)/w,this.y=(p-E)/w,this.z=(m-d)/w,this.w=Math.acos((h+_+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class P_ extends or{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new It(0,0,e,t),this.scissorTest=!1,this.viewport=new It(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(aa("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===br?hn:$n),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:en,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0},n),this.texture=new nn(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps,this.texture.internalFormat=n.internalFormat,this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new as(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class vi extends P_{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Kc extends nn{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=$t,this.minFilter=$t,this.wrapR=Rn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Yx extends vi{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Kc(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Td extends nn{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=$t,this.minFilter=$t,this.wrapR=Rn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class qx extends vi{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Td(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class jx extends vi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let l=0;l<n;l++)this.texture[l]=s.clone(),this.texture[l].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Cn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,l,c){let u=n[i+0],h=n[i+1],d=n[i+2],p=n[i+3];const m=s[l+0],_=s[l+1],y=s[l+2],E=s[l+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=_,e[t+2]=y,e[t+3]=E;return}if(p!==E||u!==m||h!==_||d!==y){let x=1-c;const v=u*m+h*_+d*y+p*E,w=v>=0?1:-1,M=1-v*v;if(M>Number.EPSILON){const R=Math.sqrt(M),C=Math.atan2(R,v*w);x=Math.sin(x*C)/R,c=Math.sin(c*C)/R}const A=c*w;if(u=u*x+m*A,h=h*x+_*A,d=d*x+y*A,p=p*x+E*A,x===1-c){const R=1/Math.sqrt(u*u+h*h+d*d+p*p);u*=R,h*=R,d*=R,p*=R}}e[t]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,s,l){const c=n[i],u=n[i+1],h=n[i+2],d=n[i+3],p=s[l],m=s[l+1],_=s[l+2],y=s[l+3];return e[t]=c*y+d*p+u*_-h*m,e[t+1]=u*y+d*m+h*p-c*_,e[t+2]=h*y+d*_+c*m-u*p,e[t+3]=d*y-c*p-u*m-h*_,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,s=e._z,l=e._order,c=Math.cos,u=Math.sin,h=c(n/2),d=c(i/2),p=c(s/2),m=u(n/2),_=u(i/2),y=u(s/2);switch(l){case"XYZ":this._x=m*d*p+h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p-m*_*y;break;case"YXZ":this._x=m*d*p+h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p+m*_*y;break;case"ZXY":this._x=m*d*p-h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p-m*_*y;break;case"ZYX":this._x=m*d*p-h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p+m*_*y;break;case"YZX":this._x=m*d*p+h*_*y,this._y=h*_*p+m*d*y,this._z=h*d*y-m*_*p,this._w=h*d*p-m*_*y;break;case"XZY":this._x=m*d*p-h*_*y,this._y=h*_*p-m*d*y,this._z=h*d*y+m*_*p,this._w=h*d*p+m*_*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+l)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],l=t[1],c=t[5],u=t[9],h=t[2],d=t[6],p=t[10],m=n+c+p;if(m>0){const _=.5/Math.sqrt(m+1);this._w=.25/_,this._x=(d-u)*_,this._y=(s-h)*_,this._z=(l-i)*_}else if(n>c&&n>p){const _=2*Math.sqrt(1+n-c-p);this._w=(d-u)/_,this._x=.25*_,this._y=(i+l)/_,this._z=(s+h)/_}else if(c>p){const _=2*Math.sqrt(1+c-n-p);this._w=(s-h)/_,this._x=(i+l)/_,this._y=.25*_,this._z=(u+d)/_}else{const _=2*Math.sqrt(1+p-n-c);this._w=(l-i)/_,this._x=(s+h)/_,this._y=(u+d)/_,this._z=.25*_}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Jt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,l=e._w,c=t._x,u=t._y,h=t._z,d=t._w;return this._x=n*d+l*c+i*h-s*u,this._y=i*d+l*u+s*c-n*h,this._z=s*d+l*h+n*u-i*c,this._w=l*d-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,l=this._w;let c=l*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=l,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const _=1-t;return this._w=_*l+t*this._w,this._x=_*n+t*this._x,this._y=_*i+t*this._y,this._z=_*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(u),d=Math.atan2(h,c),p=Math.sin((1-t)*d)/h,m=Math.sin(t*d)/h;return this._w=l*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class D{constructor(e=0,t=0,n=0){D.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Om.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Om.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,l=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*l,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*l,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*l,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,l=e.y,c=e.z,u=e.w,h=u*t+l*i-c*n,d=u*n+c*t-s*i,p=u*i+s*n-l*t,m=-s*t-l*n-c*i;return this.x=h*u+m*-s+d*-c-p*-l,this.y=d*u+m*-l+p*-s-h*-c,this.z=p*u+m*-c+h*-l-d*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,l=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*l-n*u,this.z=n*c-i*l,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Ph.copy(this).projectOnVector(e),this.sub(Ph)}reflect(e){return this.sub(Ph.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Jt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ph=new D,Om=new Cn;class zi{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(qi.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(qi.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=qi.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),Os.copy(e.boundingBox),Os.applyMatrix4(e.matrixWorld),this.union(Os);else{const i=e.geometry;if(i!==void 0)if(t&&i.attributes!==void 0&&i.attributes.position!==void 0){const s=i.attributes.position;for(let l=0,c=s.count;l<c;l++)qi.fromBufferAttribute(s,l).applyMatrix4(e.matrixWorld),this.expandByPoint(qi)}else i.boundingBox===null&&i.computeBoundingBox(),Os.copy(i.boundingBox),Os.applyMatrix4(e.matrixWorld),this.union(Os)}const n=e.children;for(let i=0,s=n.length;i<s;i++)this.expandByObject(n[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,qi),qi.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Wo),kl.subVectors(this.max,Wo),Fs.subVectors(e.a,Wo),zs.subVectors(e.b,Wo),Bs.subVectors(e.c,Wo),_r.subVectors(zs,Fs),vr.subVectors(Bs,zs),Xr.subVectors(Fs,Bs);let t=[0,-_r.z,_r.y,0,-vr.z,vr.y,0,-Xr.z,Xr.y,_r.z,0,-_r.x,vr.z,0,-vr.x,Xr.z,0,-Xr.x,-_r.y,_r.x,0,-vr.y,vr.x,0,-Xr.y,Xr.x,0];return!Lh(t,Fs,zs,Bs,kl)||(t=[1,0,0,0,1,0,0,0,1],!Lh(t,Fs,zs,Bs,kl))?!1:(Hl.crossVectors(_r,vr),t=[Hl.x,Hl.y,Hl.z],Lh(t,Fs,zs,Bs,kl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,qi).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(qi).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Yi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Yi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Yi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Yi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Yi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Yi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Yi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Yi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Yi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Yi=[new D,new D,new D,new D,new D,new D,new D,new D],qi=new D,Os=new zi,Fs=new D,zs=new D,Bs=new D,_r=new D,vr=new D,Xr=new D,Wo=new D,kl=new D,Hl=new D,Yr=new D;function Lh(r,e,t,n,i){for(let s=0,l=r.length-3;s<=l;s+=3){Yr.fromArray(r,s);const c=i.x*Math.abs(Yr.x)+i.y*Math.abs(Yr.y)+i.z*Math.abs(Yr.z),u=e.dot(Yr),h=t.dot(Yr),d=n.dot(Yr);if(Math.max(-Math.max(u,h,d),Math.min(u,h,d))>c)return!1}return!0}const Zx=new zi,Xo=new D,Ih=new D;class yi{constructor(e=new D,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Zx.setFromPoints(e).getCenter(n);let i=0;for(let s=0,l=e.length;s<l;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Xo.subVectors(e,this.center);const t=Xo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(Xo,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Ih.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Xo.copy(e.center).add(Ih)),this.expandByPoint(Xo.copy(e.center).sub(Ih))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const ji=new D,Dh=new D,Vl=new D,yr=new D,Nh=new D,Gl=new D,Uh=new D;class _s{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ji)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=ji.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ji.copy(this.origin).addScaledVector(this.direction,t),ji.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Dh.copy(e).add(t).multiplyScalar(.5),Vl.copy(t).sub(e).normalize(),yr.copy(this.origin).sub(Dh);const s=e.distanceTo(t)*.5,l=-this.direction.dot(Vl),c=yr.dot(this.direction),u=-yr.dot(Vl),h=yr.lengthSq(),d=Math.abs(1-l*l);let p,m,_,y;if(d>0)if(p=l*u-c,m=l*c-u,y=s*d,p>=0)if(m>=-y)if(m<=y){const E=1/d;p*=E,m*=E,_=p*(p+l*m+2*c)+m*(l*p+m+2*u)+h}else m=s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;else m=-s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-l*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),_=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),_=m*(m+2*u)+h):(p=Math.max(0,-(l*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),_=-p*p+m*(m+2*u)+h);else m=l>0?-s:s,p=Math.max(0,-(l*m+c)),_=-p*p+m*(m+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,p),i&&i.copy(Dh).addScaledVector(Vl,m),_}intersectSphere(e,t){ji.subVectors(e.center,this.origin);const n=ji.dot(this.direction),i=ji.dot(ji)-n*n,s=e.radius*e.radius;if(i>s)return null;const l=Math.sqrt(s-i),c=n-l,u=n+l;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,l,c,u;const h=1/this.direction.x,d=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),d>=0?(s=(e.min.y-m.y)*d,l=(e.max.y-m.y)*d):(s=(e.max.y-m.y)*d,l=(e.min.y-m.y)*d),n>l||s>i||((s>n||isNaN(n))&&(n=s),(l<i||isNaN(i))&&(i=l),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,ji)!==null}intersectTriangle(e,t,n,i,s){Nh.subVectors(t,e),Gl.subVectors(n,e),Uh.crossVectors(Nh,Gl);let l=this.direction.dot(Uh),c;if(l>0){if(i)return null;c=1}else if(l<0)c=-1,l=-l;else return null;yr.subVectors(this.origin,e);const u=c*this.direction.dot(Gl.crossVectors(yr,Gl));if(u<0)return null;const h=c*this.direction.dot(Nh.cross(yr));if(h<0||u+h>l)return null;const d=-c*yr.dot(Uh);return d<0?null:this.at(d/l,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ut{constructor(e,t,n,i,s,l,c,u,h,d,p,m,_,y,E,x){ut.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,l,c,u,h,d,p,m,_,y,E,x)}set(e,t,n,i,s,l,c,u,h,d,p,m,_,y,E,x){const v=this.elements;return v[0]=e,v[4]=t,v[8]=n,v[12]=i,v[1]=s,v[5]=l,v[9]=c,v[13]=u,v[2]=h,v[6]=d,v[10]=p,v[14]=m,v[3]=_,v[7]=y,v[11]=E,v[15]=x,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ut().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/ks.setFromMatrixColumn(e,0).length(),s=1/ks.setFromMatrixColumn(e,1).length(),l=1/ks.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*l,t[9]=n[9]*l,t[10]=n[10]*l,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,l=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),d=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=l*d,_=l*p,y=c*d,E=c*p;t[0]=u*d,t[4]=-u*p,t[8]=h,t[1]=_+y*h,t[5]=m-E*h,t[9]=-c*u,t[2]=E-m*h,t[6]=y+_*h,t[10]=l*u}else if(e.order==="YXZ"){const m=u*d,_=u*p,y=h*d,E=h*p;t[0]=m+E*c,t[4]=y*c-_,t[8]=l*h,t[1]=l*p,t[5]=l*d,t[9]=-c,t[2]=_*c-y,t[6]=E+m*c,t[10]=l*u}else if(e.order==="ZXY"){const m=u*d,_=u*p,y=h*d,E=h*p;t[0]=m-E*c,t[4]=-l*p,t[8]=y+_*c,t[1]=_+y*c,t[5]=l*d,t[9]=E-m*c,t[2]=-l*h,t[6]=c,t[10]=l*u}else if(e.order==="ZYX"){const m=l*d,_=l*p,y=c*d,E=c*p;t[0]=u*d,t[4]=y*h-_,t[8]=m*h+E,t[1]=u*p,t[5]=E*h+m,t[9]=_*h-y,t[2]=-h,t[6]=c*u,t[10]=l*u}else if(e.order==="YZX"){const m=l*u,_=l*h,y=c*u,E=c*h;t[0]=u*d,t[4]=E-m*p,t[8]=y*p+_,t[1]=p,t[5]=l*d,t[9]=-c*d,t[2]=-h*d,t[6]=_*p+y,t[10]=m-E*p}else if(e.order==="XZY"){const m=l*u,_=l*h,y=c*u,E=c*h;t[0]=u*d,t[4]=-p,t[8]=h*d,t[1]=m*p+E,t[5]=l*d,t[9]=_*p-y,t[2]=y*p-_,t[6]=c*d,t[10]=E*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Jx,e,Kx)}lookAt(e,t,n){const i=this.elements;return Kn.subVectors(e,t),Kn.lengthSq()===0&&(Kn.z=1),Kn.normalize(),xr.crossVectors(n,Kn),xr.lengthSq()===0&&(Math.abs(n.z)===1?Kn.x+=1e-4:Kn.z+=1e-4,Kn.normalize(),xr.crossVectors(n,Kn)),xr.normalize(),Wl.crossVectors(Kn,xr),i[0]=xr.x,i[4]=Wl.x,i[8]=Kn.x,i[1]=xr.y,i[5]=Wl.y,i[9]=Kn.y,i[2]=xr.z,i[6]=Wl.z,i[10]=Kn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,l=n[0],c=n[4],u=n[8],h=n[12],d=n[1],p=n[5],m=n[9],_=n[13],y=n[2],E=n[6],x=n[10],v=n[14],w=n[3],M=n[7],A=n[11],R=n[15],C=i[0],I=i[4],z=i[8],b=i[12],L=i[1],H=i[5],te=i[9],se=i[13],G=i[2],$=i[6],oe=i[10],ie=i[14],Y=i[3],q=i[7],j=i[11],k=i[15];return s[0]=l*C+c*L+u*G+h*Y,s[4]=l*I+c*H+u*$+h*q,s[8]=l*z+c*te+u*oe+h*j,s[12]=l*b+c*se+u*ie+h*k,s[1]=d*C+p*L+m*G+_*Y,s[5]=d*I+p*H+m*$+_*q,s[9]=d*z+p*te+m*oe+_*j,s[13]=d*b+p*se+m*ie+_*k,s[2]=y*C+E*L+x*G+v*Y,s[6]=y*I+E*H+x*$+v*q,s[10]=y*z+E*te+x*oe+v*j,s[14]=y*b+E*se+x*ie+v*k,s[3]=w*C+M*L+A*G+R*Y,s[7]=w*I+M*H+A*$+R*q,s[11]=w*z+M*te+A*oe+R*j,s[15]=w*b+M*se+A*ie+R*k,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],l=e[1],c=e[5],u=e[9],h=e[13],d=e[2],p=e[6],m=e[10],_=e[14],y=e[3],E=e[7],x=e[11],v=e[15];return y*(+s*u*p-i*h*p-s*c*m+n*h*m+i*c*_-n*u*_)+E*(+t*u*_-t*h*m+s*l*m-i*l*_+i*h*d-s*u*d)+x*(+t*h*p-t*c*_-s*l*p+n*l*_+s*c*d-n*h*d)+v*(-i*c*d-t*u*p+t*c*m+i*l*p-n*l*m+n*u*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],l=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=e[9],m=e[10],_=e[11],y=e[12],E=e[13],x=e[14],v=e[15],w=p*x*h-E*m*h+E*u*_-c*x*_-p*u*v+c*m*v,M=y*m*h-d*x*h-y*u*_+l*x*_+d*u*v-l*m*v,A=d*E*h-y*p*h+y*c*_-l*E*_-d*c*v+l*p*v,R=y*p*u-d*E*u-y*c*m+l*E*m+d*c*x-l*p*x,C=t*w+n*M+i*A+s*R;if(C===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const I=1/C;return e[0]=w*I,e[1]=(E*m*s-p*x*s-E*i*_+n*x*_+p*i*v-n*m*v)*I,e[2]=(c*x*s-E*u*s+E*i*h-n*x*h-c*i*v+n*u*v)*I,e[3]=(p*u*s-c*m*s-p*i*h+n*m*h+c*i*_-n*u*_)*I,e[4]=M*I,e[5]=(d*x*s-y*m*s+y*i*_-t*x*_-d*i*v+t*m*v)*I,e[6]=(y*u*s-l*x*s-y*i*h+t*x*h+l*i*v-t*u*v)*I,e[7]=(l*m*s-d*u*s+d*i*h-t*m*h-l*i*_+t*u*_)*I,e[8]=A*I,e[9]=(y*p*s-d*E*s-y*n*_+t*E*_+d*n*v-t*p*v)*I,e[10]=(l*E*s-y*c*s+y*n*h-t*E*h-l*n*v+t*c*v)*I,e[11]=(d*c*s-l*p*s-d*n*h+t*p*h+l*n*_-t*c*_)*I,e[12]=R*I,e[13]=(d*E*i-y*p*i+y*n*m-t*E*m-d*n*x+t*p*x)*I,e[14]=(y*c*i-l*E*i-y*n*u+t*E*u+l*n*x-t*c*x)*I,e[15]=(l*p*i-d*c*i+d*n*u-t*p*u-l*n*m+t*c*m)*I,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,l=e.x,c=e.y,u=e.z,h=s*l,d=s*c;return this.set(h*l+n,h*c-i*u,h*u+i*c,0,h*c+i*u,d*c+n,d*u-i*l,0,h*u-i*c,d*u+i*l,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,l){return this.set(1,n,s,0,e,1,l,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,l=t._y,c=t._z,u=t._w,h=s+s,d=l+l,p=c+c,m=s*h,_=s*d,y=s*p,E=l*d,x=l*p,v=c*p,w=u*h,M=u*d,A=u*p,R=n.x,C=n.y,I=n.z;return i[0]=(1-(E+v))*R,i[1]=(_+A)*R,i[2]=(y-M)*R,i[3]=0,i[4]=(_-A)*C,i[5]=(1-(m+v))*C,i[6]=(x+w)*C,i[7]=0,i[8]=(y+M)*I,i[9]=(x-w)*I,i[10]=(1-(m+E))*I,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=ks.set(i[0],i[1],i[2]).length();const l=ks.set(i[4],i[5],i[6]).length(),c=ks.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],pi.copy(this);const h=1/s,d=1/l,p=1/c;return pi.elements[0]*=h,pi.elements[1]*=h,pi.elements[2]*=h,pi.elements[4]*=d,pi.elements[5]*=d,pi.elements[6]*=d,pi.elements[8]*=p,pi.elements[9]*=p,pi.elements[10]*=p,t.setFromRotationMatrix(pi),n.x=s,n.y=l,n.z=c,this}makePerspective(e,t,n,i,s,l,c=Ii){const u=this.elements,h=2*s/(t-e),d=2*s/(n-i),p=(t+e)/(t-e),m=(n+i)/(n-i);let _,y;if(c===Ii)_=-(l+s)/(l-s),y=-2*l*s/(l-s);else if(c===Sa)_=-l/(l-s),y=-l*s/(l-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=d,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=_,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,l,c=Ii){const u=this.elements,h=1/(t-e),d=1/(n-i),p=1/(l-s),m=(t+e)*h,_=(n+i)*d;let y,E;if(c===Ii)y=(l+s)*p,E=-2*p;else if(c===Sa)y=s*p,E=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*d,u[9]=0,u[13]=-_,u[2]=0,u[6]=0,u[10]=E,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const ks=new D,pi=new ut,Jx=new D(0,0,0),Kx=new D(1,1,1),xr=new D,Wl=new D,Kn=new D,Fm=new ut,zm=new Cn;class Da{constructor(e=0,t=0,n=0,i=Da.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],l=i[4],c=i[8],u=i[1],h=i[5],d=i[9],p=i[2],m=i[6],_=i[10];switch(t){case"XYZ":this._y=Math.asin(Jt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,_),this._z=Math.atan2(-l,s)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-Jt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,_),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(Jt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,_),this._z=Math.atan2(-l,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-Jt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,_),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-l,h));break;case"YZX":this._z=Math.asin(Jt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,_));break;case"XZY":this._z=Math.asin(-Jt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-d,_),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Fm.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Fm,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return zm.setFromEuler(this),this.setFromQuaternion(zm,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Da.DEFAULT_ORDER="XYZ";class hs{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Qx=0;const Bm=new D,Hs=new Cn,Zi=new ut,Xl=new D,Yo=new D,$x=new D,eS=new Cn,km=new D(1,0,0),Hm=new D(0,1,0),Vm=new D(0,0,1),tS={type:"added"},nS={type:"removed"};class Rt extends or{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Qx++}),this.uuid=ei(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Rt.DEFAULT_UP.clone();const e=new D,t=new Da,n=new Cn,i=new D(1,1,1);function s(){n.setFromEuler(t,!1)}function l(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(l),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ut},normalMatrix:{value:new pt}}),this.matrix=new ut,this.matrixWorld=new ut,this.matrixAutoUpdate=Rt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Rt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new hs,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Hs.setFromAxisAngle(e,t),this.quaternion.multiply(Hs),this}rotateOnWorldAxis(e,t){return Hs.setFromAxisAngle(e,t),this.quaternion.premultiply(Hs),this}rotateX(e){return this.rotateOnAxis(km,e)}rotateY(e){return this.rotateOnAxis(Hm,e)}rotateZ(e){return this.rotateOnAxis(Vm,e)}translateOnAxis(e,t){return Bm.copy(e).applyQuaternion(this.quaternion),this.position.add(Bm.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(km,e)}translateY(e){return this.translateOnAxis(Hm,e)}translateZ(e){return this.translateOnAxis(Vm,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Zi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Xl.copy(e):Xl.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Yo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Zi.lookAt(Yo,Xl,this.up):Zi.lookAt(Xl,Yo,this.up),this.quaternion.setFromRotationMatrix(Zi),i&&(Zi.extractRotation(i.matrixWorld),Hs.setFromRotationMatrix(Zi),this.quaternion.premultiply(Hs.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(tS)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(nS)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Zi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Zi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Zi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const l=this.children[n].getObjectByProperty(e,t);if(l!==void 0)return l}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,s=this.children.length;i<s;i++){const l=this.children[i].getObjectsByProperty(e,t);l.length>0&&(n=n.concat(l))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Yo,e,$x),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Yo,eS,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,l=i.length;s<l;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,d=u.length;h<d;h++){const p=u[h];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=l(e.geometries),u=l(e.materials),h=l(e.textures),d=l(e.images),p=l(e.shapes),m=l(e.skeletons),_=l(e.animations),y=l(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),d.length>0&&(n.images=d),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),_.length>0&&(n.animations=_),y.length>0&&(n.nodes=y)}return n.object=i,n;function l(c){const u=[];for(const h in c){const d=c[h];delete d.metadata,u.push(d)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Rt.DEFAULT_UP=new D(0,1,0);Rt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Rt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const mi=new D,Ji=new D,Oh=new D,Ki=new D,Vs=new D,Gs=new D,Gm=new D,Fh=new D,zh=new D,Bh=new D;let Yl=!1;class Vn{constructor(e=new D,t=new D,n=new D){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),mi.subVectors(e,t),i.cross(mi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){mi.subVectors(i,t),Ji.subVectors(n,t),Oh.subVectors(e,t);const l=mi.dot(mi),c=mi.dot(Ji),u=mi.dot(Oh),h=Ji.dot(Ji),d=Ji.dot(Oh),p=l*h-c*c;if(p===0)return s.set(-2,-1,-1);const m=1/p,_=(h*u-c*d)*m,y=(l*d-c*u)*m;return s.set(1-_-y,y,_)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Ki),Ki.x>=0&&Ki.y>=0&&Ki.x+Ki.y<=1}static getUV(e,t,n,i,s,l,c,u){return Yl===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Yl=!0),this.getInterpolation(e,t,n,i,s,l,c,u)}static getInterpolation(e,t,n,i,s,l,c,u){return this.getBarycoord(e,t,n,i,Ki),u.setScalar(0),u.addScaledVector(s,Ki.x),u.addScaledVector(l,Ki.y),u.addScaledVector(c,Ki.z),u}static isFrontFacing(e,t,n,i){return mi.subVectors(n,t),Ji.subVectors(e,t),mi.cross(Ji).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return mi.subVectors(this.c,this.b),Ji.subVectors(this.a,this.b),mi.cross(Ji).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Vn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Vn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return Yl===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Yl=!0),Vn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}getInterpolation(e,t,n,i,s){return Vn.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return Vn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Vn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let l,c;Vs.subVectors(i,n),Gs.subVectors(s,n),Fh.subVectors(e,n);const u=Vs.dot(Fh),h=Gs.dot(Fh);if(u<=0&&h<=0)return t.copy(n);zh.subVectors(e,i);const d=Vs.dot(zh),p=Gs.dot(zh);if(d>=0&&p<=d)return t.copy(i);const m=u*p-d*h;if(m<=0&&u>=0&&d<=0)return l=u/(u-d),t.copy(n).addScaledVector(Vs,l);Bh.subVectors(e,s);const _=Vs.dot(Bh),y=Gs.dot(Bh);if(y>=0&&_<=y)return t.copy(s);const E=_*h-u*y;if(E<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(Gs,c);const x=d*y-_*p;if(x<=0&&p-d>=0&&_-y>=0)return Gm.subVectors(s,i),c=(p-d)/(p-d+(_-y)),t.copy(i).addScaledVector(Gm,c);const v=1/(x+E+m);return l=E*v,c=m*v,t.copy(n).addScaledVector(Vs,l).addScaledVector(Gs,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let iS=0;class Pn extends or{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:iS++}),this.uuid=ei(),this.name="",this.type="Material",this.blending=cs,this.side=ir,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=hd,this.blendDst=fd,this.blendEquation=is,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Bc,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=v_,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Oc,this.stencilZFail=Oc,this.stencilZPass=Oc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==cs&&(n.blending=this.blending),this.side!==ir&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const l=[];for(const c in s){const u=s[c];delete u.metadata,l.push(u)}return l}if(t){const s=i(e.textures),l=i(e.images);s.length>0&&(n.textures=s),l.length>0&&(n.images=l)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const L_={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Sr={h:0,s:0,l:0},ql={h:0,s:0,l:0};function kh(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Fe{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=hn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Lt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=Lt.workingColorSpace){return this.r=e,this.g=t,this.b=n,Lt.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=Lt.workingColorSpace){if(e=Ed(e,1),t=Jt(t,0,1),n=Jt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,l=2*n-s;this.r=kh(l,s,e+1/3),this.g=kh(l,s,e),this.b=kh(l,s,e-1/3)}return Lt.toWorkingColorSpace(this,i),this}setStyle(e,t=hn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const l=i[1],c=i[2];switch(l){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],l=s.length;if(l===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(l===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=hn){const n=L_[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=fo(e.r),this.g=fo(e.g),this.b=fo(e.b),this}copyLinearToSRGB(e){return this.r=Rh(e.r),this.g=Rh(e.g),this.b=Rh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=hn){return Lt.fromWorkingColorSpace(bn.copy(this),e),Math.round(Jt(bn.r*255,0,255))*65536+Math.round(Jt(bn.g*255,0,255))*256+Math.round(Jt(bn.b*255,0,255))}getHexString(e=hn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Lt.workingColorSpace){Lt.fromWorkingColorSpace(bn.copy(this),t);const n=bn.r,i=bn.g,s=bn.b,l=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const d=(c+l)/2;if(c===l)u=0,h=0;else{const p=l-c;switch(h=d<=.5?p/(l+c):p/(2-l-c),l){case n:u=(i-s)/p+(i<s?6:0);break;case i:u=(s-n)/p+2;break;case s:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=d,e}getRGB(e,t=Lt.workingColorSpace){return Lt.fromWorkingColorSpace(bn.copy(this),t),e.r=bn.r,e.g=bn.g,e.b=bn.b,e}getStyle(e=hn){Lt.fromWorkingColorSpace(bn.copy(this),e);const t=bn.r,n=bn.g,i=bn.b;return e!==hn?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Sr),this.setHSL(Sr.h+e,Sr.s+t,Sr.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Sr),e.getHSL(ql);const n=oa(Sr.h,ql.h,t),i=oa(Sr.s,ql.s,t),s=oa(Sr.l,ql.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const bn=new Fe;Fe.NAMES=L_;class Dr extends Pn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Fe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=La,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const er=rS();function rS(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),l=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,d=0;for(;(h&8388608)===0;)h<<=1,d-=8388608;h&=-8388609,d+=947912704,s[u]=h|d}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)l[u]=u<<23;l[31]=1199570944,l[32]=2147483648;for(let u=33;u<63;++u)l[u]=2147483648+(u-32<<23);l[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:l,offsetTable:c}}function Hn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=Jt(r,-65504,65504),er.floatView[0]=r;const e=er.uint32View[0],t=e>>23&511;return er.baseTable[t]+((e&8388607)>>er.shiftTable[t])}function na(r){const e=r>>10;return er.uint32View[0]=er.mantissaTable[er.offsetTable[e]+(r&1023)]+er.exponentTable[e],er.floatView[0]}const sS={toHalfFloat:Hn,fromHalfFloat:na},an=new D,jl=new ue;class Ot{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=xa,this.updateRange={offset:0,count:-1},this.gpuType=Li,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)jl.fromBufferAttribute(this,t),jl.applyMatrix3(e),this.setXY(t,jl.x,jl.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.applyMatrix3(e),this.setXYZ(t,an.x,an.y,an.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.applyMatrix4(e),this.setXYZ(t,an.x,an.y,an.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.applyNormalMatrix(e),this.setXYZ(t,an.x,an.y,an.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)an.fromBufferAttribute(this,t),an.transformDirection(e),this.setXYZ(t,an.x,an.y,an.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=Wn(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ft(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Wn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Wn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Wn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Wn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array),s=ft(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==xa&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class oS extends Ot{constructor(e,t,n){super(new Int8Array(e),t,n)}}class aS extends Ot{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class lS extends Ot{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class cS extends Ot{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Ad extends Ot{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class uS extends Ot{constructor(e,t,n){super(new Int32Array(e),t,n)}}class bd extends Ot{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class hS extends Ot{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=na(this.array[e*this.itemSize]);return this.normalized&&(t=Wn(t,this.array)),t}setX(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize]=Hn(t),this}getY(e){let t=na(this.array[e*this.itemSize+1]);return this.normalized&&(t=Wn(t,this.array)),t}setY(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+1]=Hn(t),this}getZ(e){let t=na(this.array[e*this.itemSize+2]);return this.normalized&&(t=Wn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+2]=Hn(t),this}getW(e){let t=na(this.array[e*this.itemSize+3]);return this.normalized&&(t=Wn(t,this.array)),t}setW(e,t){return this.normalized&&(t=ft(t,this.array)),this.array[e*this.itemSize+3]=Hn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array)),this.array[e+0]=Hn(t),this.array[e+1]=Hn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array)),this.array[e+0]=Hn(t),this.array[e+1]=Hn(n),this.array[e+2]=Hn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array),s=ft(s,this.array)),this.array[e+0]=Hn(t),this.array[e+1]=Hn(n),this.array[e+2]=Hn(i),this.array[e+3]=Hn(s),this}}class We extends Ot{constructor(e,t,n){super(new Float32Array(e),t,n)}}class fS extends Ot{constructor(e,t,n){super(new Float64Array(e),t,n)}}let dS=0;const ci=new ut,Hh=new Rt,Ws=new D,Qn=new zi,qo=new zi,_n=new D;class vt extends or{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:dS++}),this.uuid=ei(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(R_(e)?bd:Ad)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new pt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return ci.makeRotationFromQuaternion(e),this.applyMatrix4(ci),this}rotateX(e){return ci.makeRotationX(e),this.applyMatrix4(ci),this}rotateY(e){return ci.makeRotationY(e),this.applyMatrix4(ci),this}rotateZ(e){return ci.makeRotationZ(e),this.applyMatrix4(ci),this}translate(e,t,n){return ci.makeTranslation(e,t,n),this.applyMatrix4(ci),this}scale(e,t,n){return ci.makeScale(e,t,n),this.applyMatrix4(ci),this}lookAt(e){return Hh.lookAt(e),Hh.updateMatrix(),this.applyMatrix4(Hh.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Ws).negate(),this.translate(Ws.x,Ws.y,Ws.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new We(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new zi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Qn.setFromBufferAttribute(s),this.morphTargetsRelative?(_n.addVectors(this.boundingBox.min,Qn.min),this.boundingBox.expandByPoint(_n),_n.addVectors(this.boundingBox.max,Qn.max),this.boundingBox.expandByPoint(_n)):(this.boundingBox.expandByPoint(Qn.min),this.boundingBox.expandByPoint(Qn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new yi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new D,1/0);return}if(e){const n=this.boundingSphere.center;if(Qn.setFromBufferAttribute(e),t)for(let s=0,l=t.length;s<l;s++){const c=t[s];qo.setFromBufferAttribute(c),this.morphTargetsRelative?(_n.addVectors(Qn.min,qo.min),Qn.expandByPoint(_n),_n.addVectors(Qn.max,qo.max),Qn.expandByPoint(_n)):(Qn.expandByPoint(qo.min),Qn.expandByPoint(qo.max))}Qn.getCenter(n);let i=0;for(let s=0,l=e.count;s<l;s++)_n.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(_n));if(t)for(let s=0,l=t.length;s<l;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,d=c.count;h<d;h++)_n.fromBufferAttribute(c,h),u&&(Ws.fromBufferAttribute(e,h),_n.add(Ws)),i=Math.max(i,n.distanceToSquared(_n))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,l=t.uv.array,c=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ot(new Float32Array(4*c),4));const u=this.getAttribute("tangent").array,h=[],d=[];for(let L=0;L<c;L++)h[L]=new D,d[L]=new D;const p=new D,m=new D,_=new D,y=new ue,E=new ue,x=new ue,v=new D,w=new D;function M(L,H,te){p.fromArray(i,L*3),m.fromArray(i,H*3),_.fromArray(i,te*3),y.fromArray(l,L*2),E.fromArray(l,H*2),x.fromArray(l,te*2),m.sub(p),_.sub(p),E.sub(y),x.sub(y);const se=1/(E.x*x.y-x.x*E.y);isFinite(se)&&(v.copy(m).multiplyScalar(x.y).addScaledVector(_,-E.y).multiplyScalar(se),w.copy(_).multiplyScalar(E.x).addScaledVector(m,-x.x).multiplyScalar(se),h[L].add(v),h[H].add(v),h[te].add(v),d[L].add(w),d[H].add(w),d[te].add(w))}let A=this.groups;A.length===0&&(A=[{start:0,count:n.length}]);for(let L=0,H=A.length;L<H;++L){const te=A[L],se=te.start,G=te.count;for(let $=se,oe=se+G;$<oe;$+=3)M(n[$+0],n[$+1],n[$+2])}const R=new D,C=new D,I=new D,z=new D;function b(L){I.fromArray(s,L*3),z.copy(I);const H=h[L];R.copy(H),R.sub(I.multiplyScalar(I.dot(H))).normalize(),C.crossVectors(z,H);const se=C.dot(d[L])<0?-1:1;u[L*4]=R.x,u[L*4+1]=R.y,u[L*4+2]=R.z,u[L*4+3]=se}for(let L=0,H=A.length;L<H;++L){const te=A[L],se=te.start,G=te.count;for(let $=se,oe=se+G;$<oe;$+=3)b(n[$+0]),b(n[$+1]),b(n[$+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Ot(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,_=n.count;m<_;m++)n.setXYZ(m,0,0,0);const i=new D,s=new D,l=new D,c=new D,u=new D,h=new D,d=new D,p=new D;if(e)for(let m=0,_=e.count;m<_;m+=3){const y=e.getX(m+0),E=e.getX(m+1),x=e.getX(m+2);i.fromBufferAttribute(t,y),s.fromBufferAttribute(t,E),l.fromBufferAttribute(t,x),d.subVectors(l,s),p.subVectors(i,s),d.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,E),h.fromBufferAttribute(n,x),c.add(d),u.add(d),h.add(d),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(E,u.x,u.y,u.z),n.setXYZ(x,h.x,h.y,h.z)}else for(let m=0,_=t.count;m<_;m+=3)i.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),l.fromBufferAttribute(t,m+2),d.subVectors(l,s),p.subVectors(i,s),d.cross(p),n.setXYZ(m+0,d.x,d.y,d.z),n.setXYZ(m+1,d.x,d.y,d.z),n.setXYZ(m+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)_n.fromBufferAttribute(e,t),_n.normalize(),e.setXYZ(t,_n.x,_n.y,_n.z)}toNonIndexed(){function e(c,u){const h=c.array,d=c.itemSize,p=c.normalized,m=new h.constructor(u.length*d);let _=0,y=0;for(let E=0,x=u.length;E<x;E++){c.isInterleavedBufferAttribute?_=u[E]*c.data.stride+c.offset:_=u[E]*d;for(let v=0;v<d;v++)m[y++]=h[_++]}return new Ot(m,d,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new vt,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,p=h.length;d<p;d++){const m=h[d],_=e(m,n);u.push(_)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const l=this.groups;for(let c=0,u=l.length;c<u;c++){const h=l[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],d=[];for(let p=0,m=h.length;p<m;p++){const _=h[p];d.push(_.toJSON(e.data))}d.length>0&&(i[u]=d,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const d=i[h];this.setAttribute(h,d.clone(t))}const s=e.morphAttributes;for(const h in s){const d=[],p=s[h];for(let m=0,_=p.length;m<_;m++)d.push(p[m].clone(t));this.morphAttributes[h]=d}this.morphTargetsRelative=e.morphTargetsRelative;const l=e.groups;for(let h=0,d=l.length;h<d;h++){const p=l[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Wm=new ut,qr=new _s,Zl=new yi,Xm=new D,Xs=new D,Ys=new D,qs=new D,Vh=new D,Jl=new D,Kl=new ue,Ql=new ue,$l=new ue,Ym=new D,qm=new D,jm=new D,ec=new D,tc=new D;class yn extends Rt{constructor(e=new vt,t=new Dr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,l=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){Jl.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const d=c[u],p=s[u];d!==0&&(Vh.fromBufferAttribute(p,e),l?Jl.addScaledVector(Vh,d):Jl.addScaledVector(Vh.sub(t),d))}t.add(Jl)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Zl.copy(n.boundingSphere),Zl.applyMatrix4(s),qr.copy(e.ray).recast(e.near),!(Zl.containsPoint(qr.origin)===!1&&(qr.intersectSphere(Zl,Xm)===null||qr.origin.distanceToSquared(Xm)>(e.far-e.near)**2))&&(Wm.copy(s).invert(),qr.copy(e.ray).applyMatrix4(Wm),!(n.boundingBox!==null&&qr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,qr)))}_computeIntersections(e,t,n){let i;const s=this.geometry,l=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,d=s.attributes.uv1,p=s.attributes.normal,m=s.groups,_=s.drawRange;if(c!==null)if(Array.isArray(l))for(let y=0,E=m.length;y<E;y++){const x=m[y],v=l[x.materialIndex],w=Math.max(x.start,_.start),M=Math.min(c.count,Math.min(x.start+x.count,_.start+_.count));for(let A=w,R=M;A<R;A+=3){const C=c.getX(A),I=c.getX(A+1),z=c.getX(A+2);i=nc(this,v,e,n,h,d,p,C,I,z),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,_.start),E=Math.min(c.count,_.start+_.count);for(let x=y,v=E;x<v;x+=3){const w=c.getX(x),M=c.getX(x+1),A=c.getX(x+2);i=nc(this,l,e,n,h,d,p,w,M,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(l))for(let y=0,E=m.length;y<E;y++){const x=m[y],v=l[x.materialIndex],w=Math.max(x.start,_.start),M=Math.min(u.count,Math.min(x.start+x.count,_.start+_.count));for(let A=w,R=M;A<R;A+=3){const C=A,I=A+1,z=A+2;i=nc(this,v,e,n,h,d,p,C,I,z),i&&(i.faceIndex=Math.floor(A/3),i.face.materialIndex=x.materialIndex,t.push(i))}}else{const y=Math.max(0,_.start),E=Math.min(u.count,_.start+_.count);for(let x=y,v=E;x<v;x+=3){const w=x,M=x+1,A=x+2;i=nc(this,l,e,n,h,d,p,w,M,A),i&&(i.faceIndex=Math.floor(x/3),t.push(i))}}}}function pS(r,e,t,n,i,s,l,c){let u;if(e.side===Un?u=n.intersectTriangle(l,s,i,!0,c):u=n.intersectTriangle(i,s,l,e.side===ir,c),u===null)return null;tc.copy(c),tc.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(tc);return h<t.near||h>t.far?null:{distance:h,point:tc.clone(),object:r}}function nc(r,e,t,n,i,s,l,c,u,h){r.getVertexPosition(c,Xs),r.getVertexPosition(u,Ys),r.getVertexPosition(h,qs);const d=pS(r,e,t,n,Xs,Ys,qs,ec);if(d){i&&(Kl.fromBufferAttribute(i,c),Ql.fromBufferAttribute(i,u),$l.fromBufferAttribute(i,h),d.uv=Vn.getInterpolation(ec,Xs,Ys,qs,Kl,Ql,$l,new ue)),s&&(Kl.fromBufferAttribute(s,c),Ql.fromBufferAttribute(s,u),$l.fromBufferAttribute(s,h),d.uv1=Vn.getInterpolation(ec,Xs,Ys,qs,Kl,Ql,$l,new ue),d.uv2=d.uv1),l&&(Ym.fromBufferAttribute(l,c),qm.fromBufferAttribute(l,u),jm.fromBufferAttribute(l,h),d.normal=Vn.getInterpolation(ec,Xs,Ys,qs,Ym,qm,jm,new D),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));const p={a:c,b:u,c:h,normal:new D,materialIndex:0};Vn.getNormal(Xs,Ys,qs,p.normal),d.face=p}return d}class vs extends vt{constructor(e=1,t=1,n=1,i=1,s=1,l=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:l};const c=this;i=Math.floor(i),s=Math.floor(s),l=Math.floor(l);const u=[],h=[],d=[],p=[];let m=0,_=0;y("z","y","x",-1,-1,n,t,e,l,s,0),y("z","y","x",1,-1,n,t,-e,l,s,1),y("x","z","y",1,1,e,n,t,i,l,2),y("x","z","y",1,-1,e,n,-t,i,l,3),y("x","y","z",1,-1,e,t,n,i,s,4),y("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new We(h,3)),this.setAttribute("normal",new We(d,3)),this.setAttribute("uv",new We(p,2));function y(E,x,v,w,M,A,R,C,I,z,b){const L=A/I,H=R/z,te=A/2,se=R/2,G=C/2,$=I+1,oe=z+1;let ie=0,Y=0;const q=new D;for(let j=0;j<oe;j++){const k=j*H-se;for(let Q=0;Q<$;Q++){const fe=Q*L-te;q[E]=fe*w,q[x]=k*M,q[v]=G,h.push(q.x,q.y,q.z),q[E]=0,q[x]=0,q[v]=C>0?1:-1,d.push(q.x,q.y,q.z),p.push(Q/I),p.push(1-j/z),ie+=1}}for(let j=0;j<z;j++)for(let k=0;k<I;k++){const Q=m+k+$*j,fe=m+k+$*(j+1),Te=m+(k+1)+$*(j+1),be=m+(k+1)+$*j;u.push(Q,fe,be),u.push(fe,Te,be),Y+=6}c.addGroup(_,Y,b),_+=Y,m+=ie}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new vs(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function _o(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Nn(r){const e={};for(let t=0;t<r.length;t++){const n=_o(r[t]);for(const i in n)e[i]=n[i]}return e}function mS(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function I_(r){return r.getRenderTarget()===null?r.outputColorSpace:Lt.workingColorSpace}const D_={clone:_o,merge:Nn};var gS=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,_S=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Fi extends Pn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=gS,this.fragmentShader=_S,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=_o(e.uniforms),this.uniformsGroups=mS(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const l=this.uniforms[i].value;l&&l.isTexture?t.uniforms[i]={type:"t",value:l.toJSON(e).uuid}:l&&l.isColor?t.uniforms[i]={type:"c",value:l.getHex()}:l&&l.isVector2?t.uniforms[i]={type:"v2",value:l.toArray()}:l&&l.isVector3?t.uniforms[i]={type:"v3",value:l.toArray()}:l&&l.isVector4?t.uniforms[i]={type:"v4",value:l.toArray()}:l&&l.isMatrix3?t.uniforms[i]={type:"m3",value:l.toArray()}:l&&l.isMatrix4?t.uniforms[i]={type:"m4",value:l.toArray()}:t.uniforms[i]={value:l}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Na extends Rt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ut,this.projectionMatrix=new ut,this.projectionMatrixInverse=new ut,this.coordinateSystem=Ii}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class tn extends Na{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=go*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(us*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return go*2*Math.atan(Math.tan(us*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,l){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(us*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const l=this.view;if(this.view!==null&&this.view.enabled){const u=l.fullWidth,h=l.fullHeight;s+=l.offsetX*i/u,t-=l.offsetY*n/h,i*=l.width/u,n*=l.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const js=-90,Zs=1;class N_ extends Rt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new tn(js,Zs,e,t);i.layers=this.layers,this.add(i);const s=new tn(js,Zs,e,t);s.layers=this.layers,this.add(s);const l=new tn(js,Zs,e,t);l.layers=this.layers,this.add(l);const c=new tn(js,Zs,e,t);c.layers=this.layers,this.add(c);const u=new tn(js,Zs,e,t);u.layers=this.layers,this.add(u);const h=new tn(js,Zs,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,l,c,u]=t;for(const h of t)this.remove(h);if(e===Ii)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),l.up.set(0,0,1),l.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===Sa)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),l.up.set(0,0,-1),l.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,l,c,u,h,d]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),_=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const E=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,i),e.render(t,s),e.setRenderTarget(n,1,i),e.render(t,l),e.setRenderTarget(n,2,i),e.render(t,c),e.setRenderTarget(n,3,i),e.render(t,u),e.setRenderTarget(n,4,i),e.render(t,h),n.texture.generateMipmaps=E,e.setRenderTarget(n,5,i),e.render(t,d),e.setRenderTarget(p,m,_),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class Ua extends nn{constructor(e,t,n,i,s,l,c,u,h,d){e=e!==void 0?e:[],t=t!==void 0?t:rr,super(e,t,n,i,s,l,c,u,h,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class U_ extends vi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(aa("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===br?hn:$n),this.texture=new Ua(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:en}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new vs(5,5,5),s=new Fi({name:"CubemapFromEquirect",uniforms:_o(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Un,blending:nr});s.uniforms.tEquirect.value=t;const l=new yn(i,s),c=t.minFilter;return t.minFilter===Pr&&(t.minFilter=en),new N_(1,10,this).update(e,l),t.minFilter=c,l.geometry.dispose(),l.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let l=0;l<6;l++)e.setRenderTarget(this,l),e.clear(t,n,i);e.setRenderTarget(s)}}const Gh=new D,vS=new D,yS=new pt;class $i{constructor(e=new D(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Gh.subVectors(n,t).cross(vS.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Gh),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||yS.getNormalMatrix(e),i=this.coplanarPoint(Gh).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const jr=new yi,ic=new D;class Qc{constructor(e=new $i,t=new $i,n=new $i,i=new $i,s=new $i,l=new $i){this.planes=[e,t,n,i,s,l]}set(e,t,n,i,s,l){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(l),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Ii){const n=this.planes,i=e.elements,s=i[0],l=i[1],c=i[2],u=i[3],h=i[4],d=i[5],p=i[6],m=i[7],_=i[8],y=i[9],E=i[10],x=i[11],v=i[12],w=i[13],M=i[14],A=i[15];if(n[0].setComponents(u-s,m-h,x-_,A-v).normalize(),n[1].setComponents(u+s,m+h,x+_,A+v).normalize(),n[2].setComponents(u+l,m+d,x+y,A+w).normalize(),n[3].setComponents(u-l,m-d,x-y,A-w).normalize(),n[4].setComponents(u-c,m-p,x-E,A-M).normalize(),t===Ii)n[5].setComponents(u+c,m+p,x+E,A+M).normalize();else if(t===Sa)n[5].setComponents(c,p,E,M).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),jr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),jr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(jr)}intersectsSprite(e){return jr.center.set(0,0,0),jr.radius=.7071067811865476,jr.applyMatrix4(e.matrixWorld),this.intersectsSphere(jr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(ic.x=i.normal.x>0?e.max.x:e.min.x,ic.y=i.normal.y>0?e.max.y:e.min.y,ic.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(ic)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function O_(){let r=null,e=!1,t=null,n=null;function i(s,l){t(s,l),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function xS(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,d){const p=h.array,m=h.usage,_=r.createBuffer();r.bindBuffer(d,_),r.bufferData(d,p,m),h.onUploadCallback();let y;if(p instanceof Float32Array)y=r.FLOAT;else if(p instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)y=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else y=r.UNSIGNED_SHORT;else if(p instanceof Int16Array)y=r.SHORT;else if(p instanceof Uint32Array)y=r.UNSIGNED_INT;else if(p instanceof Int32Array)y=r.INT;else if(p instanceof Int8Array)y=r.BYTE;else if(p instanceof Uint8Array)y=r.UNSIGNED_BYTE;else if(p instanceof Uint8ClampedArray)y=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:_,type:y,bytesPerElement:p.BYTES_PER_ELEMENT,version:h.version}}function s(h,d,p){const m=d.array,_=d.updateRange;r.bindBuffer(p,h),_.count===-1?r.bufferSubData(p,0,m):(t?r.bufferSubData(p,_.offset*m.BYTES_PER_ELEMENT,m,_.offset,_.count):r.bufferSubData(p,_.offset*m.BYTES_PER_ELEMENT,m.subarray(_.offset,_.offset+_.count)),_.count=-1),d.onUploadCallback()}function l(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function c(h){h.isInterleavedBufferAttribute&&(h=h.data);const d=n.get(h);d&&(r.deleteBuffer(d.buffer),n.delete(h))}function u(h,d){if(h.isGLBufferAttribute){const m=n.get(h);(!m||m.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);p===void 0?n.set(h,i(h,d)):p.version<h.version&&(s(p.buffer,h,d),p.version=h.version)}return{get:l,remove:c,update:u}}class Oa extends vt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,l=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,d=u+1,p=e/c,m=t/u,_=[],y=[],E=[],x=[];for(let v=0;v<d;v++){const w=v*m-l;for(let M=0;M<h;M++){const A=M*p-s;y.push(A,-w,0),E.push(0,0,1),x.push(M/c),x.push(1-v/u)}}for(let v=0;v<u;v++)for(let w=0;w<c;w++){const M=w+h*v,A=w+h*(v+1),R=w+1+h*(v+1),C=w+1+h*v;_.push(M,A,C),_.push(A,R,C)}this.setIndex(_),this.setAttribute("position",new We(y,3)),this.setAttribute("normal",new We(E,3)),this.setAttribute("uv",new We(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Oa(e.width,e.height,e.widthSegments,e.heightSegments)}}var SS=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,MS=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,ES=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,wS=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,TS=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,AS=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,bS=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,RS=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,CS=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,PS=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,LS=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,IS=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,DS=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,NS=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,US=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,OS=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,FS=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,zS=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,BS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,kS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,HS=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,VS=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,GS=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,WS=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,XS=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,YS=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,qS=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,jS=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,ZS="gl_FragColor = linearToOutputTexel( gl_FragColor );",JS=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,KS=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,QS=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,$S=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,eM=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,tM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,nM=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,iM=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,rM=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,sM=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,oM=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,aM=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,lM=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,cM=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,uM=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,hM=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,fM=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,dM=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,pM=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,mM=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,gM=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,_M=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,vM=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,yM=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal;
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,xM=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,SM=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,MM=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,EM=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,wM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,TM=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,AM=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,bM=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,RM=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,CM=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,PM=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,LM=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,IM=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,DM=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,NM=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,UM=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,OM=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,FM=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,zM=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,BM=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,kM=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,HM=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,VM=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,GM=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,WM=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,XM=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,YM=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,qM=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,jM=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,ZM=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,JM=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,KM=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,QM=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,$M=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,eE=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,tE=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,nE=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,iE=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,rE=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,sE=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,oE=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,aE=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,lE=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,cE=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,uE=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,hE=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,fE=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,dE=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,pE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,mE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,gE=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,_E=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const vE=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,yE=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,xE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,SE=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ME=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,EE=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,wE=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,TE=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,AE=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,bE=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,RE=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,CE=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,PE=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,LE=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,IE=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,DE=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,NE=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,UE=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,OE=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,FE=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,zE=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,BE=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,kE=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,HE=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,VE=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,GE=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,WE=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,XE=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,YE=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,qE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,jE=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ZE=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,JE=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,KE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ht={alphahash_fragment:SS,alphahash_pars_fragment:MS,alphamap_fragment:ES,alphamap_pars_fragment:wS,alphatest_fragment:TS,alphatest_pars_fragment:AS,aomap_fragment:bS,aomap_pars_fragment:RS,begin_vertex:CS,beginnormal_vertex:PS,bsdfs:LS,iridescence_fragment:IS,bumpmap_pars_fragment:DS,clipping_planes_fragment:NS,clipping_planes_pars_fragment:US,clipping_planes_pars_vertex:OS,clipping_planes_vertex:FS,color_fragment:zS,color_pars_fragment:BS,color_pars_vertex:kS,color_vertex:HS,common:VS,cube_uv_reflection_fragment:GS,defaultnormal_vertex:WS,displacementmap_pars_vertex:XS,displacementmap_vertex:YS,emissivemap_fragment:qS,emissivemap_pars_fragment:jS,colorspace_fragment:ZS,colorspace_pars_fragment:JS,envmap_fragment:KS,envmap_common_pars_fragment:QS,envmap_pars_fragment:$S,envmap_pars_vertex:eM,envmap_physical_pars_fragment:fM,envmap_vertex:tM,fog_vertex:nM,fog_pars_vertex:iM,fog_fragment:rM,fog_pars_fragment:sM,gradientmap_pars_fragment:oM,lightmap_fragment:aM,lightmap_pars_fragment:lM,lights_lambert_fragment:cM,lights_lambert_pars_fragment:uM,lights_pars_begin:hM,lights_toon_fragment:dM,lights_toon_pars_fragment:pM,lights_phong_fragment:mM,lights_phong_pars_fragment:gM,lights_physical_fragment:_M,lights_physical_pars_fragment:vM,lights_fragment_begin:yM,lights_fragment_maps:xM,lights_fragment_end:SM,logdepthbuf_fragment:MM,logdepthbuf_pars_fragment:EM,logdepthbuf_pars_vertex:wM,logdepthbuf_vertex:TM,map_fragment:AM,map_pars_fragment:bM,map_particle_fragment:RM,map_particle_pars_fragment:CM,metalnessmap_fragment:PM,metalnessmap_pars_fragment:LM,morphcolor_vertex:IM,morphnormal_vertex:DM,morphtarget_pars_vertex:NM,morphtarget_vertex:UM,normal_fragment_begin:OM,normal_fragment_maps:FM,normal_pars_fragment:zM,normal_pars_vertex:BM,normal_vertex:kM,normalmap_pars_fragment:HM,clearcoat_normal_fragment_begin:VM,clearcoat_normal_fragment_maps:GM,clearcoat_pars_fragment:WM,iridescence_pars_fragment:XM,opaque_fragment:YM,packing:qM,premultiplied_alpha_fragment:jM,project_vertex:ZM,dithering_fragment:JM,dithering_pars_fragment:KM,roughnessmap_fragment:QM,roughnessmap_pars_fragment:$M,shadowmap_pars_fragment:eE,shadowmap_pars_vertex:tE,shadowmap_vertex:nE,shadowmask_pars_fragment:iE,skinbase_vertex:rE,skinning_pars_vertex:sE,skinning_vertex:oE,skinnormal_vertex:aE,specularmap_fragment:lE,specularmap_pars_fragment:cE,tonemapping_fragment:uE,tonemapping_pars_fragment:hE,transmission_fragment:fE,transmission_pars_fragment:dE,uv_pars_fragment:pE,uv_pars_vertex:mE,uv_vertex:gE,worldpos_vertex:_E,background_vert:vE,background_frag:yE,backgroundCube_vert:xE,backgroundCube_frag:SE,cube_vert:ME,cube_frag:EE,depth_vert:wE,depth_frag:TE,distanceRGBA_vert:AE,distanceRGBA_frag:bE,equirect_vert:RE,equirect_frag:CE,linedashed_vert:PE,linedashed_frag:LE,meshbasic_vert:IE,meshbasic_frag:DE,meshlambert_vert:NE,meshlambert_frag:UE,meshmatcap_vert:OE,meshmatcap_frag:FE,meshnormal_vert:zE,meshnormal_frag:BE,meshphong_vert:kE,meshphong_frag:HE,meshphysical_vert:VE,meshphysical_frag:GE,meshtoon_vert:WE,meshtoon_frag:XE,points_vert:YE,points_frag:qE,shadow_vert:jE,shadow_frag:ZE,sprite_vert:JE,sprite_frag:KE},Re={common:{diffuse:{value:new Fe(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new pt},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new pt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new pt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new pt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new pt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new pt},normalScale:{value:new ue(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new pt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new pt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new pt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new pt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Fe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Fe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0},uvTransform:{value:new pt}},sprite:{diffuse:{value:new Fe(16777215)},opacity:{value:1},center:{value:new ue(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new pt},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0}}},_i={basic:{uniforms:Nn([Re.common,Re.specularmap,Re.envmap,Re.aomap,Re.lightmap,Re.fog]),vertexShader:ht.meshbasic_vert,fragmentShader:ht.meshbasic_frag},lambert:{uniforms:Nn([Re.common,Re.specularmap,Re.envmap,Re.aomap,Re.lightmap,Re.emissivemap,Re.bumpmap,Re.normalmap,Re.displacementmap,Re.fog,Re.lights,{emissive:{value:new Fe(0)}}]),vertexShader:ht.meshlambert_vert,fragmentShader:ht.meshlambert_frag},phong:{uniforms:Nn([Re.common,Re.specularmap,Re.envmap,Re.aomap,Re.lightmap,Re.emissivemap,Re.bumpmap,Re.normalmap,Re.displacementmap,Re.fog,Re.lights,{emissive:{value:new Fe(0)},specular:{value:new Fe(1118481)},shininess:{value:30}}]),vertexShader:ht.meshphong_vert,fragmentShader:ht.meshphong_frag},standard:{uniforms:Nn([Re.common,Re.envmap,Re.aomap,Re.lightmap,Re.emissivemap,Re.bumpmap,Re.normalmap,Re.displacementmap,Re.roughnessmap,Re.metalnessmap,Re.fog,Re.lights,{emissive:{value:new Fe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag},toon:{uniforms:Nn([Re.common,Re.aomap,Re.lightmap,Re.emissivemap,Re.bumpmap,Re.normalmap,Re.displacementmap,Re.gradientmap,Re.fog,Re.lights,{emissive:{value:new Fe(0)}}]),vertexShader:ht.meshtoon_vert,fragmentShader:ht.meshtoon_frag},matcap:{uniforms:Nn([Re.common,Re.bumpmap,Re.normalmap,Re.displacementmap,Re.fog,{matcap:{value:null}}]),vertexShader:ht.meshmatcap_vert,fragmentShader:ht.meshmatcap_frag},points:{uniforms:Nn([Re.points,Re.fog]),vertexShader:ht.points_vert,fragmentShader:ht.points_frag},dashed:{uniforms:Nn([Re.common,Re.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ht.linedashed_vert,fragmentShader:ht.linedashed_frag},depth:{uniforms:Nn([Re.common,Re.displacementmap]),vertexShader:ht.depth_vert,fragmentShader:ht.depth_frag},normal:{uniforms:Nn([Re.common,Re.bumpmap,Re.normalmap,Re.displacementmap,{opacity:{value:1}}]),vertexShader:ht.meshnormal_vert,fragmentShader:ht.meshnormal_frag},sprite:{uniforms:Nn([Re.sprite,Re.fog]),vertexShader:ht.sprite_vert,fragmentShader:ht.sprite_frag},background:{uniforms:{uvTransform:{value:new pt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:ht.background_vert,fragmentShader:ht.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:ht.backgroundCube_vert,fragmentShader:ht.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:ht.cube_vert,fragmentShader:ht.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ht.equirect_vert,fragmentShader:ht.equirect_frag},distanceRGBA:{uniforms:Nn([Re.common,Re.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ht.distanceRGBA_vert,fragmentShader:ht.distanceRGBA_frag},shadow:{uniforms:Nn([Re.lights,Re.fog,{color:{value:new Fe(0)},opacity:{value:1}}]),vertexShader:ht.shadow_vert,fragmentShader:ht.shadow_frag}};_i.physical={uniforms:Nn([_i.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new pt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new pt},clearcoatNormalScale:{value:new ue(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new pt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new pt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new pt},sheen:{value:0},sheenColor:{value:new Fe(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new pt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new pt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new pt},transmissionSamplerSize:{value:new ue},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new pt},attenuationDistance:{value:0},attenuationColor:{value:new Fe(0)},specularColor:{value:new Fe(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new pt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new pt},anisotropyVector:{value:new ue},anisotropyMap:{value:null},anisotropyMapTransform:{value:new pt}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag};const rc={r:0,b:0,g:0};function QE(r,e,t,n,i,s,l){const c=new Fe(0);let u=s===!0?0:1,h,d,p=null,m=0,_=null;function y(x,v){let w=!1,M=v.isScene===!0?v.background:null;M&&M.isTexture&&(M=(v.backgroundBlurriness>0?t:e).get(M)),M===null?E(c,u):M&&M.isColor&&(E(M,1),w=!0);const A=r.xr.getEnvironmentBlendMode();A==="additive"?n.buffers.color.setClear(0,0,0,1,l):A==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,l),(r.autoClear||w)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),M&&(M.isCubeTexture||M.mapping===xo)?(d===void 0&&(d=new yn(new vs(1,1,1),new Fi({name:"BackgroundCubeMaterial",uniforms:_o(_i.backgroundCube.uniforms),vertexShader:_i.backgroundCube.vertexShader,fragmentShader:_i.backgroundCube.fragmentShader,side:Un,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(R,C,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(d)),d.material.uniforms.envMap.value=M,d.material.uniforms.flipEnvMap.value=M.isCubeTexture&&M.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=v.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,d.material.toneMapped=Lt.getTransfer(M.colorSpace)!==zt,(p!==M||m!==M.version||_!==r.toneMapping)&&(d.material.needsUpdate=!0,p=M,m=M.version,_=r.toneMapping),d.layers.enableAll(),x.unshift(d,d.geometry,d.material,0,0,null)):M&&M.isTexture&&(h===void 0&&(h=new yn(new Oa(2,2),new Fi({name:"BackgroundMaterial",uniforms:_o(_i.background.uniforms),vertexShader:_i.background.vertexShader,fragmentShader:_i.background.fragmentShader,side:ir,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=M,h.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,h.material.toneMapped=Lt.getTransfer(M.colorSpace)!==zt,M.matrixAutoUpdate===!0&&M.updateMatrix(),h.material.uniforms.uvTransform.value.copy(M.matrix),(p!==M||m!==M.version||_!==r.toneMapping)&&(h.material.needsUpdate=!0,p=M,m=M.version,_=r.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null))}function E(x,v){x.getRGB(rc,I_(r)),n.buffers.color.setClear(rc.r,rc.g,rc.b,v,l)}return{getClearColor:function(){return c},setClearColor:function(x,v=1){c.set(x),u=v,E(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(x){u=x,E(c,u)},render:y}}function $E(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),l=n.isWebGL2||s!==null,c={},u=x(null);let h=u,d=!1;function p(G,$,oe,ie,Y){let q=!1;if(l){const j=E(ie,oe,$);h!==j&&(h=j,_(h.object)),q=v(G,ie,oe,Y),q&&w(G,ie,oe,Y)}else{const j=$.wireframe===!0;(h.geometry!==ie.id||h.program!==oe.id||h.wireframe!==j)&&(h.geometry=ie.id,h.program=oe.id,h.wireframe=j,q=!0)}Y!==null&&t.update(Y,r.ELEMENT_ARRAY_BUFFER),(q||d)&&(d=!1,z(G,$,oe,ie),Y!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(Y).buffer))}function m(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function _(G){return n.isWebGL2?r.bindVertexArray(G):s.bindVertexArrayOES(G)}function y(G){return n.isWebGL2?r.deleteVertexArray(G):s.deleteVertexArrayOES(G)}function E(G,$,oe){const ie=oe.wireframe===!0;let Y=c[G.id];Y===void 0&&(Y={},c[G.id]=Y);let q=Y[$.id];q===void 0&&(q={},Y[$.id]=q);let j=q[ie];return j===void 0&&(j=x(m()),q[ie]=j),j}function x(G){const $=[],oe=[],ie=[];for(let Y=0;Y<i;Y++)$[Y]=0,oe[Y]=0,ie[Y]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:$,enabledAttributes:oe,attributeDivisors:ie,object:G,attributes:{},index:null}}function v(G,$,oe,ie){const Y=h.attributes,q=$.attributes;let j=0;const k=oe.getAttributes();for(const Q in k)if(k[Q].location>=0){const Te=Y[Q];let be=q[Q];if(be===void 0&&(Q==="instanceMatrix"&&G.instanceMatrix&&(be=G.instanceMatrix),Q==="instanceColor"&&G.instanceColor&&(be=G.instanceColor)),Te===void 0||Te.attribute!==be||be&&Te.data!==be.data)return!0;j++}return h.attributesNum!==j||h.index!==ie}function w(G,$,oe,ie){const Y={},q=$.attributes;let j=0;const k=oe.getAttributes();for(const Q in k)if(k[Q].location>=0){let Te=q[Q];Te===void 0&&(Q==="instanceMatrix"&&G.instanceMatrix&&(Te=G.instanceMatrix),Q==="instanceColor"&&G.instanceColor&&(Te=G.instanceColor));const be={};be.attribute=Te,Te&&Te.data&&(be.data=Te.data),Y[Q]=be,j++}h.attributes=Y,h.attributesNum=j,h.index=ie}function M(){const G=h.newAttributes;for(let $=0,oe=G.length;$<oe;$++)G[$]=0}function A(G){R(G,0)}function R(G,$){const oe=h.newAttributes,ie=h.enabledAttributes,Y=h.attributeDivisors;oe[G]=1,ie[G]===0&&(r.enableVertexAttribArray(G),ie[G]=1),Y[G]!==$&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](G,$),Y[G]=$)}function C(){const G=h.newAttributes,$=h.enabledAttributes;for(let oe=0,ie=$.length;oe<ie;oe++)$[oe]!==G[oe]&&(r.disableVertexAttribArray(oe),$[oe]=0)}function I(G,$,oe,ie,Y,q,j){j===!0?r.vertexAttribIPointer(G,$,oe,Y,q):r.vertexAttribPointer(G,$,oe,ie,Y,q)}function z(G,$,oe,ie){if(n.isWebGL2===!1&&(G.isInstancedMesh||ie.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;M();const Y=ie.attributes,q=oe.getAttributes(),j=$.defaultAttributeValues;for(const k in q){const Q=q[k];if(Q.location>=0){let fe=Y[k];if(fe===void 0&&(k==="instanceMatrix"&&G.instanceMatrix&&(fe=G.instanceMatrix),k==="instanceColor"&&G.instanceColor&&(fe=G.instanceColor)),fe!==void 0){const Te=fe.normalized,be=fe.itemSize,ke=t.get(fe);if(ke===void 0)continue;const He=ke.buffer,Ze=ke.type,yt=ke.bytesPerElement,Ct=n.isWebGL2===!0&&(Ze===r.INT||Ze===r.UNSIGNED_INT||fe.gpuType===md);if(fe.isInterleavedBufferAttribute){const Ve=fe.data,B=Ve.stride,_e=fe.offset;if(Ve.isInstancedInterleavedBuffer){for(let he=0;he<Q.locationSize;he++)R(Q.location+he,Ve.meshPerAttribute);G.isInstancedMesh!==!0&&ie._maxInstanceCount===void 0&&(ie._maxInstanceCount=Ve.meshPerAttribute*Ve.count)}else for(let he=0;he<Q.locationSize;he++)A(Q.location+he);r.bindBuffer(r.ARRAY_BUFFER,He);for(let he=0;he<Q.locationSize;he++)I(Q.location+he,be/Q.locationSize,Ze,Te,B*yt,(_e+be/Q.locationSize*he)*yt,Ct)}else{if(fe.isInstancedBufferAttribute){for(let Ve=0;Ve<Q.locationSize;Ve++)R(Q.location+Ve,fe.meshPerAttribute);G.isInstancedMesh!==!0&&ie._maxInstanceCount===void 0&&(ie._maxInstanceCount=fe.meshPerAttribute*fe.count)}else for(let Ve=0;Ve<Q.locationSize;Ve++)A(Q.location+Ve);r.bindBuffer(r.ARRAY_BUFFER,He);for(let Ve=0;Ve<Q.locationSize;Ve++)I(Q.location+Ve,be/Q.locationSize,Ze,Te,be*yt,be/Q.locationSize*Ve*yt,Ct)}}else if(j!==void 0){const Te=j[k];if(Te!==void 0)switch(Te.length){case 2:r.vertexAttrib2fv(Q.location,Te);break;case 3:r.vertexAttrib3fv(Q.location,Te);break;case 4:r.vertexAttrib4fv(Q.location,Te);break;default:r.vertexAttrib1fv(Q.location,Te)}}}}C()}function b(){te();for(const G in c){const $=c[G];for(const oe in $){const ie=$[oe];for(const Y in ie)y(ie[Y].object),delete ie[Y];delete $[oe]}delete c[G]}}function L(G){if(c[G.id]===void 0)return;const $=c[G.id];for(const oe in $){const ie=$[oe];for(const Y in ie)y(ie[Y].object),delete ie[Y];delete $[oe]}delete c[G.id]}function H(G){for(const $ in c){const oe=c[$];if(oe[G.id]===void 0)continue;const ie=oe[G.id];for(const Y in ie)y(ie[Y].object),delete ie[Y];delete oe[G.id]}}function te(){se(),d=!0,h!==u&&(h=u,_(h.object))}function se(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:p,reset:te,resetDefaultState:se,dispose:b,releaseStatesOfGeometry:L,releaseStatesOfProgram:H,initAttributes:M,enableAttribute:A,disableUnusedAttributes:C}}function ew(r,e,t,n){const i=n.isWebGL2;let s;function l(h){s=h}function c(h,d){r.drawArrays(s,h,d),t.update(d,s,1)}function u(h,d,p){if(p===0)return;let m,_;if(i)m=r,_="drawArraysInstanced";else if(m=e.get("ANGLE_instanced_arrays"),_="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[_](s,h,d,p),t.update(d,s,p)}this.setMode=l,this.render=c,this.renderInstances=u}function tw(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const I=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(I.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(I){if(I==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";I="mediump"}return I==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const l=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let c=t.precision!==void 0?t.precision:"highp";const u=s(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=l||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,p=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=r.getParameter(r.MAX_TEXTURE_SIZE),y=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),E=r.getParameter(r.MAX_VERTEX_ATTRIBS),x=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),v=r.getParameter(r.MAX_VARYING_VECTORS),w=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),M=m>0,A=l||e.has("OES_texture_float"),R=M&&A,C=l?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:l,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:c,logarithmicDepthBuffer:d,maxTextures:p,maxVertexTextures:m,maxTextureSize:_,maxCubemapSize:y,maxAttributes:E,maxVertexUniforms:x,maxVaryings:v,maxFragmentUniforms:w,vertexTextures:M,floatFragmentTextures:A,floatVertexTextures:R,maxSamples:C}}function nw(r){const e=this;let t=null,n=0,i=!1,s=!1;const l=new $i,c=new pt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const _=p.length!==0||m||n!==0||i;return i=m,n=p.length,_},this.beginShadows=function(){s=!0,d(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=d(p,m,0)},this.setState=function(p,m,_){const y=p.clippingPlanes,E=p.clipIntersection,x=p.clipShadows,v=r.get(p);if(!i||y===null||y.length===0||s&&!x)s?d(null):h();else{const w=s?0:n,M=w*4;let A=v.clippingState||null;u.value=A,A=d(y,m,M,_);for(let R=0;R!==M;++R)A[R]=t[R];v.clippingState=A,this.numIntersection=E?this.numPlanes:0,this.numPlanes+=w}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(p,m,_,y){const E=p!==null?p.length:0;let x=null;if(E!==0){if(x=u.value,y!==!0||x===null){const v=_+E*4,w=m.matrixWorldInverse;c.getNormalMatrix(w),(x===null||x.length<v)&&(x=new Float32Array(v));for(let M=0,A=_;M!==E;++M,A+=4)l.copy(p[M]).applyMatrix4(w,c),l.normal.toArray(x,A),x[A+3]=l.constant}u.value=x,u.needsUpdate=!0}return e.numPlanes=E,e.numIntersection=0,x}}function iw(r){let e=new WeakMap;function t(l,c){return c===ua?l.mapping=rr:c===ha&&(l.mapping=Cr),l}function n(l){if(l&&l.isTexture&&l.isRenderTargetTexture===!1){const c=l.mapping;if(c===ua||c===ha)if(e.has(l)){const u=e.get(l).texture;return t(u,l.mapping)}else{const u=l.image;if(u&&u.height>0){const h=new U_(u.height/2);return h.fromEquirectangularTexture(r,l),e.set(l,h),l.addEventListener("dispose",i),t(h.texture,l.mapping)}else return null}}return l}function i(l){const c=l.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Rr extends Na{constructor(e=-1,t=1,n=1,i=-1,s=.1,l=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=l,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,l){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=l,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,l=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,l=s+h*this.view.width,c-=d*this.view.offsetY,u=c-d*this.view.height}this.projectionMatrix.makeOrthographic(s,l,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const lo=4,Zm=[.125,.215,.35,.446,.526,.582],rs=20,Wh=new Rr,Jm=new Fe;let Xh=null;const ns=(1+Math.sqrt(5))/2,Js=1/ns,Km=[new D(1,1,1),new D(-1,1,1),new D(1,1,-1),new D(-1,1,-1),new D(0,ns,Js),new D(0,ns,-Js),new D(Js,0,ns),new D(-Js,0,ns),new D(ns,Js,0),new D(-ns,Js,0)];class $f{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Xh=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=eg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=$m(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Xh),e.scissorTest=!1,sc(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===rr||e.mapping===Cr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Xh=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:en,minFilter:en,generateMipmaps:!1,type:mo,format:Gn,colorSpace:Oi,depthBuffer:!1},i=Qm(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Qm(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=rw(s)),this._blurMaterial=sw(s,e,t)}return i}_compileMaterial(e){const t=new yn(this._lodPlanes[0],e);this._renderer.compile(t,Wh)}_sceneToCubeUV(e,t,n,i){const c=new tn(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,p=d.autoClear,m=d.toneMapping;d.getClearColor(Jm),d.toneMapping=Di,d.autoClear=!1;const _=new Dr({name:"PMREM.Background",side:Un,depthWrite:!1,depthTest:!1}),y=new yn(new vs,_);let E=!1;const x=e.background;x?x.isColor&&(_.color.copy(x),e.background=null,E=!0):(_.color.copy(Jm),E=!0);for(let v=0;v<6;v++){const w=v%3;w===0?(c.up.set(0,u[v],0),c.lookAt(h[v],0,0)):w===1?(c.up.set(0,0,u[v]),c.lookAt(0,h[v],0)):(c.up.set(0,u[v],0),c.lookAt(0,0,h[v]));const M=this._cubeSize;sc(i,w*M,v>2?M:0,M,M),d.setRenderTarget(i),E&&d.render(y,c),d.render(e,c)}y.geometry.dispose(),y.material.dispose(),d.toneMapping=m,d.autoClear=p,e.background=x}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===rr||e.mapping===Cr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=eg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=$m());const s=i?this._cubemapMaterial:this._equirectMaterial,l=new yn(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;sc(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(l,Wh)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),l=Km[(i-1)%Km.length];this._blur(e,i-1,i,s,l)}t.autoClear=n}_blur(e,t,n,i,s){const l=this._pingPongRenderTarget;this._halfBlur(e,l,t,n,i,"latitudinal",s),this._halfBlur(l,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,l,c){const u=this._renderer,h=this._blurMaterial;l!=="latitudinal"&&l!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,p=new yn(this._lodPlanes[i],h),m=h.uniforms,_=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*_):2*Math.PI/(2*rs-1),E=s/y,x=isFinite(s)?1+Math.floor(d*E):rs;x>rs&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${x} samples when the maximum is set to ${rs}`);const v=[];let w=0;for(let I=0;I<rs;++I){const z=I/E,b=Math.exp(-z*z/2);v.push(b),I===0?w+=b:I<x&&(w+=2*b)}for(let I=0;I<v.length;I++)v[I]=v[I]/w;m.envMap.value=e.texture,m.samples.value=x,m.weights.value=v,m.latitudinal.value=l==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:M}=this;m.dTheta.value=y,m.mipInt.value=M-n;const A=this._sizeLods[i],R=3*A*(i>M-lo?i-M+lo:0),C=4*(this._cubeSize-A);sc(t,R,C,3*A,2*A),u.setRenderTarget(t),u.render(p,Wh)}}function rw(r){const e=[],t=[],n=[];let i=r;const s=r-lo+1+Zm.length;for(let l=0;l<s;l++){const c=Math.pow(2,i);t.push(c);let u=1/c;l>r-lo?u=Zm[l-r+lo-1]:l===0&&(u=0),n.push(u);const h=1/(c-2),d=-h,p=1+h,m=[d,d,p,d,p,p,d,d,p,p,d,p],_=6,y=6,E=3,x=2,v=1,w=new Float32Array(E*y*_),M=new Float32Array(x*y*_),A=new Float32Array(v*y*_);for(let C=0;C<_;C++){const I=C%3*2/3-1,z=C>2?0:-1,b=[I,z,0,I+2/3,z,0,I+2/3,z+1,0,I,z,0,I+2/3,z+1,0,I,z+1,0];w.set(b,E*y*C),M.set(m,x*y*C);const L=[C,C,C,C,C,C];A.set(L,v*y*C)}const R=new vt;R.setAttribute("position",new Ot(w,E)),R.setAttribute("uv",new Ot(M,x)),R.setAttribute("faceIndex",new Ot(A,v)),e.push(R),i>lo&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Qm(r,e,t){const n=new vi(r,e,t);return n.texture.mapping=xo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function sc(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function sw(r,e,t){const n=new Float32Array(rs),i=new D(0,1,0);return new Fi({name:"SphericalGaussianBlur",defines:{n:rs,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Rd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:nr,depthTest:!1,depthWrite:!1})}function $m(){return new Fi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Rd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:nr,depthTest:!1,depthWrite:!1})}function eg(){return new Fi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Rd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:nr,depthTest:!1,depthWrite:!1})}function Rd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function ow(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===ua||u===ha,d=u===rr||u===Cr;if(h||d)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let p=e.get(c);return t===null&&(t=new $f(r)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),e.set(c,p),p.texture}else{if(e.has(c))return e.get(c).texture;{const p=c.image;if(h&&p&&p.height>0||d&&p&&i(p)){t===null&&(t=new $f(r));const m=h?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,m),c.addEventListener("dispose",s),m.texture}else return null}}}return c}function i(c){let u=0;const h=6;for(let d=0;d<h;d++)c[d]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function l(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:l}}function aw(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function lw(r,e,t,n){const i={},s=new WeakMap;function l(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const E=m.morphAttributes[y];for(let x=0,v=E.length;x<v;x++)e.remove(E[x])}m.removeEventListener("dispose",l),delete i[m.id];const _=s.get(m);_&&(e.remove(_),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",l),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],r.ARRAY_BUFFER);const _=p.morphAttributes;for(const y in _){const E=_[y];for(let x=0,v=E.length;x<v;x++)e.update(E[x],r.ARRAY_BUFFER)}}function h(p){const m=[],_=p.index,y=p.attributes.position;let E=0;if(_!==null){const w=_.array;E=_.version;for(let M=0,A=w.length;M<A;M+=3){const R=w[M+0],C=w[M+1],I=w[M+2];m.push(R,C,C,I,I,R)}}else if(y!==void 0){const w=y.array;E=y.version;for(let M=0,A=w.length/3-1;M<A;M+=3){const R=M+0,C=M+1,I=M+2;m.push(R,C,C,I,I,R)}}else return;const x=new(R_(m)?bd:Ad)(m,1);x.version=E;const v=s.get(p);v&&e.remove(v),s.set(p,x)}function d(p){const m=s.get(p);if(m){const _=p.index;_!==null&&m.version<_.version&&h(p)}else h(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:d}}function cw(r,e,t,n){const i=n.isWebGL2;let s;function l(m){s=m}let c,u;function h(m){c=m.type,u=m.bytesPerElement}function d(m,_){r.drawElements(s,_,c,m*u),t.update(_,s,1)}function p(m,_,y){if(y===0)return;let E,x;if(i)E=r,x="drawElementsInstanced";else if(E=e.get("ANGLE_instanced_arrays"),x="drawElementsInstancedANGLE",E===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}E[x](s,_,c,m*u,y),t.update(_,s,y)}this.setMode=l,this.setIndex=h,this.render=d,this.renderInstances=p}function uw(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,l,c){switch(t.calls++,l){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",l);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function hw(r,e){return r[0]-e[0]}function fw(r,e){return Math.abs(e[1])-Math.abs(r[1])}function dw(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,l=new It,c=[];for(let h=0;h<8;h++)c[h]=[h,0];function u(h,d,p){const m=h.morphTargetInfluences;if(e.isWebGL2===!0){const _=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,y=_!==void 0?_.length:0;let E=s.get(d);if(E===void 0||E.count!==y){let G=function(){te.dispose(),s.delete(d),d.removeEventListener("dispose",G)};E!==void 0&&E.texture.dispose();const w=d.morphAttributes.position!==void 0,M=d.morphAttributes.normal!==void 0,A=d.morphAttributes.color!==void 0,R=d.morphAttributes.position||[],C=d.morphAttributes.normal||[],I=d.morphAttributes.color||[];let z=0;w===!0&&(z=1),M===!0&&(z=2),A===!0&&(z=3);let b=d.attributes.position.count*z,L=1;b>e.maxTextureSize&&(L=Math.ceil(b/e.maxTextureSize),b=e.maxTextureSize);const H=new Float32Array(b*L*4*y),te=new Kc(H,b,L,y);te.type=Li,te.needsUpdate=!0;const se=z*4;for(let $=0;$<y;$++){const oe=R[$],ie=C[$],Y=I[$],q=b*L*4*$;for(let j=0;j<oe.count;j++){const k=j*se;w===!0&&(l.fromBufferAttribute(oe,j),H[q+k+0]=l.x,H[q+k+1]=l.y,H[q+k+2]=l.z,H[q+k+3]=0),M===!0&&(l.fromBufferAttribute(ie,j),H[q+k+4]=l.x,H[q+k+5]=l.y,H[q+k+6]=l.z,H[q+k+7]=0),A===!0&&(l.fromBufferAttribute(Y,j),H[q+k+8]=l.x,H[q+k+9]=l.y,H[q+k+10]=l.z,H[q+k+11]=Y.itemSize===4?l.w:1)}}E={count:y,texture:te,size:new ue(b,L)},s.set(d,E),d.addEventListener("dispose",G)}let x=0;for(let w=0;w<m.length;w++)x+=m[w];const v=d.morphTargetsRelative?1:1-x;p.getUniforms().setValue(r,"morphTargetBaseInfluence",v),p.getUniforms().setValue(r,"morphTargetInfluences",m),p.getUniforms().setValue(r,"morphTargetsTexture",E.texture,t),p.getUniforms().setValue(r,"morphTargetsTextureSize",E.size)}else{const _=m===void 0?0:m.length;let y=n[d.id];if(y===void 0||y.length!==_){y=[];for(let M=0;M<_;M++)y[M]=[M,0];n[d.id]=y}for(let M=0;M<_;M++){const A=y[M];A[0]=M,A[1]=m[M]}y.sort(fw);for(let M=0;M<8;M++)M<_&&y[M][1]?(c[M][0]=y[M][0],c[M][1]=y[M][1]):(c[M][0]=Number.MAX_SAFE_INTEGER,c[M][1]=0);c.sort(hw);const E=d.morphAttributes.position,x=d.morphAttributes.normal;let v=0;for(let M=0;M<8;M++){const A=c[M],R=A[0],C=A[1];R!==Number.MAX_SAFE_INTEGER&&C?(E&&d.getAttribute("morphTarget"+M)!==E[R]&&d.setAttribute("morphTarget"+M,E[R]),x&&d.getAttribute("morphNormal"+M)!==x[R]&&d.setAttribute("morphNormal"+M,x[R]),i[M]=C,v+=C):(E&&d.hasAttribute("morphTarget"+M)===!0&&d.deleteAttribute("morphTarget"+M),x&&d.hasAttribute("morphNormal"+M)===!0&&d.deleteAttribute("morphNormal"+M),i[M]=0)}const w=d.morphTargetsRelative?1:1-v;p.getUniforms().setValue(r,"morphTargetBaseInfluence",w),p.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:u}}function pw(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,d=u.geometry,p=e.get(u,d);if(i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),i.get(u)!==h&&(t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER),i.set(u,h))),u.isSkinnedMesh){const m=u.skeleton;i.get(m)!==h&&(m.update(),i.set(m,h))}return p}function l(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:l}}const F_=new nn,z_=new Kc,B_=new Td,k_=new Ua,tg=[],ng=[],ig=new Float32Array(16),rg=new Float32Array(9),sg=new Float32Array(4);function So(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=tg[i];if(s===void 0&&(s=new Float32Array(i),tg[i]=s),e!==0){n.toArray(s,0);for(let l=1,c=0;l!==e;++l)c+=t,r[l].toArray(s,c)}return s}function fn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function dn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function $c(r,e){let t=ng[e];t===void 0&&(t=new Int32Array(e),ng[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function mw(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function gw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(fn(t,e))return;r.uniform2fv(this.addr,e),dn(t,e)}}function _w(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(fn(t,e))return;r.uniform3fv(this.addr,e),dn(t,e)}}function vw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(fn(t,e))return;r.uniform4fv(this.addr,e),dn(t,e)}}function yw(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(fn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),dn(t,e)}else{if(fn(t,n))return;sg.set(n),r.uniformMatrix2fv(this.addr,!1,sg),dn(t,n)}}function xw(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(fn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),dn(t,e)}else{if(fn(t,n))return;rg.set(n),r.uniformMatrix3fv(this.addr,!1,rg),dn(t,n)}}function Sw(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(fn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),dn(t,e)}else{if(fn(t,n))return;ig.set(n),r.uniformMatrix4fv(this.addr,!1,ig),dn(t,n)}}function Mw(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function Ew(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(fn(t,e))return;r.uniform2iv(this.addr,e),dn(t,e)}}function ww(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(fn(t,e))return;r.uniform3iv(this.addr,e),dn(t,e)}}function Tw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(fn(t,e))return;r.uniform4iv(this.addr,e),dn(t,e)}}function Aw(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function bw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(fn(t,e))return;r.uniform2uiv(this.addr,e),dn(t,e)}}function Rw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(fn(t,e))return;r.uniform3uiv(this.addr,e),dn(t,e)}}function Cw(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(fn(t,e))return;r.uniform4uiv(this.addr,e),dn(t,e)}}function Pw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||F_,i)}function Lw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||B_,i)}function Iw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||k_,i)}function Dw(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||z_,i)}function Nw(r){switch(r){case 5126:return mw;case 35664:return gw;case 35665:return _w;case 35666:return vw;case 35674:return yw;case 35675:return xw;case 35676:return Sw;case 5124:case 35670:return Mw;case 35667:case 35671:return Ew;case 35668:case 35672:return ww;case 35669:case 35673:return Tw;case 5125:return Aw;case 36294:return bw;case 36295:return Rw;case 36296:return Cw;case 35678:case 36198:case 36298:case 36306:case 35682:return Pw;case 35679:case 36299:case 36307:return Lw;case 35680:case 36300:case 36308:case 36293:return Iw;case 36289:case 36303:case 36311:case 36292:return Dw}}function Uw(r,e){r.uniform1fv(this.addr,e)}function Ow(r,e){const t=So(e,this.size,2);r.uniform2fv(this.addr,t)}function Fw(r,e){const t=So(e,this.size,3);r.uniform3fv(this.addr,t)}function zw(r,e){const t=So(e,this.size,4);r.uniform4fv(this.addr,t)}function Bw(r,e){const t=So(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function kw(r,e){const t=So(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function Hw(r,e){const t=So(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function Vw(r,e){r.uniform1iv(this.addr,e)}function Gw(r,e){r.uniform2iv(this.addr,e)}function Ww(r,e){r.uniform3iv(this.addr,e)}function Xw(r,e){r.uniform4iv(this.addr,e)}function Yw(r,e){r.uniform1uiv(this.addr,e)}function qw(r,e){r.uniform2uiv(this.addr,e)}function jw(r,e){r.uniform3uiv(this.addr,e)}function Zw(r,e){r.uniform4uiv(this.addr,e)}function Jw(r,e,t){const n=this.cache,i=e.length,s=$c(t,i);fn(n,s)||(r.uniform1iv(this.addr,s),dn(n,s));for(let l=0;l!==i;++l)t.setTexture2D(e[l]||F_,s[l])}function Kw(r,e,t){const n=this.cache,i=e.length,s=$c(t,i);fn(n,s)||(r.uniform1iv(this.addr,s),dn(n,s));for(let l=0;l!==i;++l)t.setTexture3D(e[l]||B_,s[l])}function Qw(r,e,t){const n=this.cache,i=e.length,s=$c(t,i);fn(n,s)||(r.uniform1iv(this.addr,s),dn(n,s));for(let l=0;l!==i;++l)t.setTextureCube(e[l]||k_,s[l])}function $w(r,e,t){const n=this.cache,i=e.length,s=$c(t,i);fn(n,s)||(r.uniform1iv(this.addr,s),dn(n,s));for(let l=0;l!==i;++l)t.setTexture2DArray(e[l]||z_,s[l])}function e1(r){switch(r){case 5126:return Uw;case 35664:return Ow;case 35665:return Fw;case 35666:return zw;case 35674:return Bw;case 35675:return kw;case 35676:return Hw;case 5124:case 35670:return Vw;case 35667:case 35671:return Gw;case 35668:case 35672:return Ww;case 35669:case 35673:return Xw;case 5125:return Yw;case 36294:return qw;case 36295:return jw;case 36296:return Zw;case 35678:case 36198:case 36298:case 36306:case 35682:return Jw;case 35679:case 36299:case 36307:return Kw;case 35680:case 36300:case 36308:case 36293:return Qw;case 36289:case 36303:case 36311:case 36292:return $w}}class t1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=Nw(t.type)}}class n1{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=e1(t.type)}}class i1{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,l=i.length;s!==l;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const Yh=/(\w+)(\])?(\[|\.)?/g;function og(r,e){r.seq.push(e),r.map[e.id]=e}function r1(r,e,t){const n=r.name,i=n.length;for(Yh.lastIndex=0;;){const s=Yh.exec(n),l=Yh.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&l+2===i){og(t,h===void 0?new t1(c,r,e):new n1(c,r,e));break}else{let p=t.map[c];p===void 0&&(p=new i1(c),og(t,p)),t=p}}}class Fc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),l=e.getUniformLocation(t,s.name);r1(s,l,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,l=t.length;s!==l;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const l=e[i];l.id in t&&n.push(l)}return n}}function ag(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let s1=0;function o1(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let l=i;l<s;l++){const c=l+1;n.push(`${c===e?">":" "} ${c}: ${t[l]}`)}return n.join(`
`)}function a1(r){const e=Lt.getPrimaries(Lt.workingColorSpace),t=Lt.getPrimaries(r);let n;switch(e===t?n="":e===ya&&t===va?n="LinearDisplayP3ToLinearSRGB":e===va&&t===ya&&(n="LinearSRGBToLinearDisplayP3"),r){case Oi:case Ia:return[n,"LinearTransferOETF"];case hn:case Jc:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),[n,"LinearTransferOETF"]}}function lg(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const l=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+o1(r.getShaderSource(e),l)}else return i}function l1(r,e){const t=a1(e);return`vec4 ${r}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function c1(r,e){let t;switch(e){case $0:t="Linear";break;case e_:t="Reinhard";break;case t_:t="OptimizedCineon";break;case dd:t="ACESFilmic";break;case n_:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function u1(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ia).join(`
`)}function h1(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function f1(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),l=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[l]={type:s.type,location:r.getAttribLocation(e,l),locationSize:c}}return t}function ia(r){return r!==""}function cg(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function ug(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const d1=/^[ \t]*#include +<([\w\d./]+)>/gm;function ed(r){return r.replace(d1,m1)}const p1=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function m1(r,e){let t=ht[e];if(t===void 0){const n=p1.get(e);if(n!==void 0)t=ht[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return ed(t)}const g1=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function hg(r){return r.replace(g1,_1)}function _1(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function fg(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function v1(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Yc?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===ra?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===gi&&(e="SHADOWMAP_TYPE_VSM"),e}function y1(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case rr:case Cr:e="ENVMAP_TYPE_CUBE";break;case xo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function x1(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Cr:e="ENVMAP_MODE_REFRACTION";break}return e}function S1(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case La:e="ENVMAP_BLENDING_MULTIPLY";break;case K0:e="ENVMAP_BLENDING_MIX";break;case Q0:e="ENVMAP_BLENDING_ADD";break}return e}function M1(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function E1(r,e,t,n){const i=r.getContext(),s=t.defines;let l=t.vertexShader,c=t.fragmentShader;const u=v1(t),h=y1(t),d=x1(t),p=S1(t),m=M1(t),_=t.isWebGL2?"":u1(t),y=h1(s),E=i.createProgram();let x,v,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(x=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(ia).join(`
`),x.length>0&&(x+=`
`),v=[_,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(ia).join(`
`),v.length>0&&(v+=`
`)):(x=[fg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ia).join(`
`),v=[_,fg(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Di?"#define TONE_MAPPING":"",t.toneMapping!==Di?ht.tonemapping_pars_fragment:"",t.toneMapping!==Di?c1("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ht.colorspace_pars_fragment,l1("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ia).join(`
`)),l=ed(l),l=cg(l,t),l=ug(l,t),c=ed(c),c=cg(c,t),c=ug(c,t),l=hg(l),c=hg(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,x=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+x,v=["#define varying in",t.glslVersion===Kf?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Kf?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const M=w+x+l,A=w+v+c,R=ag(i,i.VERTEX_SHADER,M),C=ag(i,i.FRAGMENT_SHADER,A);if(i.attachShader(E,R),i.attachShader(E,C),t.index0AttributeName!==void 0?i.bindAttribLocation(E,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(E,0,"position"),i.linkProgram(E),r.debug.checkShaderErrors){const b=i.getProgramInfoLog(E).trim(),L=i.getShaderInfoLog(R).trim(),H=i.getShaderInfoLog(C).trim();let te=!0,se=!0;if(i.getProgramParameter(E,i.LINK_STATUS)===!1)if(te=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,E,R,C);else{const G=lg(i,R,"vertex"),$=lg(i,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(E,i.VALIDATE_STATUS)+`

Program Info Log: `+b+`
`+G+`
`+$)}else b!==""?console.warn("THREE.WebGLProgram: Program Info Log:",b):(L===""||H==="")&&(se=!1);se&&(this.diagnostics={runnable:te,programLog:b,vertexShader:{log:L,prefix:x},fragmentShader:{log:H,prefix:v}})}i.deleteShader(R),i.deleteShader(C);let I;this.getUniforms=function(){return I===void 0&&(I=new Fc(i,E)),I};let z;return this.getAttributes=function(){return z===void 0&&(z=f1(i,E)),z},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(E),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=s1++,this.cacheKey=e,this.usedTimes=1,this.program=E,this.vertexShader=R,this.fragmentShader=C,this}let w1=0;class T1{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),l=this._getShaderCacheForMaterial(e);return l.has(i)===!1&&(l.add(i),i.usedTimes++),l.has(s)===!1&&(l.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new A1(e),t.set(e,n)),n}}class A1{constructor(e){this.id=w1++,this.code=e,this.usedTimes=0}}function b1(r,e,t,n,i,s,l){const c=new hs,u=new T1,h=[],d=i.isWebGL2,p=i.logarithmicDepthBuffer,m=i.vertexTextures;let _=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function E(b){return b===0?"uv":`uv${b}`}function x(b,L,H,te,se){const G=te.fog,$=se.geometry,oe=b.isMeshStandardMaterial?te.environment:null,ie=(b.isMeshStandardMaterial?t:e).get(b.envMap||oe),Y=ie&&ie.mapping===xo?ie.image.height:null,q=y[b.type];b.precision!==null&&(_=i.getMaxPrecision(b.precision),_!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",_,"instead."));const j=$.morphAttributes.position||$.morphAttributes.normal||$.morphAttributes.color,k=j!==void 0?j.length:0;let Q=0;$.morphAttributes.position!==void 0&&(Q=1),$.morphAttributes.normal!==void 0&&(Q=2),$.morphAttributes.color!==void 0&&(Q=3);let fe,Te,be,ke;if(q){const Et=_i[q];fe=Et.vertexShader,Te=Et.fragmentShader}else fe=b.vertexShader,Te=b.fragmentShader,u.update(b),be=u.getVertexShaderID(b),ke=u.getFragmentShaderID(b);const He=r.getRenderTarget(),Ze=se.isInstancedMesh===!0,yt=!!b.map,Ct=!!b.matcap,Ve=!!ie,B=!!b.aoMap,_e=!!b.lightMap,he=!!b.bumpMap,Ee=!!b.normalMap,de=!!b.displacementMap,Xe=!!b.emissiveMap,Ne=!!b.metalnessMap,Oe=!!b.roughnessMap,et=b.anisotropy>0,mt=b.clearcoat>0,Dt=b.iridescence>0,O=b.sheen>0,P=b.transmission>0,ee=et&&!!b.anisotropyMap,Se=mt&&!!b.clearcoatMap,ge=mt&&!!b.clearcoatNormalMap,xe=mt&&!!b.clearcoatRoughnessMap,Ge=Dt&&!!b.iridescenceMap,Ae=Dt&&!!b.iridescenceThicknessMap,Pe=O&&!!b.sheenColorMap,nt=O&&!!b.sheenRoughnessMap,St=!!b.specularMap,Me=!!b.specularColorMap,Mt=!!b.specularIntensityMap,V=P&&!!b.transmissionMap,ae=P&&!!b.thicknessMap,ve=!!b.gradientMap,F=!!b.alphaMap,me=b.alphaTest>0,ye=!!b.alphaHash,Ce=!!b.extensions,Le=!!$.attributes.uv1,pe=!!$.attributes.uv2,Ue=!!$.attributes.uv3;let Je=Di;return b.toneMapped&&(He===null||He.isXRRenderTarget===!0)&&(Je=r.toneMapping),{isWebGL2:d,shaderID:q,shaderType:b.type,shaderName:b.name,vertexShader:fe,fragmentShader:Te,defines:b.defines,customVertexShaderID:be,customFragmentShaderID:ke,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:_,instancing:Ze,instancingColor:Ze&&se.instanceColor!==null,supportsVertexTextures:m,outputColorSpace:He===null?r.outputColorSpace:He.isXRRenderTarget===!0?He.texture.colorSpace:Oi,map:yt,matcap:Ct,envMap:Ve,envMapMode:Ve&&ie.mapping,envMapCubeUVHeight:Y,aoMap:B,lightMap:_e,bumpMap:he,normalMap:Ee,displacementMap:m&&de,emissiveMap:Xe,normalMapObjectSpace:Ee&&b.normalMapType===__,normalMapTangentSpace:Ee&&b.normalMapType===Ir,metalnessMap:Ne,roughnessMap:Oe,anisotropy:et,anisotropyMap:ee,clearcoat:mt,clearcoatMap:Se,clearcoatNormalMap:ge,clearcoatRoughnessMap:xe,iridescence:Dt,iridescenceMap:Ge,iridescenceThicknessMap:Ae,sheen:O,sheenColorMap:Pe,sheenRoughnessMap:nt,specularMap:St,specularColorMap:Me,specularIntensityMap:Mt,transmission:P,transmissionMap:V,thicknessMap:ae,gradientMap:ve,opaque:b.transparent===!1&&b.blending===cs,alphaMap:F,alphaTest:me,alphaHash:ye,combine:b.combine,mapUv:yt&&E(b.map.channel),aoMapUv:B&&E(b.aoMap.channel),lightMapUv:_e&&E(b.lightMap.channel),bumpMapUv:he&&E(b.bumpMap.channel),normalMapUv:Ee&&E(b.normalMap.channel),displacementMapUv:de&&E(b.displacementMap.channel),emissiveMapUv:Xe&&E(b.emissiveMap.channel),metalnessMapUv:Ne&&E(b.metalnessMap.channel),roughnessMapUv:Oe&&E(b.roughnessMap.channel),anisotropyMapUv:ee&&E(b.anisotropyMap.channel),clearcoatMapUv:Se&&E(b.clearcoatMap.channel),clearcoatNormalMapUv:ge&&E(b.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:xe&&E(b.clearcoatRoughnessMap.channel),iridescenceMapUv:Ge&&E(b.iridescenceMap.channel),iridescenceThicknessMapUv:Ae&&E(b.iridescenceThicknessMap.channel),sheenColorMapUv:Pe&&E(b.sheenColorMap.channel),sheenRoughnessMapUv:nt&&E(b.sheenRoughnessMap.channel),specularMapUv:St&&E(b.specularMap.channel),specularColorMapUv:Me&&E(b.specularColorMap.channel),specularIntensityMapUv:Mt&&E(b.specularIntensityMap.channel),transmissionMapUv:V&&E(b.transmissionMap.channel),thicknessMapUv:ae&&E(b.thicknessMap.channel),alphaMapUv:F&&E(b.alphaMap.channel),vertexTangents:!!$.attributes.tangent&&(Ee||et),vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!$.attributes.color&&$.attributes.color.itemSize===4,vertexUv1s:Le,vertexUv2s:pe,vertexUv3s:Ue,pointsUvs:se.isPoints===!0&&!!$.attributes.uv&&(yt||F),fog:!!G,useFog:b.fog===!0,fogExp2:G&&G.isFogExp2,flatShading:b.flatShading===!0,sizeAttenuation:b.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:se.isSkinnedMesh===!0,morphTargets:$.morphAttributes.position!==void 0,morphNormals:$.morphAttributes.normal!==void 0,morphColors:$.morphAttributes.color!==void 0,morphTargetsCount:k,morphTextureStride:Q,numDirLights:L.directional.length,numPointLights:L.point.length,numSpotLights:L.spot.length,numSpotLightMaps:L.spotLightMap.length,numRectAreaLights:L.rectArea.length,numHemiLights:L.hemi.length,numDirLightShadows:L.directionalShadowMap.length,numPointLightShadows:L.pointShadowMap.length,numSpotLightShadows:L.spotShadowMap.length,numSpotLightShadowsWithMaps:L.numSpotLightShadowsWithMaps,numLightProbes:L.numLightProbes,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,dithering:b.dithering,shadowMapEnabled:r.shadowMap.enabled&&H.length>0,shadowMapType:r.shadowMap.type,toneMapping:Je,useLegacyLights:r._useLegacyLights,decodeVideoTexture:yt&&b.map.isVideoTexture===!0&&Lt.getTransfer(b.map.colorSpace)===zt,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===Pi,flipSided:b.side===Un,useDepthPacking:b.depthPacking>=0,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionDerivatives:Ce&&b.extensions.derivatives===!0,extensionFragDepth:Ce&&b.extensions.fragDepth===!0,extensionDrawBuffers:Ce&&b.extensions.drawBuffers===!0,extensionShaderTextureLOD:Ce&&b.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:d||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||n.has("EXT_shader_texture_lod"),customProgramCacheKey:b.customProgramCacheKey()}}function v(b){const L=[];if(b.shaderID?L.push(b.shaderID):(L.push(b.customVertexShaderID),L.push(b.customFragmentShaderID)),b.defines!==void 0)for(const H in b.defines)L.push(H),L.push(b.defines[H]);return b.isRawShaderMaterial===!1&&(w(L,b),M(L,b),L.push(r.outputColorSpace)),L.push(b.customProgramCacheKey),L.join()}function w(b,L){b.push(L.precision),b.push(L.outputColorSpace),b.push(L.envMapMode),b.push(L.envMapCubeUVHeight),b.push(L.mapUv),b.push(L.alphaMapUv),b.push(L.lightMapUv),b.push(L.aoMapUv),b.push(L.bumpMapUv),b.push(L.normalMapUv),b.push(L.displacementMapUv),b.push(L.emissiveMapUv),b.push(L.metalnessMapUv),b.push(L.roughnessMapUv),b.push(L.anisotropyMapUv),b.push(L.clearcoatMapUv),b.push(L.clearcoatNormalMapUv),b.push(L.clearcoatRoughnessMapUv),b.push(L.iridescenceMapUv),b.push(L.iridescenceThicknessMapUv),b.push(L.sheenColorMapUv),b.push(L.sheenRoughnessMapUv),b.push(L.specularMapUv),b.push(L.specularColorMapUv),b.push(L.specularIntensityMapUv),b.push(L.transmissionMapUv),b.push(L.thicknessMapUv),b.push(L.combine),b.push(L.fogExp2),b.push(L.sizeAttenuation),b.push(L.morphTargetsCount),b.push(L.morphAttributeCount),b.push(L.numDirLights),b.push(L.numPointLights),b.push(L.numSpotLights),b.push(L.numSpotLightMaps),b.push(L.numHemiLights),b.push(L.numRectAreaLights),b.push(L.numDirLightShadows),b.push(L.numPointLightShadows),b.push(L.numSpotLightShadows),b.push(L.numSpotLightShadowsWithMaps),b.push(L.numLightProbes),b.push(L.shadowMapType),b.push(L.toneMapping),b.push(L.numClippingPlanes),b.push(L.numClipIntersection),b.push(L.depthPacking)}function M(b,L){c.disableAll(),L.isWebGL2&&c.enable(0),L.supportsVertexTextures&&c.enable(1),L.instancing&&c.enable(2),L.instancingColor&&c.enable(3),L.matcap&&c.enable(4),L.envMap&&c.enable(5),L.normalMapObjectSpace&&c.enable(6),L.normalMapTangentSpace&&c.enable(7),L.clearcoat&&c.enable(8),L.iridescence&&c.enable(9),L.alphaTest&&c.enable(10),L.vertexColors&&c.enable(11),L.vertexAlphas&&c.enable(12),L.vertexUv1s&&c.enable(13),L.vertexUv2s&&c.enable(14),L.vertexUv3s&&c.enable(15),L.vertexTangents&&c.enable(16),L.anisotropy&&c.enable(17),b.push(c.mask),c.disableAll(),L.fog&&c.enable(0),L.useFog&&c.enable(1),L.flatShading&&c.enable(2),L.logarithmicDepthBuffer&&c.enable(3),L.skinning&&c.enable(4),L.morphTargets&&c.enable(5),L.morphNormals&&c.enable(6),L.morphColors&&c.enable(7),L.premultipliedAlpha&&c.enable(8),L.shadowMapEnabled&&c.enable(9),L.useLegacyLights&&c.enable(10),L.doubleSided&&c.enable(11),L.flipSided&&c.enable(12),L.useDepthPacking&&c.enable(13),L.dithering&&c.enable(14),L.transmission&&c.enable(15),L.sheen&&c.enable(16),L.opaque&&c.enable(17),L.pointsUvs&&c.enable(18),L.decodeVideoTexture&&c.enable(19),b.push(c.mask)}function A(b){const L=y[b.type];let H;if(L){const te=_i[L];H=D_.clone(te.uniforms)}else H=b.uniforms;return H}function R(b,L){let H;for(let te=0,se=h.length;te<se;te++){const G=h[te];if(G.cacheKey===L){H=G,++H.usedTimes;break}}return H===void 0&&(H=new E1(r,L,b,s),h.push(H)),H}function C(b){if(--b.usedTimes===0){const L=h.indexOf(b);h[L]=h[h.length-1],h.pop(),b.destroy()}}function I(b){u.remove(b)}function z(){u.dispose()}return{getParameters:x,getProgramCacheKey:v,getUniforms:A,acquireProgram:R,releaseProgram:C,releaseShaderCache:I,programs:h,dispose:z}}function R1(){let r=new WeakMap;function e(s){let l=r.get(s);return l===void 0&&(l={},r.set(s,l)),l}function t(s){r.delete(s)}function n(s,l,c){r.get(s)[l]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function C1(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function dg(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function pg(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function l(p,m,_,y,E,x){let v=r[e];return v===void 0?(v={id:p.id,object:p,geometry:m,material:_,groupOrder:y,renderOrder:p.renderOrder,z:E,group:x},r[e]=v):(v.id=p.id,v.object=p,v.geometry=m,v.material=_,v.groupOrder=y,v.renderOrder=p.renderOrder,v.z=E,v.group=x),e++,v}function c(p,m,_,y,E,x){const v=l(p,m,_,y,E,x);_.transmission>0?n.push(v):_.transparent===!0?i.push(v):t.push(v)}function u(p,m,_,y,E,x){const v=l(p,m,_,y,E,x);_.transmission>0?n.unshift(v):_.transparent===!0?i.unshift(v):t.unshift(v)}function h(p,m){t.length>1&&t.sort(p||C1),n.length>1&&n.sort(m||dg),i.length>1&&i.sort(m||dg)}function d(){for(let p=e,m=r.length;p<m;p++){const _=r[p];if(_.id===null)break;_.id=null,_.object=null,_.geometry=null,_.material=null,_.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:d,sort:h}}function P1(){let r=new WeakMap;function e(n,i){const s=r.get(n);let l;return s===void 0?(l=new pg,r.set(n,[l])):i>=s.length?(l=new pg,s.push(l)):l=s[i],l}function t(){r=new WeakMap}return{get:e,dispose:t}}function L1(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new Fe};break;case"SpotLight":t={position:new D,direction:new D,color:new Fe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new Fe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new Fe,groundColor:new Fe};break;case"RectAreaLight":t={color:new Fe,position:new D,halfWidth:new D,halfHeight:new D};break}return r[e.id]=t,t}}}function I1(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ue,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let D1=0;function N1(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function U1(r,e){const t=new L1,n=I1(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let d=0;d<9;d++)i.probe.push(new D);const s=new D,l=new ut,c=new ut;function u(d,p){let m=0,_=0,y=0;for(let te=0;te<9;te++)i.probe[te].set(0,0,0);let E=0,x=0,v=0,w=0,M=0,A=0,R=0,C=0,I=0,z=0,b=0;d.sort(N1);const L=p===!0?Math.PI:1;for(let te=0,se=d.length;te<se;te++){const G=d[te],$=G.color,oe=G.intensity,ie=G.distance,Y=G.shadow&&G.shadow.map?G.shadow.map.texture:null;if(G.isAmbientLight)m+=$.r*oe*L,_+=$.g*oe*L,y+=$.b*oe*L;else if(G.isLightProbe){for(let q=0;q<9;q++)i.probe[q].addScaledVector(G.sh.coefficients[q],oe);b++}else if(G.isDirectionalLight){const q=t.get(G);if(q.color.copy(G.color).multiplyScalar(G.intensity*L),G.castShadow){const j=G.shadow,k=n.get(G);k.shadowBias=j.bias,k.shadowNormalBias=j.normalBias,k.shadowRadius=j.radius,k.shadowMapSize=j.mapSize,i.directionalShadow[E]=k,i.directionalShadowMap[E]=Y,i.directionalShadowMatrix[E]=G.shadow.matrix,A++}i.directional[E]=q,E++}else if(G.isSpotLight){const q=t.get(G);q.position.setFromMatrixPosition(G.matrixWorld),q.color.copy($).multiplyScalar(oe*L),q.distance=ie,q.coneCos=Math.cos(G.angle),q.penumbraCos=Math.cos(G.angle*(1-G.penumbra)),q.decay=G.decay,i.spot[v]=q;const j=G.shadow;if(G.map&&(i.spotLightMap[I]=G.map,I++,j.updateMatrices(G),G.castShadow&&z++),i.spotLightMatrix[v]=j.matrix,G.castShadow){const k=n.get(G);k.shadowBias=j.bias,k.shadowNormalBias=j.normalBias,k.shadowRadius=j.radius,k.shadowMapSize=j.mapSize,i.spotShadow[v]=k,i.spotShadowMap[v]=Y,C++}v++}else if(G.isRectAreaLight){const q=t.get(G);q.color.copy($).multiplyScalar(oe),q.halfWidth.set(G.width*.5,0,0),q.halfHeight.set(0,G.height*.5,0),i.rectArea[w]=q,w++}else if(G.isPointLight){const q=t.get(G);if(q.color.copy(G.color).multiplyScalar(G.intensity*L),q.distance=G.distance,q.decay=G.decay,G.castShadow){const j=G.shadow,k=n.get(G);k.shadowBias=j.bias,k.shadowNormalBias=j.normalBias,k.shadowRadius=j.radius,k.shadowMapSize=j.mapSize,k.shadowCameraNear=j.camera.near,k.shadowCameraFar=j.camera.far,i.pointShadow[x]=k,i.pointShadowMap[x]=Y,i.pointShadowMatrix[x]=G.shadow.matrix,R++}i.point[x]=q,x++}else if(G.isHemisphereLight){const q=t.get(G);q.skyColor.copy(G.color).multiplyScalar(oe*L),q.groundColor.copy(G.groundColor).multiplyScalar(oe*L),i.hemi[M]=q,M++}}w>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Re.LTC_FLOAT_1,i.rectAreaLTC2=Re.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Re.LTC_HALF_1,i.rectAreaLTC2=Re.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=m,i.ambient[1]=_,i.ambient[2]=y;const H=i.hash;(H.directionalLength!==E||H.pointLength!==x||H.spotLength!==v||H.rectAreaLength!==w||H.hemiLength!==M||H.numDirectionalShadows!==A||H.numPointShadows!==R||H.numSpotShadows!==C||H.numSpotMaps!==I||H.numLightProbes!==b)&&(i.directional.length=E,i.spot.length=v,i.rectArea.length=w,i.point.length=x,i.hemi.length=M,i.directionalShadow.length=A,i.directionalShadowMap.length=A,i.pointShadow.length=R,i.pointShadowMap.length=R,i.spotShadow.length=C,i.spotShadowMap.length=C,i.directionalShadowMatrix.length=A,i.pointShadowMatrix.length=R,i.spotLightMatrix.length=C+I-z,i.spotLightMap.length=I,i.numSpotLightShadowsWithMaps=z,i.numLightProbes=b,H.directionalLength=E,H.pointLength=x,H.spotLength=v,H.rectAreaLength=w,H.hemiLength=M,H.numDirectionalShadows=A,H.numPointShadows=R,H.numSpotShadows=C,H.numSpotMaps=I,H.numLightProbes=b,i.version=D1++)}function h(d,p){let m=0,_=0,y=0,E=0,x=0;const v=p.matrixWorldInverse;for(let w=0,M=d.length;w<M;w++){const A=d[w];if(A.isDirectionalLight){const R=i.directional[m];R.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(v),m++}else if(A.isSpotLight){const R=i.spot[y];R.position.setFromMatrixPosition(A.matrixWorld),R.position.applyMatrix4(v),R.direction.setFromMatrixPosition(A.matrixWorld),s.setFromMatrixPosition(A.target.matrixWorld),R.direction.sub(s),R.direction.transformDirection(v),y++}else if(A.isRectAreaLight){const R=i.rectArea[E];R.position.setFromMatrixPosition(A.matrixWorld),R.position.applyMatrix4(v),c.identity(),l.copy(A.matrixWorld),l.premultiply(v),c.extractRotation(l),R.halfWidth.set(A.width*.5,0,0),R.halfHeight.set(0,A.height*.5,0),R.halfWidth.applyMatrix4(c),R.halfHeight.applyMatrix4(c),E++}else if(A.isPointLight){const R=i.point[_];R.position.setFromMatrixPosition(A.matrixWorld),R.position.applyMatrix4(v),_++}else if(A.isHemisphereLight){const R=i.hemi[x];R.direction.setFromMatrixPosition(A.matrixWorld),R.direction.transformDirection(v),x++}}}return{setup:u,setupView:h,state:i}}function mg(r,e){const t=new U1(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function l(p){n.push(p)}function c(p){i.push(p)}function u(p){t.setup(n,p)}function h(p){t.setupView(n,p)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:l,pushShadow:c}}function O1(r,e){let t=new WeakMap;function n(s,l=0){const c=t.get(s);let u;return c===void 0?(u=new mg(r,e),t.set(s,[u])):l>=c.length?(u=new mg(r,e),c.push(u)):u=c[l],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class Cd extends Pn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=m_,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Pd extends Pn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const F1=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,z1=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function B1(r,e,t){let n=new Qc;const i=new ue,s=new ue,l=new It,c=new Cd({depthPacking:g_}),u=new Pd,h={},d=t.maxTextureSize,p={[ir]:Un,[Un]:ir,[Pi]:Pi},m=new Fi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ue},radius:{value:4}},vertexShader:F1,fragmentShader:z1}),_=m.clone();_.defines.HORIZONTAL_PASS=1;const y=new vt;y.setAttribute("position",new Ot(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const E=new yn(y,m),x=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Yc;let v=this.type;this.render=function(R,C,I){if(x.enabled===!1||x.autoUpdate===!1&&x.needsUpdate===!1||R.length===0)return;const z=r.getRenderTarget(),b=r.getActiveCubeFace(),L=r.getActiveMipmapLevel(),H=r.state;H.setBlending(nr),H.buffers.color.setClear(1,1,1,1),H.buffers.depth.setTest(!0),H.setScissorTest(!1);const te=v!==gi&&this.type===gi,se=v===gi&&this.type!==gi;for(let G=0,$=R.length;G<$;G++){const oe=R[G],ie=oe.shadow;if(ie===void 0){console.warn("THREE.WebGLShadowMap:",oe,"has no shadow.");continue}if(ie.autoUpdate===!1&&ie.needsUpdate===!1)continue;i.copy(ie.mapSize);const Y=ie.getFrameExtents();if(i.multiply(Y),s.copy(ie.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(s.x=Math.floor(d/Y.x),i.x=s.x*Y.x,ie.mapSize.x=s.x),i.y>d&&(s.y=Math.floor(d/Y.y),i.y=s.y*Y.y,ie.mapSize.y=s.y)),ie.map===null||te===!0||se===!0){const j=this.type!==gi?{minFilter:$t,magFilter:$t}:{};ie.map!==null&&ie.map.dispose(),ie.map=new vi(i.x,i.y,j),ie.map.texture.name=oe.name+".shadowMap",ie.camera.updateProjectionMatrix()}r.setRenderTarget(ie.map),r.clear();const q=ie.getViewportCount();for(let j=0;j<q;j++){const k=ie.getViewport(j);l.set(s.x*k.x,s.y*k.y,s.x*k.z,s.y*k.w),H.viewport(l),ie.updateMatrices(oe,j),n=ie.getFrustum(),A(C,I,ie.camera,oe,this.type)}ie.isPointLightShadow!==!0&&this.type===gi&&w(ie,I),ie.needsUpdate=!1}v=this.type,x.needsUpdate=!1,r.setRenderTarget(z,b,L)};function w(R,C){const I=e.update(E);m.defines.VSM_SAMPLES!==R.blurSamples&&(m.defines.VSM_SAMPLES=R.blurSamples,_.defines.VSM_SAMPLES=R.blurSamples,m.needsUpdate=!0,_.needsUpdate=!0),R.mapPass===null&&(R.mapPass=new vi(i.x,i.y)),m.uniforms.shadow_pass.value=R.map.texture,m.uniforms.resolution.value=R.mapSize,m.uniforms.radius.value=R.radius,r.setRenderTarget(R.mapPass),r.clear(),r.renderBufferDirect(C,null,I,m,E,null),_.uniforms.shadow_pass.value=R.mapPass.texture,_.uniforms.resolution.value=R.mapSize,_.uniforms.radius.value=R.radius,r.setRenderTarget(R.map),r.clear(),r.renderBufferDirect(C,null,I,_,E,null)}function M(R,C,I,z){let b=null;const L=I.isPointLight===!0?R.customDistanceMaterial:R.customDepthMaterial;if(L!==void 0)b=L;else if(b=I.isPointLight===!0?u:c,r.localClippingEnabled&&C.clipShadows===!0&&Array.isArray(C.clippingPlanes)&&C.clippingPlanes.length!==0||C.displacementMap&&C.displacementScale!==0||C.alphaMap&&C.alphaTest>0||C.map&&C.alphaTest>0){const H=b.uuid,te=C.uuid;let se=h[H];se===void 0&&(se={},h[H]=se);let G=se[te];G===void 0&&(G=b.clone(),se[te]=G),b=G}if(b.visible=C.visible,b.wireframe=C.wireframe,z===gi?b.side=C.shadowSide!==null?C.shadowSide:C.side:b.side=C.shadowSide!==null?C.shadowSide:p[C.side],b.alphaMap=C.alphaMap,b.alphaTest=C.alphaTest,b.map=C.map,b.clipShadows=C.clipShadows,b.clippingPlanes=C.clippingPlanes,b.clipIntersection=C.clipIntersection,b.displacementMap=C.displacementMap,b.displacementScale=C.displacementScale,b.displacementBias=C.displacementBias,b.wireframeLinewidth=C.wireframeLinewidth,b.linewidth=C.linewidth,I.isPointLight===!0&&b.isMeshDistanceMaterial===!0){const H=r.properties.get(b);H.light=I}return b}function A(R,C,I,z,b){if(R.visible===!1)return;if(R.layers.test(C.layers)&&(R.isMesh||R.isLine||R.isPoints)&&(R.castShadow||R.receiveShadow&&b===gi)&&(!R.frustumCulled||n.intersectsObject(R))){R.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,R.matrixWorld);const te=e.update(R),se=R.material;if(Array.isArray(se)){const G=te.groups;for(let $=0,oe=G.length;$<oe;$++){const ie=G[$],Y=se[ie.materialIndex];if(Y&&Y.visible){const q=M(R,Y,z,b);r.renderBufferDirect(I,null,te,q,R,ie)}}}else if(se.visible){const G=M(R,se,z,b);r.renderBufferDirect(I,null,te,G,R,null)}}const H=R.children;for(let te=0,se=H.length;te<se;te++)A(H[te],C,I,z,b)}}function k1(r,e,t){const n=t.isWebGL2;function i(){let F=!1;const me=new It;let ye=null;const Ce=new It(0,0,0,0);return{setMask:function(Le){ye!==Le&&!F&&(r.colorMask(Le,Le,Le,Le),ye=Le)},setLocked:function(Le){F=Le},setClear:function(Le,pe,Ue,Je,Ht){Ht===!0&&(Le*=Je,pe*=Je,Ue*=Je),me.set(Le,pe,Ue,Je),Ce.equals(me)===!1&&(r.clearColor(Le,pe,Ue,Je),Ce.copy(me))},reset:function(){F=!1,ye=null,Ce.set(-1,0,0,0)}}}function s(){let F=!1,me=null,ye=null,Ce=null;return{setTest:function(Le){Le?He(r.DEPTH_TEST):Ze(r.DEPTH_TEST)},setMask:function(Le){me!==Le&&!F&&(r.depthMask(Le),me=Le)},setFunc:function(Le){if(ye!==Le){switch(Le){case W0:r.depthFunc(r.NEVER);break;case X0:r.depthFunc(r.ALWAYS);break;case Y0:r.depthFunc(r.LESS);break;case Bc:r.depthFunc(r.LEQUAL);break;case q0:r.depthFunc(r.EQUAL);break;case j0:r.depthFunc(r.GEQUAL);break;case Z0:r.depthFunc(r.GREATER);break;case J0:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}ye=Le}},setLocked:function(Le){F=Le},setClear:function(Le){Ce!==Le&&(r.clearDepth(Le),Ce=Le)},reset:function(){F=!1,me=null,ye=null,Ce=null}}}function l(){let F=!1,me=null,ye=null,Ce=null,Le=null,pe=null,Ue=null,Je=null,Ht=null;return{setTest:function(Et){F||(Et?He(r.STENCIL_TEST):Ze(r.STENCIL_TEST))},setMask:function(Et){me!==Et&&!F&&(r.stencilMask(Et),me=Et)},setFunc:function(Et,ln,Xt){(ye!==Et||Ce!==ln||Le!==Xt)&&(r.stencilFunc(Et,ln,Xt),ye=Et,Ce=ln,Le=Xt)},setOp:function(Et,ln,Xt){(pe!==Et||Ue!==ln||Je!==Xt)&&(r.stencilOp(Et,ln,Xt),pe=Et,Ue=ln,Je=Xt)},setLocked:function(Et){F=Et},setClear:function(Et){Ht!==Et&&(r.clearStencil(Et),Ht=Et)},reset:function(){F=!1,me=null,ye=null,Ce=null,Le=null,pe=null,Ue=null,Je=null,Ht=null}}}const c=new i,u=new s,h=new l,d=new WeakMap,p=new WeakMap;let m={},_={},y=new WeakMap,E=[],x=null,v=!1,w=null,M=null,A=null,R=null,C=null,I=null,z=null,b=!1,L=null,H=null,te=null,se=null,G=null;const $=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let oe=!1,ie=0;const Y=r.getParameter(r.VERSION);Y.indexOf("WebGL")!==-1?(ie=parseFloat(/^WebGL (\d)/.exec(Y)[1]),oe=ie>=1):Y.indexOf("OpenGL ES")!==-1&&(ie=parseFloat(/^OpenGL ES (\d)/.exec(Y)[1]),oe=ie>=2);let q=null,j={};const k=r.getParameter(r.SCISSOR_BOX),Q=r.getParameter(r.VIEWPORT),fe=new It().fromArray(k),Te=new It().fromArray(Q);function be(F,me,ye,Ce){const Le=new Uint8Array(4),pe=r.createTexture();r.bindTexture(F,pe),r.texParameteri(F,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(F,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Ue=0;Ue<ye;Ue++)n&&(F===r.TEXTURE_3D||F===r.TEXTURE_2D_ARRAY)?r.texImage3D(me,0,r.RGBA,1,1,Ce,0,r.RGBA,r.UNSIGNED_BYTE,Le):r.texImage2D(me+Ue,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Le);return pe}const ke={};ke[r.TEXTURE_2D]=be(r.TEXTURE_2D,r.TEXTURE_2D,1),ke[r.TEXTURE_CUBE_MAP]=be(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(ke[r.TEXTURE_2D_ARRAY]=be(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),ke[r.TEXTURE_3D]=be(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),c.setClear(0,0,0,1),u.setClear(1),h.setClear(0),He(r.DEPTH_TEST),u.setFunc(Bc),de(!1),Xe(xf),He(r.CULL_FACE),he(nr);function He(F){m[F]!==!0&&(r.enable(F),m[F]=!0)}function Ze(F){m[F]!==!1&&(r.disable(F),m[F]=!1)}function yt(F,me){return _[F]!==me?(r.bindFramebuffer(F,me),_[F]=me,n&&(F===r.DRAW_FRAMEBUFFER&&(_[r.FRAMEBUFFER]=me),F===r.FRAMEBUFFER&&(_[r.DRAW_FRAMEBUFFER]=me)),!0):!1}function Ct(F,me){let ye=E,Ce=!1;if(F)if(ye=y.get(me),ye===void 0&&(ye=[],y.set(me,ye)),F.isWebGLMultipleRenderTargets){const Le=F.texture;if(ye.length!==Le.length||ye[0]!==r.COLOR_ATTACHMENT0){for(let pe=0,Ue=Le.length;pe<Ue;pe++)ye[pe]=r.COLOR_ATTACHMENT0+pe;ye.length=Le.length,Ce=!0}}else ye[0]!==r.COLOR_ATTACHMENT0&&(ye[0]=r.COLOR_ATTACHMENT0,Ce=!0);else ye[0]!==r.BACK&&(ye[0]=r.BACK,Ce=!0);Ce&&(t.isWebGL2?r.drawBuffers(ye):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(ye))}function Ve(F){return x!==F?(r.useProgram(F),x=F,!0):!1}const B={[is]:r.FUNC_ADD,[D0]:r.FUNC_SUBTRACT,[N0]:r.FUNC_REVERSE_SUBTRACT};if(n)B[wf]=r.MIN,B[Tf]=r.MAX;else{const F=e.get("EXT_blend_minmax");F!==null&&(B[wf]=F.MIN_EXT,B[Tf]=F.MAX_EXT)}const _e={[U0]:r.ZERO,[O0]:r.ONE,[F0]:r.SRC_COLOR,[hd]:r.SRC_ALPHA,[G0]:r.SRC_ALPHA_SATURATE,[H0]:r.DST_COLOR,[B0]:r.DST_ALPHA,[z0]:r.ONE_MINUS_SRC_COLOR,[fd]:r.ONE_MINUS_SRC_ALPHA,[V0]:r.ONE_MINUS_DST_COLOR,[k0]:r.ONE_MINUS_DST_ALPHA};function he(F,me,ye,Ce,Le,pe,Ue,Je){if(F===nr){v===!0&&(Ze(r.BLEND),v=!1);return}if(v===!1&&(He(r.BLEND),v=!0),F!==I0){if(F!==w||Je!==b){if((M!==is||C!==is)&&(r.blendEquation(r.FUNC_ADD),M=is,C=is),Je)switch(F){case cs:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Sf:r.blendFunc(r.ONE,r.ONE);break;case Mf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Ef:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}else switch(F){case cs:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Sf:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Mf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Ef:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}A=null,R=null,I=null,z=null,w=F,b=Je}return}Le=Le||me,pe=pe||ye,Ue=Ue||Ce,(me!==M||Le!==C)&&(r.blendEquationSeparate(B[me],B[Le]),M=me,C=Le),(ye!==A||Ce!==R||pe!==I||Ue!==z)&&(r.blendFuncSeparate(_e[ye],_e[Ce],_e[pe],_e[Ue]),A=ye,R=Ce,I=pe,z=Ue),w=F,b=!1}function Ee(F,me){F.side===Pi?Ze(r.CULL_FACE):He(r.CULL_FACE);let ye=F.side===Un;me&&(ye=!ye),de(ye),F.blending===cs&&F.transparent===!1?he(nr):he(F.blending,F.blendEquation,F.blendSrc,F.blendDst,F.blendEquationAlpha,F.blendSrcAlpha,F.blendDstAlpha,F.premultipliedAlpha),u.setFunc(F.depthFunc),u.setTest(F.depthTest),u.setMask(F.depthWrite),c.setMask(F.colorWrite);const Ce=F.stencilWrite;h.setTest(Ce),Ce&&(h.setMask(F.stencilWriteMask),h.setFunc(F.stencilFunc,F.stencilRef,F.stencilFuncMask),h.setOp(F.stencilFail,F.stencilZFail,F.stencilZPass)),Oe(F.polygonOffset,F.polygonOffsetFactor,F.polygonOffsetUnits),F.alphaToCoverage===!0?He(r.SAMPLE_ALPHA_TO_COVERAGE):Ze(r.SAMPLE_ALPHA_TO_COVERAGE)}function de(F){L!==F&&(F?r.frontFace(r.CW):r.frontFace(r.CCW),L=F)}function Xe(F){F!==C0?(He(r.CULL_FACE),F!==H&&(F===xf?r.cullFace(r.BACK):F===P0?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):Ze(r.CULL_FACE),H=F}function Ne(F){F!==te&&(oe&&r.lineWidth(F),te=F)}function Oe(F,me,ye){F?(He(r.POLYGON_OFFSET_FILL),(se!==me||G!==ye)&&(r.polygonOffset(me,ye),se=me,G=ye)):Ze(r.POLYGON_OFFSET_FILL)}function et(F){F?He(r.SCISSOR_TEST):Ze(r.SCISSOR_TEST)}function mt(F){F===void 0&&(F=r.TEXTURE0+$-1),q!==F&&(r.activeTexture(F),q=F)}function Dt(F,me,ye){ye===void 0&&(q===null?ye=r.TEXTURE0+$-1:ye=q);let Ce=j[ye];Ce===void 0&&(Ce={type:void 0,texture:void 0},j[ye]=Ce),(Ce.type!==F||Ce.texture!==me)&&(q!==ye&&(r.activeTexture(ye),q=ye),r.bindTexture(F,me||ke[F]),Ce.type=F,Ce.texture=me)}function O(){const F=j[q];F!==void 0&&F.type!==void 0&&(r.bindTexture(F.type,null),F.type=void 0,F.texture=void 0)}function P(){try{r.compressedTexImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function ee(){try{r.compressedTexImage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Se(){try{r.texSubImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function ge(){try{r.texSubImage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function xe(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Ge(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Ae(){try{r.texStorage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Pe(){try{r.texStorage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function nt(){try{r.texImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function St(){try{r.texImage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Me(F){fe.equals(F)===!1&&(r.scissor(F.x,F.y,F.z,F.w),fe.copy(F))}function Mt(F){Te.equals(F)===!1&&(r.viewport(F.x,F.y,F.z,F.w),Te.copy(F))}function V(F,me){let ye=p.get(me);ye===void 0&&(ye=new WeakMap,p.set(me,ye));let Ce=ye.get(F);Ce===void 0&&(Ce=r.getUniformBlockIndex(me,F.name),ye.set(F,Ce))}function ae(F,me){const Ce=p.get(me).get(F);d.get(me)!==Ce&&(r.uniformBlockBinding(me,Ce,F.__bindingPointIndex),d.set(me,Ce))}function ve(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),m={},q=null,j={},_={},y=new WeakMap,E=[],x=null,v=!1,w=null,M=null,A=null,R=null,C=null,I=null,z=null,b=!1,L=null,H=null,te=null,se=null,G=null,fe.set(0,0,r.canvas.width,r.canvas.height),Te.set(0,0,r.canvas.width,r.canvas.height),c.reset(),u.reset(),h.reset()}return{buffers:{color:c,depth:u,stencil:h},enable:He,disable:Ze,bindFramebuffer:yt,drawBuffers:Ct,useProgram:Ve,setBlending:he,setMaterial:Ee,setFlipSided:de,setCullFace:Xe,setLineWidth:Ne,setPolygonOffset:Oe,setScissorTest:et,activeTexture:mt,bindTexture:Dt,unbindTexture:O,compressedTexImage2D:P,compressedTexImage3D:ee,texImage2D:nt,texImage3D:St,updateUBOMapping:V,uniformBlockBinding:ae,texStorage2D:Ae,texStorage3D:Pe,texSubImage2D:Se,texSubImage3D:ge,compressedTexSubImage2D:xe,compressedTexSubImage3D:Ge,scissor:Me,viewport:Mt,reset:ve}}function H1(r,e,t,n,i,s,l){const c=i.isWebGL2,u=i.maxTextures,h=i.maxCubemapSize,d=i.maxTextureSize,p=i.maxSamples,m=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,_=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),y=new WeakMap;let E;const x=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(O,P){return v?new OffscreenCanvas(O,P):Ma("canvas")}function M(O,P,ee,Se){let ge=1;if((O.width>Se||O.height>Se)&&(ge=Se/Math.max(O.width,O.height)),ge<1||P===!0)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap){const xe=P?Vc:Math.floor,Ge=xe(ge*O.width),Ae=xe(ge*O.height);E===void 0&&(E=w(Ge,Ae));const Pe=ee?w(Ge,Ae):E;return Pe.width=Ge,Pe.height=Ae,Pe.getContext("2d").drawImage(O,0,0,Ge,Ae),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+O.width+"x"+O.height+") to ("+Ge+"x"+Ae+")."),Pe}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+O.width+"x"+O.height+")."),O;return O}function A(O){return Qf(O.width)&&Qf(O.height)}function R(O){return c?!1:O.wrapS!==Rn||O.wrapT!==Rn||O.minFilter!==$t&&O.minFilter!==en}function C(O,P){return O.generateMipmaps&&P&&O.minFilter!==$t&&O.minFilter!==en}function I(O){r.generateMipmap(O)}function z(O,P,ee,Se,ge=!1){if(c===!1)return P;if(O!==null){if(r[O]!==void 0)return r[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let xe=P;if(P===r.RED&&(ee===r.FLOAT&&(xe=r.R32F),ee===r.HALF_FLOAT&&(xe=r.R16F),ee===r.UNSIGNED_BYTE&&(xe=r.R8)),P===r.RED_INTEGER&&(ee===r.UNSIGNED_BYTE&&(xe=r.R8UI),ee===r.UNSIGNED_SHORT&&(xe=r.R16UI),ee===r.UNSIGNED_INT&&(xe=r.R32UI),ee===r.BYTE&&(xe=r.R8I),ee===r.SHORT&&(xe=r.R16I),ee===r.INT&&(xe=r.R32I)),P===r.RG&&(ee===r.FLOAT&&(xe=r.RG32F),ee===r.HALF_FLOAT&&(xe=r.RG16F),ee===r.UNSIGNED_BYTE&&(xe=r.RG8)),P===r.RGBA){const Ge=ge?_a:Lt.getTransfer(Se);ee===r.FLOAT&&(xe=r.RGBA32F),ee===r.HALF_FLOAT&&(xe=r.RGBA16F),ee===r.UNSIGNED_BYTE&&(xe=Ge===zt?r.SRGB8_ALPHA8:r.RGBA8),ee===r.UNSIGNED_SHORT_4_4_4_4&&(xe=r.RGBA4),ee===r.UNSIGNED_SHORT_5_5_5_1&&(xe=r.RGB5_A1)}return(xe===r.R16F||xe===r.R32F||xe===r.RG16F||xe===r.RG32F||xe===r.RGBA16F||xe===r.RGBA32F)&&e.get("EXT_color_buffer_float"),xe}function b(O,P,ee){return C(O,ee)===!0||O.isFramebufferTexture&&O.minFilter!==$t&&O.minFilter!==en?Math.log2(Math.max(P.width,P.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?P.mipmaps.length:1}function L(O){return O===$t||O===kc||O===sa?r.NEAREST:r.LINEAR}function H(O){const P=O.target;P.removeEventListener("dispose",H),se(P),P.isVideoTexture&&y.delete(P)}function te(O){const P=O.target;P.removeEventListener("dispose",te),$(P)}function se(O){const P=n.get(O);if(P.__webglInit===void 0)return;const ee=O.source,Se=x.get(ee);if(Se){const ge=Se[P.__cacheKey];ge.usedTimes--,ge.usedTimes===0&&G(O),Object.keys(Se).length===0&&x.delete(ee)}n.remove(O)}function G(O){const P=n.get(O);r.deleteTexture(P.__webglTexture);const ee=O.source,Se=x.get(ee);delete Se[P.__cacheKey],l.memory.textures--}function $(O){const P=O.texture,ee=n.get(O),Se=n.get(P);if(Se.__webglTexture!==void 0&&(r.deleteTexture(Se.__webglTexture),l.memory.textures--),O.depthTexture&&O.depthTexture.dispose(),O.isWebGLCubeRenderTarget)for(let ge=0;ge<6;ge++){if(Array.isArray(ee.__webglFramebuffer[ge]))for(let xe=0;xe<ee.__webglFramebuffer[ge].length;xe++)r.deleteFramebuffer(ee.__webglFramebuffer[ge][xe]);else r.deleteFramebuffer(ee.__webglFramebuffer[ge]);ee.__webglDepthbuffer&&r.deleteRenderbuffer(ee.__webglDepthbuffer[ge])}else{if(Array.isArray(ee.__webglFramebuffer))for(let ge=0;ge<ee.__webglFramebuffer.length;ge++)r.deleteFramebuffer(ee.__webglFramebuffer[ge]);else r.deleteFramebuffer(ee.__webglFramebuffer);if(ee.__webglDepthbuffer&&r.deleteRenderbuffer(ee.__webglDepthbuffer),ee.__webglMultisampledFramebuffer&&r.deleteFramebuffer(ee.__webglMultisampledFramebuffer),ee.__webglColorRenderbuffer)for(let ge=0;ge<ee.__webglColorRenderbuffer.length;ge++)ee.__webglColorRenderbuffer[ge]&&r.deleteRenderbuffer(ee.__webglColorRenderbuffer[ge]);ee.__webglDepthRenderbuffer&&r.deleteRenderbuffer(ee.__webglDepthRenderbuffer)}if(O.isWebGLMultipleRenderTargets)for(let ge=0,xe=P.length;ge<xe;ge++){const Ge=n.get(P[ge]);Ge.__webglTexture&&(r.deleteTexture(Ge.__webglTexture),l.memory.textures--),n.remove(P[ge])}n.remove(P),n.remove(O)}let oe=0;function ie(){oe=0}function Y(){const O=oe;return O>=u&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+u),oe+=1,O}function q(O){const P=[];return P.push(O.wrapS),P.push(O.wrapT),P.push(O.wrapR||0),P.push(O.magFilter),P.push(O.minFilter),P.push(O.anisotropy),P.push(O.internalFormat),P.push(O.format),P.push(O.type),P.push(O.generateMipmaps),P.push(O.premultiplyAlpha),P.push(O.flipY),P.push(O.unpackAlignment),P.push(O.colorSpace),P.join()}function j(O,P){const ee=n.get(O);if(O.isVideoTexture&&mt(O),O.isRenderTargetTexture===!1&&O.version>0&&ee.__version!==O.version){const Se=O.image;if(Se===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Se.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{yt(ee,O,P);return}}t.bindTexture(r.TEXTURE_2D,ee.__webglTexture,r.TEXTURE0+P)}function k(O,P){const ee=n.get(O);if(O.version>0&&ee.__version!==O.version){yt(ee,O,P);return}t.bindTexture(r.TEXTURE_2D_ARRAY,ee.__webglTexture,r.TEXTURE0+P)}function Q(O,P){const ee=n.get(O);if(O.version>0&&ee.__version!==O.version){yt(ee,O,P);return}t.bindTexture(r.TEXTURE_3D,ee.__webglTexture,r.TEXTURE0+P)}function fe(O,P){const ee=n.get(O);if(O.version>0&&ee.__version!==O.version){Ct(ee,O,P);return}t.bindTexture(r.TEXTURE_CUBE_MAP,ee.__webglTexture,r.TEXTURE0+P)}const Te={[fa]:r.REPEAT,[Rn]:r.CLAMP_TO_EDGE,[da]:r.MIRRORED_REPEAT},be={[$t]:r.NEAREST,[kc]:r.NEAREST_MIPMAP_NEAREST,[sa]:r.NEAREST_MIPMAP_LINEAR,[en]:r.LINEAR,[pd]:r.LINEAR_MIPMAP_NEAREST,[Pr]:r.LINEAR_MIPMAP_LINEAR},ke={[y_]:r.NEVER,[A_]:r.ALWAYS,[x_]:r.LESS,[M_]:r.LEQUAL,[S_]:r.EQUAL,[T_]:r.GEQUAL,[E_]:r.GREATER,[w_]:r.NOTEQUAL};function He(O,P,ee){if(ee?(r.texParameteri(O,r.TEXTURE_WRAP_S,Te[P.wrapS]),r.texParameteri(O,r.TEXTURE_WRAP_T,Te[P.wrapT]),(O===r.TEXTURE_3D||O===r.TEXTURE_2D_ARRAY)&&r.texParameteri(O,r.TEXTURE_WRAP_R,Te[P.wrapR]),r.texParameteri(O,r.TEXTURE_MAG_FILTER,be[P.magFilter]),r.texParameteri(O,r.TEXTURE_MIN_FILTER,be[P.minFilter])):(r.texParameteri(O,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(O,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(O===r.TEXTURE_3D||O===r.TEXTURE_2D_ARRAY)&&r.texParameteri(O,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(P.wrapS!==Rn||P.wrapT!==Rn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(O,r.TEXTURE_MAG_FILTER,L(P.magFilter)),r.texParameteri(O,r.TEXTURE_MIN_FILTER,L(P.minFilter)),P.minFilter!==$t&&P.minFilter!==en&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),P.compareFunction&&(r.texParameteri(O,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(O,r.TEXTURE_COMPARE_FUNC,ke[P.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const Se=e.get("EXT_texture_filter_anisotropic");if(P.magFilter===$t||P.minFilter!==sa&&P.minFilter!==Pr||P.type===Li&&e.has("OES_texture_float_linear")===!1||c===!1&&P.type===mo&&e.has("OES_texture_half_float_linear")===!1)return;(P.anisotropy>1||n.get(P).__currentAnisotropy)&&(r.texParameterf(O,Se.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),n.get(P).__currentAnisotropy=P.anisotropy)}}function Ze(O,P){let ee=!1;O.__webglInit===void 0&&(O.__webglInit=!0,P.addEventListener("dispose",H));const Se=P.source;let ge=x.get(Se);ge===void 0&&(ge={},x.set(Se,ge));const xe=q(P);if(xe!==O.__cacheKey){ge[xe]===void 0&&(ge[xe]={texture:r.createTexture(),usedTimes:0},l.memory.textures++,ee=!0),ge[xe].usedTimes++;const Ge=ge[O.__cacheKey];Ge!==void 0&&(ge[O.__cacheKey].usedTimes--,Ge.usedTimes===0&&G(P)),O.__cacheKey=xe,O.__webglTexture=ge[xe].texture}return ee}function yt(O,P,ee){let Se=r.TEXTURE_2D;(P.isDataArrayTexture||P.isCompressedArrayTexture)&&(Se=r.TEXTURE_2D_ARRAY),P.isData3DTexture&&(Se=r.TEXTURE_3D);const ge=Ze(O,P),xe=P.source;t.bindTexture(Se,O.__webglTexture,r.TEXTURE0+ee);const Ge=n.get(xe);if(xe.version!==Ge.__version||ge===!0){t.activeTexture(r.TEXTURE0+ee);const Ae=Lt.getPrimaries(Lt.workingColorSpace),Pe=P.colorSpace===$n?null:Lt.getPrimaries(P.colorSpace),nt=P.colorSpace===$n||Ae===Pe?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,nt);const St=R(P)&&A(P.image)===!1;let Me=M(P.image,St,!1,d);Me=Dt(P,Me);const Mt=A(Me)||c,V=s.convert(P.format,P.colorSpace);let ae=s.convert(P.type),ve=z(P.internalFormat,V,ae,P.colorSpace,P.isVideoTexture);He(Se,P,Mt);let F;const me=P.mipmaps,ye=c&&P.isVideoTexture!==!0,Ce=Ge.__version===void 0||ge===!0,Le=b(P,Me,Mt);if(P.isDepthTexture)ve=r.DEPTH_COMPONENT,c?P.type===Li?ve=r.DEPTH_COMPONENT32F:P.type===tr?ve=r.DEPTH_COMPONENT24:P.type===Tr?ve=r.DEPTH24_STENCIL8:ve=r.DEPTH_COMPONENT16:P.type===Li&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),P.format===Ar&&ve===r.DEPTH_COMPONENT&&P.type!==jc&&P.type!==tr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),P.type=tr,ae=s.convert(P.type)),P.format===ds&&ve===r.DEPTH_COMPONENT&&(ve=r.DEPTH_STENCIL,P.type!==Tr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),P.type=Tr,ae=s.convert(P.type))),Ce&&(ye?t.texStorage2D(r.TEXTURE_2D,1,ve,Me.width,Me.height):t.texImage2D(r.TEXTURE_2D,0,ve,Me.width,Me.height,0,V,ae,null));else if(P.isDataTexture)if(me.length>0&&Mt){ye&&Ce&&t.texStorage2D(r.TEXTURE_2D,Le,ve,me[0].width,me[0].height);for(let pe=0,Ue=me.length;pe<Ue;pe++)F=me[pe],ye?t.texSubImage2D(r.TEXTURE_2D,pe,0,0,F.width,F.height,V,ae,F.data):t.texImage2D(r.TEXTURE_2D,pe,ve,F.width,F.height,0,V,ae,F.data);P.generateMipmaps=!1}else ye?(Ce&&t.texStorage2D(r.TEXTURE_2D,Le,ve,Me.width,Me.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,Me.width,Me.height,V,ae,Me.data)):t.texImage2D(r.TEXTURE_2D,0,ve,Me.width,Me.height,0,V,ae,Me.data);else if(P.isCompressedTexture)if(P.isCompressedArrayTexture){ye&&Ce&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Le,ve,me[0].width,me[0].height,Me.depth);for(let pe=0,Ue=me.length;pe<Ue;pe++)F=me[pe],P.format!==Gn?V!==null?ye?t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,pe,0,0,0,F.width,F.height,Me.depth,V,F.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,pe,ve,F.width,F.height,Me.depth,0,F.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ye?t.texSubImage3D(r.TEXTURE_2D_ARRAY,pe,0,0,0,F.width,F.height,Me.depth,V,ae,F.data):t.texImage3D(r.TEXTURE_2D_ARRAY,pe,ve,F.width,F.height,Me.depth,0,V,ae,F.data)}else{ye&&Ce&&t.texStorage2D(r.TEXTURE_2D,Le,ve,me[0].width,me[0].height);for(let pe=0,Ue=me.length;pe<Ue;pe++)F=me[pe],P.format!==Gn?V!==null?ye?t.compressedTexSubImage2D(r.TEXTURE_2D,pe,0,0,F.width,F.height,V,F.data):t.compressedTexImage2D(r.TEXTURE_2D,pe,ve,F.width,F.height,0,F.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ye?t.texSubImage2D(r.TEXTURE_2D,pe,0,0,F.width,F.height,V,ae,F.data):t.texImage2D(r.TEXTURE_2D,pe,ve,F.width,F.height,0,V,ae,F.data)}else if(P.isDataArrayTexture)ye?(Ce&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Le,ve,Me.width,Me.height,Me.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,Me.width,Me.height,Me.depth,V,ae,Me.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,ve,Me.width,Me.height,Me.depth,0,V,ae,Me.data);else if(P.isData3DTexture)ye?(Ce&&t.texStorage3D(r.TEXTURE_3D,Le,ve,Me.width,Me.height,Me.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,Me.width,Me.height,Me.depth,V,ae,Me.data)):t.texImage3D(r.TEXTURE_3D,0,ve,Me.width,Me.height,Me.depth,0,V,ae,Me.data);else if(P.isFramebufferTexture){if(Ce)if(ye)t.texStorage2D(r.TEXTURE_2D,Le,ve,Me.width,Me.height);else{let pe=Me.width,Ue=Me.height;for(let Je=0;Je<Le;Je++)t.texImage2D(r.TEXTURE_2D,Je,ve,pe,Ue,0,V,ae,null),pe>>=1,Ue>>=1}}else if(me.length>0&&Mt){ye&&Ce&&t.texStorage2D(r.TEXTURE_2D,Le,ve,me[0].width,me[0].height);for(let pe=0,Ue=me.length;pe<Ue;pe++)F=me[pe],ye?t.texSubImage2D(r.TEXTURE_2D,pe,0,0,V,ae,F):t.texImage2D(r.TEXTURE_2D,pe,ve,V,ae,F);P.generateMipmaps=!1}else ye?(Ce&&t.texStorage2D(r.TEXTURE_2D,Le,ve,Me.width,Me.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,V,ae,Me)):t.texImage2D(r.TEXTURE_2D,0,ve,V,ae,Me);C(P,Mt)&&I(Se),Ge.__version=xe.version,P.onUpdate&&P.onUpdate(P)}O.__version=P.version}function Ct(O,P,ee){if(P.image.length!==6)return;const Se=Ze(O,P),ge=P.source;t.bindTexture(r.TEXTURE_CUBE_MAP,O.__webglTexture,r.TEXTURE0+ee);const xe=n.get(ge);if(ge.version!==xe.__version||Se===!0){t.activeTexture(r.TEXTURE0+ee);const Ge=Lt.getPrimaries(Lt.workingColorSpace),Ae=P.colorSpace===$n?null:Lt.getPrimaries(P.colorSpace),Pe=P.colorSpace===$n||Ge===Ae?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Pe);const nt=P.isCompressedTexture||P.image[0].isCompressedTexture,St=P.image[0]&&P.image[0].isDataTexture,Me=[];for(let pe=0;pe<6;pe++)!nt&&!St?Me[pe]=M(P.image[pe],!1,!0,h):Me[pe]=St?P.image[pe].image:P.image[pe],Me[pe]=Dt(P,Me[pe]);const Mt=Me[0],V=A(Mt)||c,ae=s.convert(P.format,P.colorSpace),ve=s.convert(P.type),F=z(P.internalFormat,ae,ve,P.colorSpace),me=c&&P.isVideoTexture!==!0,ye=xe.__version===void 0||Se===!0;let Ce=b(P,Mt,V);He(r.TEXTURE_CUBE_MAP,P,V);let Le;if(nt){me&&ye&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Ce,F,Mt.width,Mt.height);for(let pe=0;pe<6;pe++){Le=Me[pe].mipmaps;for(let Ue=0;Ue<Le.length;Ue++){const Je=Le[Ue];P.format!==Gn?ae!==null?me?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Ue,0,0,Je.width,Je.height,ae,Je.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Ue,F,Je.width,Je.height,0,Je.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):me?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Ue,0,0,Je.width,Je.height,ae,ve,Je.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Ue,F,Je.width,Je.height,0,ae,ve,Je.data)}}}else{Le=P.mipmaps,me&&ye&&(Le.length>0&&Ce++,t.texStorage2D(r.TEXTURE_CUBE_MAP,Ce,F,Me[0].width,Me[0].height));for(let pe=0;pe<6;pe++)if(St){me?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,0,0,0,Me[pe].width,Me[pe].height,ae,ve,Me[pe].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,0,F,Me[pe].width,Me[pe].height,0,ae,ve,Me[pe].data);for(let Ue=0;Ue<Le.length;Ue++){const Ht=Le[Ue].image[pe].image;me?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Ue+1,0,0,Ht.width,Ht.height,ae,ve,Ht.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Ue+1,F,Ht.width,Ht.height,0,ae,ve,Ht.data)}}else{me?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,0,0,0,ae,ve,Me[pe]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,0,F,ae,ve,Me[pe]);for(let Ue=0;Ue<Le.length;Ue++){const Je=Le[Ue];me?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Ue+1,0,0,ae,ve,Je.image[pe]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+pe,Ue+1,F,ae,ve,Je.image[pe])}}}C(P,V)&&I(r.TEXTURE_CUBE_MAP),xe.__version=ge.version,P.onUpdate&&P.onUpdate(P)}O.__version=P.version}function Ve(O,P,ee,Se,ge,xe){const Ge=s.convert(ee.format,ee.colorSpace),Ae=s.convert(ee.type),Pe=z(ee.internalFormat,Ge,Ae,ee.colorSpace);if(!n.get(P).__hasExternalTextures){const St=Math.max(1,P.width>>xe),Me=Math.max(1,P.height>>xe);ge===r.TEXTURE_3D||ge===r.TEXTURE_2D_ARRAY?t.texImage3D(ge,xe,Pe,St,Me,P.depth,0,Ge,Ae,null):t.texImage2D(ge,xe,Pe,St,Me,0,Ge,Ae,null)}t.bindFramebuffer(r.FRAMEBUFFER,O),et(P)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,Se,ge,n.get(ee).__webglTexture,0,Oe(P)):(ge===r.TEXTURE_2D||ge>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&ge<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,Se,ge,n.get(ee).__webglTexture,xe),t.bindFramebuffer(r.FRAMEBUFFER,null)}function B(O,P,ee){if(r.bindRenderbuffer(r.RENDERBUFFER,O),P.depthBuffer&&!P.stencilBuffer){let Se=c===!0?r.DEPTH_COMPONENT24:r.DEPTH_COMPONENT16;if(ee||et(P)){const ge=P.depthTexture;ge&&ge.isDepthTexture&&(ge.type===Li?Se=r.DEPTH_COMPONENT32F:ge.type===tr&&(Se=r.DEPTH_COMPONENT24));const xe=Oe(P);et(P)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,xe,Se,P.width,P.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,xe,Se,P.width,P.height)}else r.renderbufferStorage(r.RENDERBUFFER,Se,P.width,P.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,O)}else if(P.depthBuffer&&P.stencilBuffer){const Se=Oe(P);ee&&et(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Se,r.DEPTH24_STENCIL8,P.width,P.height):et(P)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Se,r.DEPTH24_STENCIL8,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,P.width,P.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,O)}else{const Se=P.isWebGLMultipleRenderTargets===!0?P.texture:[P.texture];for(let ge=0;ge<Se.length;ge++){const xe=Se[ge],Ge=s.convert(xe.format,xe.colorSpace),Ae=s.convert(xe.type),Pe=z(xe.internalFormat,Ge,Ae,xe.colorSpace),nt=Oe(P);ee&&et(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,nt,Pe,P.width,P.height):et(P)?m.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,nt,Pe,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,Pe,P.width,P.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function _e(O,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,O),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(P.depthTexture).__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),j(P.depthTexture,0);const Se=n.get(P.depthTexture).__webglTexture,ge=Oe(P);if(P.depthTexture.format===Ar)et(P)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,Se,0,ge):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,Se,0);else if(P.depthTexture.format===ds)et(P)?m.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,Se,0,ge):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,Se,0);else throw new Error("Unknown depthTexture format")}function he(O){const P=n.get(O),ee=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture&&!P.__autoAllocateDepthBuffer){if(ee)throw new Error("target.depthTexture not supported in Cube render targets");_e(P.__webglFramebuffer,O)}else if(ee){P.__webglDepthbuffer=[];for(let Se=0;Se<6;Se++)t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer[Se]),P.__webglDepthbuffer[Se]=r.createRenderbuffer(),B(P.__webglDepthbuffer[Se],O,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer),P.__webglDepthbuffer=r.createRenderbuffer(),B(P.__webglDepthbuffer,O,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function Ee(O,P,ee){const Se=n.get(O);P!==void 0&&Ve(Se.__webglFramebuffer,O,O.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),ee!==void 0&&he(O)}function de(O){const P=O.texture,ee=n.get(O),Se=n.get(P);O.addEventListener("dispose",te),O.isWebGLMultipleRenderTargets!==!0&&(Se.__webglTexture===void 0&&(Se.__webglTexture=r.createTexture()),Se.__version=P.version,l.memory.textures++);const ge=O.isWebGLCubeRenderTarget===!0,xe=O.isWebGLMultipleRenderTargets===!0,Ge=A(O)||c;if(ge){ee.__webglFramebuffer=[];for(let Ae=0;Ae<6;Ae++)if(c&&P.mipmaps&&P.mipmaps.length>0){ee.__webglFramebuffer[Ae]=[];for(let Pe=0;Pe<P.mipmaps.length;Pe++)ee.__webglFramebuffer[Ae][Pe]=r.createFramebuffer()}else ee.__webglFramebuffer[Ae]=r.createFramebuffer()}else{if(c&&P.mipmaps&&P.mipmaps.length>0){ee.__webglFramebuffer=[];for(let Ae=0;Ae<P.mipmaps.length;Ae++)ee.__webglFramebuffer[Ae]=r.createFramebuffer()}else ee.__webglFramebuffer=r.createFramebuffer();if(xe)if(i.drawBuffers){const Ae=O.texture;for(let Pe=0,nt=Ae.length;Pe<nt;Pe++){const St=n.get(Ae[Pe]);St.__webglTexture===void 0&&(St.__webglTexture=r.createTexture(),l.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&O.samples>0&&et(O)===!1){const Ae=xe?P:[P];ee.__webglMultisampledFramebuffer=r.createFramebuffer(),ee.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,ee.__webglMultisampledFramebuffer);for(let Pe=0;Pe<Ae.length;Pe++){const nt=Ae[Pe];ee.__webglColorRenderbuffer[Pe]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,ee.__webglColorRenderbuffer[Pe]);const St=s.convert(nt.format,nt.colorSpace),Me=s.convert(nt.type),Mt=z(nt.internalFormat,St,Me,nt.colorSpace,O.isXRRenderTarget===!0),V=Oe(O);r.renderbufferStorageMultisample(r.RENDERBUFFER,V,Mt,O.width,O.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Pe,r.RENDERBUFFER,ee.__webglColorRenderbuffer[Pe])}r.bindRenderbuffer(r.RENDERBUFFER,null),O.depthBuffer&&(ee.__webglDepthRenderbuffer=r.createRenderbuffer(),B(ee.__webglDepthRenderbuffer,O,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(ge){t.bindTexture(r.TEXTURE_CUBE_MAP,Se.__webglTexture),He(r.TEXTURE_CUBE_MAP,P,Ge);for(let Ae=0;Ae<6;Ae++)if(c&&P.mipmaps&&P.mipmaps.length>0)for(let Pe=0;Pe<P.mipmaps.length;Pe++)Ve(ee.__webglFramebuffer[Ae][Pe],O,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Ae,Pe);else Ve(ee.__webglFramebuffer[Ae],O,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Ae,0);C(P,Ge)&&I(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(xe){const Ae=O.texture;for(let Pe=0,nt=Ae.length;Pe<nt;Pe++){const St=Ae[Pe],Me=n.get(St);t.bindTexture(r.TEXTURE_2D,Me.__webglTexture),He(r.TEXTURE_2D,St,Ge),Ve(ee.__webglFramebuffer,O,St,r.COLOR_ATTACHMENT0+Pe,r.TEXTURE_2D,0),C(St,Ge)&&I(r.TEXTURE_2D)}t.unbindTexture()}else{let Ae=r.TEXTURE_2D;if((O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(c?Ae=O.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Ae,Se.__webglTexture),He(Ae,P,Ge),c&&P.mipmaps&&P.mipmaps.length>0)for(let Pe=0;Pe<P.mipmaps.length;Pe++)Ve(ee.__webglFramebuffer[Pe],O,P,r.COLOR_ATTACHMENT0,Ae,Pe);else Ve(ee.__webglFramebuffer,O,P,r.COLOR_ATTACHMENT0,Ae,0);C(P,Ge)&&I(Ae),t.unbindTexture()}O.depthBuffer&&he(O)}function Xe(O){const P=A(O)||c,ee=O.isWebGLMultipleRenderTargets===!0?O.texture:[O.texture];for(let Se=0,ge=ee.length;Se<ge;Se++){const xe=ee[Se];if(C(xe,P)){const Ge=O.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,Ae=n.get(xe).__webglTexture;t.bindTexture(Ge,Ae),I(Ge),t.unbindTexture()}}}function Ne(O){if(c&&O.samples>0&&et(O)===!1){const P=O.isWebGLMultipleRenderTargets?O.texture:[O.texture],ee=O.width,Se=O.height;let ge=r.COLOR_BUFFER_BIT;const xe=[],Ge=O.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Ae=n.get(O),Pe=O.isWebGLMultipleRenderTargets===!0;if(Pe)for(let nt=0;nt<P.length;nt++)t.bindFramebuffer(r.FRAMEBUFFER,Ae.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+nt,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,Ae.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+nt,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,Ae.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ae.__webglFramebuffer);for(let nt=0;nt<P.length;nt++){xe.push(r.COLOR_ATTACHMENT0+nt),O.depthBuffer&&xe.push(Ge);const St=Ae.__ignoreDepthValues!==void 0?Ae.__ignoreDepthValues:!1;if(St===!1&&(O.depthBuffer&&(ge|=r.DEPTH_BUFFER_BIT),O.stencilBuffer&&(ge|=r.STENCIL_BUFFER_BIT)),Pe&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,Ae.__webglColorRenderbuffer[nt]),St===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[Ge]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[Ge])),Pe){const Me=n.get(P[nt]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,Me,0)}r.blitFramebuffer(0,0,ee,Se,0,0,ee,Se,ge,r.NEAREST),_&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,xe)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Pe)for(let nt=0;nt<P.length;nt++){t.bindFramebuffer(r.FRAMEBUFFER,Ae.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+nt,r.RENDERBUFFER,Ae.__webglColorRenderbuffer[nt]);const St=n.get(P[nt]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,Ae.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+nt,r.TEXTURE_2D,St,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ae.__webglMultisampledFramebuffer)}}function Oe(O){return Math.min(p,O.samples)}function et(O){const P=n.get(O);return c&&O.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&P.__useRenderToTexture!==!1}function mt(O){const P=l.render.frame;y.get(O)!==P&&(y.set(O,P),O.update())}function Dt(O,P){const ee=O.colorSpace,Se=O.format,ge=O.type;return O.isCompressedTexture===!0||O.isVideoTexture===!0||O.format===Hc||ee!==Oi&&ee!==$n&&(Lt.getTransfer(ee)===zt?c===!1?e.has("EXT_sRGB")===!0&&Se===Gn?(O.format=Hc,O.minFilter=en,O.generateMipmaps=!1):P=wd.sRGBToLinear(P):(Se!==Gn||ge!==Ni)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",ee)),P}this.allocateTextureUnit=Y,this.resetTextureUnits=ie,this.setTexture2D=j,this.setTexture2DArray=k,this.setTexture3D=Q,this.setTextureCube=fe,this.rebindTextures=Ee,this.setupRenderTarget=de,this.updateRenderTargetMipmap=Xe,this.updateMultisampleRenderTarget=Ne,this.setupDepthRenderbuffer=he,this.setupFrameBufferTexture=Ve,this.useMultisampledRTT=et}function H_(r,e,t){const n=t.isWebGL2;function i(s,l=$n){let c;const u=Lt.getTransfer(l);if(s===Ni)return r.UNSIGNED_BYTE;if(s===gd)return r.UNSIGNED_SHORT_4_4_4_4;if(s===_d)return r.UNSIGNED_SHORT_5_5_5_1;if(s===i_)return r.BYTE;if(s===r_)return r.SHORT;if(s===jc)return r.UNSIGNED_SHORT;if(s===md)return r.INT;if(s===tr)return r.UNSIGNED_INT;if(s===Li)return r.FLOAT;if(s===mo)return n?r.HALF_FLOAT:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(s===s_)return r.ALPHA;if(s===Gn)return r.RGBA;if(s===o_)return r.LUMINANCE;if(s===a_)return r.LUMINANCE_ALPHA;if(s===Ar)return r.DEPTH_COMPONENT;if(s===ds)return r.DEPTH_STENCIL;if(s===Hc)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(s===l_)return r.RED;if(s===vd)return r.RED_INTEGER;if(s===c_)return r.RG;if(s===yd)return r.RG_INTEGER;if(s===xd)return r.RGBA_INTEGER;if(s===Pc||s===Lc||s===Ic||s===Dc)if(u===zt)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(s===Pc)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Lc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Ic)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Dc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(s===Pc)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Lc)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Ic)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Dc)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Af||s===bf||s===Rf||s===Cf)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(s===Af)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===bf)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Rf)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Cf)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===u_)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===Pf||s===Lf)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(s===Pf)return u===zt?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(s===Lf)return u===zt?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===If||s===Df||s===Nf||s===Uf||s===Of||s===Ff||s===zf||s===Bf||s===kf||s===Hf||s===Vf||s===Gf||s===Wf||s===Xf)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(s===If)return u===zt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Df)return u===zt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Nf)return u===zt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Uf)return u===zt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Of)return u===zt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Ff)return u===zt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===zf)return u===zt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Bf)return u===zt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===kf)return u===zt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Hf)return u===zt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Vf)return u===zt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Gf)return u===zt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===Wf)return u===zt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Xf)return u===zt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Nc||s===Yf||s===qf)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(s===Nc)return u===zt?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===Yf)return c.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===qf)return c.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===h_||s===jf||s===Zf||s===Jf)if(c=e.get("EXT_texture_compression_rgtc"),c!==null){if(s===Nc)return c.COMPRESSED_RED_RGTC1_EXT;if(s===jf)return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===Zf)return c.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===Jf)return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===Tr?n?r.UNSIGNED_INT_24_8:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class V_ extends tn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class co extends Rt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const V1={type:"move"};class qh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new co,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new co,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new co,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,l=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){l=!0;for(const E of e.hand.values()){const x=t.getJointPose(E,n),v=this._getHandJoint(h,E);x!==null&&(v.matrix.fromArray(x.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.matrixWorldNeedsUpdate=!0,v.jointRadius=x.radius),v.visible=x!==null}const d=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=d.position.distanceTo(p.position),_=.02,y=.005;h.inputState.pinching&&m>_+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=_-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(V1)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=l!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new co;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class G_ extends nn{constructor(e,t,n,i,s,l,c,u,h,d){if(d=d!==void 0?d:Ar,d!==Ar&&d!==ds)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===Ar&&(n=tr),n===void 0&&d===ds&&(n=Tr),super(null,i,s,l,c,u,d,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:$t,this.minFilter=u!==void 0?u:$t,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class G1 extends or{constructor(e,t){super();const n=this;let i=null,s=1,l=null,c="local-floor",u=1,h=null,d=null,p=null,m=null,_=null,y=null;const E=t.getContextAttributes();let x=null,v=null;const w=[],M=[],A=new tn;A.layers.enable(1),A.viewport=new It;const R=new tn;R.layers.enable(2),R.viewport=new It;const C=[A,R],I=new V_;I.layers.enable(1),I.layers.enable(2);let z=null,b=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(k){let Q=w[k];return Q===void 0&&(Q=new qh,w[k]=Q),Q.getTargetRaySpace()},this.getControllerGrip=function(k){let Q=w[k];return Q===void 0&&(Q=new qh,w[k]=Q),Q.getGripSpace()},this.getHand=function(k){let Q=w[k];return Q===void 0&&(Q=new qh,w[k]=Q),Q.getHandSpace()};function L(k){const Q=M.indexOf(k.inputSource);if(Q===-1)return;const fe=w[Q];fe!==void 0&&(fe.update(k.inputSource,k.frame,h||l),fe.dispatchEvent({type:k.type,data:k.inputSource}))}function H(){i.removeEventListener("select",L),i.removeEventListener("selectstart",L),i.removeEventListener("selectend",L),i.removeEventListener("squeeze",L),i.removeEventListener("squeezestart",L),i.removeEventListener("squeezeend",L),i.removeEventListener("end",H),i.removeEventListener("inputsourceschange",te);for(let k=0;k<w.length;k++){const Q=M[k];Q!==null&&(M[k]=null,w[k].disconnect(Q))}z=null,b=null,e.setRenderTarget(x),_=null,m=null,p=null,i=null,v=null,j.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(k){s=k,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(k){c=k,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||l},this.setReferenceSpace=function(k){h=k},this.getBaseLayer=function(){return m!==null?m:_},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return i},this.setSession=async function(k){if(i=k,i!==null){if(x=e.getRenderTarget(),i.addEventListener("select",L),i.addEventListener("selectstart",L),i.addEventListener("selectend",L),i.addEventListener("squeeze",L),i.addEventListener("squeezestart",L),i.addEventListener("squeezeend",L),i.addEventListener("end",H),i.addEventListener("inputsourceschange",te),E.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const Q={antialias:i.renderState.layers===void 0?E.antialias:!0,alpha:!0,depth:E.depth,stencil:E.stencil,framebufferScaleFactor:s};_=new XRWebGLLayer(i,t,Q),i.updateRenderState({baseLayer:_}),v=new vi(_.framebufferWidth,_.framebufferHeight,{format:Gn,type:Ni,colorSpace:e.outputColorSpace,stencilBuffer:E.stencil})}else{let Q=null,fe=null,Te=null;E.depth&&(Te=E.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Q=E.stencil?ds:Ar,fe=E.stencil?Tr:tr);const be={colorFormat:t.RGBA8,depthFormat:Te,scaleFactor:s};p=new XRWebGLBinding(i,t),m=p.createProjectionLayer(be),i.updateRenderState({layers:[m]}),v=new vi(m.textureWidth,m.textureHeight,{format:Gn,type:Ni,depthTexture:new G_(m.textureWidth,m.textureHeight,fe,void 0,void 0,void 0,void 0,void 0,void 0,Q),stencilBuffer:E.stencil,colorSpace:e.outputColorSpace,samples:E.antialias?4:0});const ke=e.properties.get(v);ke.__ignoreDepthValues=m.ignoreDepthValues}v.isXRRenderTarget=!0,this.setFoveation(u),h=null,l=await i.requestReferenceSpace(c),j.setContext(i),j.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function te(k){for(let Q=0;Q<k.removed.length;Q++){const fe=k.removed[Q],Te=M.indexOf(fe);Te>=0&&(M[Te]=null,w[Te].disconnect(fe))}for(let Q=0;Q<k.added.length;Q++){const fe=k.added[Q];let Te=M.indexOf(fe);if(Te===-1){for(let ke=0;ke<w.length;ke++)if(ke>=M.length){M.push(fe),Te=ke;break}else if(M[ke]===null){M[ke]=fe,Te=ke;break}if(Te===-1)break}const be=w[Te];be&&be.connect(fe)}}const se=new D,G=new D;function $(k,Q,fe){se.setFromMatrixPosition(Q.matrixWorld),G.setFromMatrixPosition(fe.matrixWorld);const Te=se.distanceTo(G),be=Q.projectionMatrix.elements,ke=fe.projectionMatrix.elements,He=be[14]/(be[10]-1),Ze=be[14]/(be[10]+1),yt=(be[9]+1)/be[5],Ct=(be[9]-1)/be[5],Ve=(be[8]-1)/be[0],B=(ke[8]+1)/ke[0],_e=He*Ve,he=He*B,Ee=Te/(-Ve+B),de=Ee*-Ve;Q.matrixWorld.decompose(k.position,k.quaternion,k.scale),k.translateX(de),k.translateZ(Ee),k.matrixWorld.compose(k.position,k.quaternion,k.scale),k.matrixWorldInverse.copy(k.matrixWorld).invert();const Xe=He+Ee,Ne=Ze+Ee,Oe=_e-de,et=he+(Te-de),mt=yt*Ze/Ne*Xe,Dt=Ct*Ze/Ne*Xe;k.projectionMatrix.makePerspective(Oe,et,mt,Dt,Xe,Ne),k.projectionMatrixInverse.copy(k.projectionMatrix).invert()}function oe(k,Q){Q===null?k.matrixWorld.copy(k.matrix):k.matrixWorld.multiplyMatrices(Q.matrixWorld,k.matrix),k.matrixWorldInverse.copy(k.matrixWorld).invert()}this.updateCamera=function(k){if(i===null)return;I.near=R.near=A.near=k.near,I.far=R.far=A.far=k.far,(z!==I.near||b!==I.far)&&(i.updateRenderState({depthNear:I.near,depthFar:I.far}),z=I.near,b=I.far);const Q=k.parent,fe=I.cameras;oe(I,Q);for(let Te=0;Te<fe.length;Te++)oe(fe[Te],Q);fe.length===2?$(I,A,R):I.projectionMatrix.copy(A.projectionMatrix),ie(k,I,Q)};function ie(k,Q,fe){fe===null?k.matrix.copy(Q.matrixWorld):(k.matrix.copy(fe.matrixWorld),k.matrix.invert(),k.matrix.multiply(Q.matrixWorld)),k.matrix.decompose(k.position,k.quaternion,k.scale),k.updateMatrixWorld(!0),k.projectionMatrix.copy(Q.projectionMatrix),k.projectionMatrixInverse.copy(Q.projectionMatrixInverse),k.isPerspectiveCamera&&(k.fov=go*2*Math.atan(1/k.projectionMatrix.elements[5]),k.zoom=1)}this.getCamera=function(){return I},this.getFoveation=function(){if(!(m===null&&_===null))return u},this.setFoveation=function(k){u=k,m!==null&&(m.fixedFoveation=k),_!==null&&_.fixedFoveation!==void 0&&(_.fixedFoveation=k)};let Y=null;function q(k,Q){if(d=Q.getViewerPose(h||l),y=Q,d!==null){const fe=d.views;_!==null&&(e.setRenderTargetFramebuffer(v,_.framebuffer),e.setRenderTarget(v));let Te=!1;fe.length!==I.cameras.length&&(I.cameras.length=0,Te=!0);for(let be=0;be<fe.length;be++){const ke=fe[be];let He=null;if(_!==null)He=_.getViewport(ke);else{const yt=p.getViewSubImage(m,ke);He=yt.viewport,be===0&&(e.setRenderTargetTextures(v,yt.colorTexture,m.ignoreDepthValues?void 0:yt.depthStencilTexture),e.setRenderTarget(v))}let Ze=C[be];Ze===void 0&&(Ze=new tn,Ze.layers.enable(be),Ze.viewport=new It,C[be]=Ze),Ze.matrix.fromArray(ke.transform.matrix),Ze.matrix.decompose(Ze.position,Ze.quaternion,Ze.scale),Ze.projectionMatrix.fromArray(ke.projectionMatrix),Ze.projectionMatrixInverse.copy(Ze.projectionMatrix).invert(),Ze.viewport.set(He.x,He.y,He.width,He.height),be===0&&(I.matrix.copy(Ze.matrix),I.matrix.decompose(I.position,I.quaternion,I.scale)),Te===!0&&I.cameras.push(Ze)}}for(let fe=0;fe<w.length;fe++){const Te=M[fe],be=w[fe];Te!==null&&be!==void 0&&be.update(Te,Q,h||l)}Y&&Y(k,Q),Q.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:Q}),y=null}const j=new O_;j.setAnimationLoop(q),this.setAnimationLoop=function(k){Y=k},this.dispose=function(){}}}function W1(r,e){function t(x,v){x.matrixAutoUpdate===!0&&x.updateMatrix(),v.value.copy(x.matrix)}function n(x,v){v.color.getRGB(x.fogColor.value,I_(r)),v.isFog?(x.fogNear.value=v.near,x.fogFar.value=v.far):v.isFogExp2&&(x.fogDensity.value=v.density)}function i(x,v,w,M,A){v.isMeshBasicMaterial||v.isMeshLambertMaterial?s(x,v):v.isMeshToonMaterial?(s(x,v),p(x,v)):v.isMeshPhongMaterial?(s(x,v),d(x,v)):v.isMeshStandardMaterial?(s(x,v),m(x,v),v.isMeshPhysicalMaterial&&_(x,v,A)):v.isMeshMatcapMaterial?(s(x,v),y(x,v)):v.isMeshDepthMaterial?s(x,v):v.isMeshDistanceMaterial?(s(x,v),E(x,v)):v.isMeshNormalMaterial?s(x,v):v.isLineBasicMaterial?(l(x,v),v.isLineDashedMaterial&&c(x,v)):v.isPointsMaterial?u(x,v,w,M):v.isSpriteMaterial?h(x,v):v.isShadowMaterial?(x.color.value.copy(v.color),x.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}function s(x,v){x.opacity.value=v.opacity,v.color&&x.diffuse.value.copy(v.color),v.emissive&&x.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.bumpMap&&(x.bumpMap.value=v.bumpMap,t(v.bumpMap,x.bumpMapTransform),x.bumpScale.value=v.bumpScale,v.side===Un&&(x.bumpScale.value*=-1)),v.normalMap&&(x.normalMap.value=v.normalMap,t(v.normalMap,x.normalMapTransform),x.normalScale.value.copy(v.normalScale),v.side===Un&&x.normalScale.value.negate()),v.displacementMap&&(x.displacementMap.value=v.displacementMap,t(v.displacementMap,x.displacementMapTransform),x.displacementScale.value=v.displacementScale,x.displacementBias.value=v.displacementBias),v.emissiveMap&&(x.emissiveMap.value=v.emissiveMap,t(v.emissiveMap,x.emissiveMapTransform)),v.specularMap&&(x.specularMap.value=v.specularMap,t(v.specularMap,x.specularMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest);const w=e.get(v).envMap;if(w&&(x.envMap.value=w,x.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=v.reflectivity,x.ior.value=v.ior,x.refractionRatio.value=v.refractionRatio),v.lightMap){x.lightMap.value=v.lightMap;const M=r._useLegacyLights===!0?Math.PI:1;x.lightMapIntensity.value=v.lightMapIntensity*M,t(v.lightMap,x.lightMapTransform)}v.aoMap&&(x.aoMap.value=v.aoMap,x.aoMapIntensity.value=v.aoMapIntensity,t(v.aoMap,x.aoMapTransform))}function l(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform))}function c(x,v){x.dashSize.value=v.dashSize,x.totalSize.value=v.dashSize+v.gapSize,x.scale.value=v.scale}function u(x,v,w,M){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.size.value=v.size*w,x.scale.value=M*.5,v.map&&(x.map.value=v.map,t(v.map,x.uvTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function h(x,v){x.diffuse.value.copy(v.color),x.opacity.value=v.opacity,x.rotation.value=v.rotation,v.map&&(x.map.value=v.map,t(v.map,x.mapTransform)),v.alphaMap&&(x.alphaMap.value=v.alphaMap,t(v.alphaMap,x.alphaMapTransform)),v.alphaTest>0&&(x.alphaTest.value=v.alphaTest)}function d(x,v){x.specular.value.copy(v.specular),x.shininess.value=Math.max(v.shininess,1e-4)}function p(x,v){v.gradientMap&&(x.gradientMap.value=v.gradientMap)}function m(x,v){x.metalness.value=v.metalness,v.metalnessMap&&(x.metalnessMap.value=v.metalnessMap,t(v.metalnessMap,x.metalnessMapTransform)),x.roughness.value=v.roughness,v.roughnessMap&&(x.roughnessMap.value=v.roughnessMap,t(v.roughnessMap,x.roughnessMapTransform)),e.get(v).envMap&&(x.envMapIntensity.value=v.envMapIntensity)}function _(x,v,w){x.ior.value=v.ior,v.sheen>0&&(x.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),x.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(x.sheenColorMap.value=v.sheenColorMap,t(v.sheenColorMap,x.sheenColorMapTransform)),v.sheenRoughnessMap&&(x.sheenRoughnessMap.value=v.sheenRoughnessMap,t(v.sheenRoughnessMap,x.sheenRoughnessMapTransform))),v.clearcoat>0&&(x.clearcoat.value=v.clearcoat,x.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(x.clearcoatMap.value=v.clearcoatMap,t(v.clearcoatMap,x.clearcoatMapTransform)),v.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap,t(v.clearcoatRoughnessMap,x.clearcoatRoughnessMapTransform)),v.clearcoatNormalMap&&(x.clearcoatNormalMap.value=v.clearcoatNormalMap,t(v.clearcoatNormalMap,x.clearcoatNormalMapTransform),x.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),v.side===Un&&x.clearcoatNormalScale.value.negate())),v.iridescence>0&&(x.iridescence.value=v.iridescence,x.iridescenceIOR.value=v.iridescenceIOR,x.iridescenceThicknessMinimum.value=v.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=v.iridescenceThicknessRange[1],v.iridescenceMap&&(x.iridescenceMap.value=v.iridescenceMap,t(v.iridescenceMap,x.iridescenceMapTransform)),v.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=v.iridescenceThicknessMap,t(v.iridescenceThicknessMap,x.iridescenceThicknessMapTransform))),v.transmission>0&&(x.transmission.value=v.transmission,x.transmissionSamplerMap.value=w.texture,x.transmissionSamplerSize.value.set(w.width,w.height),v.transmissionMap&&(x.transmissionMap.value=v.transmissionMap,t(v.transmissionMap,x.transmissionMapTransform)),x.thickness.value=v.thickness,v.thicknessMap&&(x.thicknessMap.value=v.thicknessMap,t(v.thicknessMap,x.thicknessMapTransform)),x.attenuationDistance.value=v.attenuationDistance,x.attenuationColor.value.copy(v.attenuationColor)),v.anisotropy>0&&(x.anisotropyVector.value.set(v.anisotropy*Math.cos(v.anisotropyRotation),v.anisotropy*Math.sin(v.anisotropyRotation)),v.anisotropyMap&&(x.anisotropyMap.value=v.anisotropyMap,t(v.anisotropyMap,x.anisotropyMapTransform))),x.specularIntensity.value=v.specularIntensity,x.specularColor.value.copy(v.specularColor),v.specularColorMap&&(x.specularColorMap.value=v.specularColorMap,t(v.specularColorMap,x.specularColorMapTransform)),v.specularIntensityMap&&(x.specularIntensityMap.value=v.specularIntensityMap,t(v.specularIntensityMap,x.specularIntensityMapTransform))}function y(x,v){v.matcap&&(x.matcap.value=v.matcap)}function E(x,v){const w=e.get(v).light;x.referencePosition.value.setFromMatrixPosition(w.matrixWorld),x.nearDistance.value=w.shadow.camera.near,x.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function X1(r,e,t,n){let i={},s={},l=[];const c=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function u(w,M){const A=M.program;n.uniformBlockBinding(w,A)}function h(w,M){let A=i[w.id];A===void 0&&(y(w),A=d(w),i[w.id]=A,w.addEventListener("dispose",x));const R=M.program;n.updateUBOMapping(w,R);const C=e.render.frame;s[w.id]!==C&&(m(w),s[w.id]=C)}function d(w){const M=p();w.__bindingPointIndex=M;const A=r.createBuffer(),R=w.__size,C=w.usage;return r.bindBuffer(r.UNIFORM_BUFFER,A),r.bufferData(r.UNIFORM_BUFFER,R,C),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,M,A),A}function p(){for(let w=0;w<c;w++)if(l.indexOf(w)===-1)return l.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(w){const M=i[w.id],A=w.uniforms,R=w.__cache;r.bindBuffer(r.UNIFORM_BUFFER,M);for(let C=0,I=A.length;C<I;C++){const z=A[C];if(_(z,C,R)===!0){const b=z.__offset,L=Array.isArray(z.value)?z.value:[z.value];let H=0;for(let te=0;te<L.length;te++){const se=L[te],G=E(se);typeof se=="number"?(z.__data[0]=se,r.bufferSubData(r.UNIFORM_BUFFER,b+H,z.__data)):se.isMatrix3?(z.__data[0]=se.elements[0],z.__data[1]=se.elements[1],z.__data[2]=se.elements[2],z.__data[3]=se.elements[0],z.__data[4]=se.elements[3],z.__data[5]=se.elements[4],z.__data[6]=se.elements[5],z.__data[7]=se.elements[0],z.__data[8]=se.elements[6],z.__data[9]=se.elements[7],z.__data[10]=se.elements[8],z.__data[11]=se.elements[0]):(se.toArray(z.__data,H),H+=G.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,b,z.__data)}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function _(w,M,A){const R=w.value;if(A[M]===void 0){if(typeof R=="number")A[M]=R;else{const C=Array.isArray(R)?R:[R],I=[];for(let z=0;z<C.length;z++)I.push(C[z].clone());A[M]=I}return!0}else if(typeof R=="number"){if(A[M]!==R)return A[M]=R,!0}else{const C=Array.isArray(A[M])?A[M]:[A[M]],I=Array.isArray(R)?R:[R];for(let z=0;z<C.length;z++){const b=C[z];if(b.equals(I[z])===!1)return b.copy(I[z]),!0}}return!1}function y(w){const M=w.uniforms;let A=0;const R=16;let C=0;for(let I=0,z=M.length;I<z;I++){const b=M[I],L={boundary:0,storage:0},H=Array.isArray(b.value)?b.value:[b.value];for(let te=0,se=H.length;te<se;te++){const G=H[te],$=E(G);L.boundary+=$.boundary,L.storage+=$.storage}if(b.__data=new Float32Array(L.storage/Float32Array.BYTES_PER_ELEMENT),b.__offset=A,I>0){C=A%R;const te=R-C;C!==0&&te-L.boundary<0&&(A+=R-C,b.__offset=A)}A+=L.storage}return C=A%R,C>0&&(A+=R-C),w.__size=A,w.__cache={},this}function E(w){const M={boundary:0,storage:0};return typeof w=="number"?(M.boundary=4,M.storage=4):w.isVector2?(M.boundary=8,M.storage=8):w.isVector3||w.isColor?(M.boundary=16,M.storage=12):w.isVector4?(M.boundary=16,M.storage=16):w.isMatrix3?(M.boundary=48,M.storage=48):w.isMatrix4?(M.boundary=64,M.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),M}function x(w){const M=w.target;M.removeEventListener("dispose",x);const A=l.indexOf(M.__bindingPointIndex);l.splice(A,1),r.deleteBuffer(i[M.id]),delete i[M.id],delete s[M.id]}function v(){for(const w in i)r.deleteBuffer(i[w]);l=[],i={},s={}}return{bind:u,update:h,dispose:v}}class Ld{constructor(e={}){const{canvas:t=C_(),context:n=null,depth:i=!0,stencil:s=!0,alpha:l=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;n!==null?m=n.getContextAttributes().alpha:m=l;const _=new Uint32Array(4),y=new Int32Array(4);let E=null,x=null;const v=[],w=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=hn,this._useLegacyLights=!1,this.toneMapping=Di,this.toneMappingExposure=1;const M=this;let A=!1,R=0,C=0,I=null,z=-1,b=null;const L=new It,H=new It;let te=null;const se=new Fe(0);let G=0,$=t.width,oe=t.height,ie=1,Y=null,q=null;const j=new It(0,0,$,oe),k=new It(0,0,$,oe);let Q=!1;const fe=new Qc;let Te=!1,be=!1,ke=null;const He=new ut,Ze=new ue,yt=new D,Ct={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ve(){return I===null?ie:1}let B=n;function _e(N,Z){for(let le=0;le<N.length;le++){const K=N[le],ce=t.getContext(K,Z);if(ce!==null)return ce}return null}try{const N={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:d,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Xc}`),t.addEventListener("webglcontextlost",me,!1),t.addEventListener("webglcontextrestored",ye,!1),t.addEventListener("webglcontextcreationerror",Ce,!1),B===null){const Z=["webgl2","webgl","experimental-webgl"];if(M.isWebGL1Renderer===!0&&Z.shift(),B=_e(Z,N),B===null)throw _e(Z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&B instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),B.getShaderPrecisionFormat===void 0&&(B.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(N){throw console.error("THREE.WebGLRenderer: "+N.message),N}let he,Ee,de,Xe,Ne,Oe,et,mt,Dt,O,P,ee,Se,ge,xe,Ge,Ae,Pe,nt,St,Me,Mt,V,ae;function ve(){he=new aw(B),Ee=new tw(B,he,e),he.init(Ee),Mt=new H_(B,he,Ee),de=new k1(B,he,Ee),Xe=new uw(B),Ne=new R1,Oe=new H1(B,he,de,Ne,Ee,Mt,Xe),et=new iw(M),mt=new ow(M),Dt=new xS(B,Ee),V=new $E(B,he,Dt,Ee),O=new lw(B,Dt,Xe,V),P=new pw(B,O,Dt,Xe),nt=new dw(B,Ee,Oe),Ge=new nw(Ne),ee=new b1(M,et,mt,he,Ee,V,Ge),Se=new W1(M,Ne),ge=new P1,xe=new O1(he,Ee),Pe=new QE(M,et,mt,de,P,m,u),Ae=new B1(M,P,Ee),ae=new X1(B,Xe,Ee,de),St=new ew(B,he,Xe,Ee),Me=new cw(B,he,Xe,Ee),Xe.programs=ee.programs,M.capabilities=Ee,M.extensions=he,M.properties=Ne,M.renderLists=ge,M.shadowMap=Ae,M.state=de,M.info=Xe}ve();const F=new G1(M,B);this.xr=F,this.getContext=function(){return B},this.getContextAttributes=function(){return B.getContextAttributes()},this.forceContextLoss=function(){const N=he.get("WEBGL_lose_context");N&&N.loseContext()},this.forceContextRestore=function(){const N=he.get("WEBGL_lose_context");N&&N.restoreContext()},this.getPixelRatio=function(){return ie},this.setPixelRatio=function(N){N!==void 0&&(ie=N,this.setSize($,oe,!1))},this.getSize=function(N){return N.set($,oe)},this.setSize=function(N,Z,le=!0){if(F.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}$=N,oe=Z,t.width=Math.floor(N*ie),t.height=Math.floor(Z*ie),le===!0&&(t.style.width=N+"px",t.style.height=Z+"px"),this.setViewport(0,0,N,Z)},this.getDrawingBufferSize=function(N){return N.set($*ie,oe*ie).floor()},this.setDrawingBufferSize=function(N,Z,le){$=N,oe=Z,ie=le,t.width=Math.floor(N*le),t.height=Math.floor(Z*le),this.setViewport(0,0,N,Z)},this.getCurrentViewport=function(N){return N.copy(L)},this.getViewport=function(N){return N.copy(j)},this.setViewport=function(N,Z,le,K){N.isVector4?j.set(N.x,N.y,N.z,N.w):j.set(N,Z,le,K),de.viewport(L.copy(j).multiplyScalar(ie).floor())},this.getScissor=function(N){return N.copy(k)},this.setScissor=function(N,Z,le,K){N.isVector4?k.set(N.x,N.y,N.z,N.w):k.set(N,Z,le,K),de.scissor(H.copy(k).multiplyScalar(ie).floor())},this.getScissorTest=function(){return Q},this.setScissorTest=function(N){de.setScissorTest(Q=N)},this.setOpaqueSort=function(N){Y=N},this.setTransparentSort=function(N){q=N},this.getClearColor=function(N){return N.copy(Pe.getClearColor())},this.setClearColor=function(){Pe.setClearColor.apply(Pe,arguments)},this.getClearAlpha=function(){return Pe.getClearAlpha()},this.setClearAlpha=function(){Pe.setClearAlpha.apply(Pe,arguments)},this.clear=function(N=!0,Z=!0,le=!0){let K=0;if(N){let ce=!1;if(I!==null){const ze=I.texture.format;ce=ze===xd||ze===yd||ze===vd}if(ce){const ze=I.texture.type,Ke=ze===Ni||ze===tr||ze===jc||ze===Tr||ze===gd||ze===_d,it=Pe.getClearColor(),rt=Pe.getClearAlpha(),gt=it.r,tt=it.g,ot=it.b;Ke?(_[0]=gt,_[1]=tt,_[2]=ot,_[3]=rt,B.clearBufferuiv(B.COLOR,0,_)):(y[0]=gt,y[1]=tt,y[2]=ot,y[3]=rt,B.clearBufferiv(B.COLOR,0,y))}else K|=B.COLOR_BUFFER_BIT}Z&&(K|=B.DEPTH_BUFFER_BIT),le&&(K|=B.STENCIL_BUFFER_BIT),B.clear(K)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",me,!1),t.removeEventListener("webglcontextrestored",ye,!1),t.removeEventListener("webglcontextcreationerror",Ce,!1),ge.dispose(),xe.dispose(),Ne.dispose(),et.dispose(),mt.dispose(),P.dispose(),V.dispose(),ae.dispose(),ee.dispose(),F.dispose(),F.removeEventListener("sessionstart",Et),F.removeEventListener("sessionend",ln),ke&&(ke.dispose(),ke=null),Xt.stop()};function me(N){N.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),A=!0}function ye(){console.log("THREE.WebGLRenderer: Context Restored."),A=!1;const N=Xe.autoReset,Z=Ae.enabled,le=Ae.autoUpdate,K=Ae.needsUpdate,ce=Ae.type;ve(),Xe.autoReset=N,Ae.enabled=Z,Ae.autoUpdate=le,Ae.needsUpdate=K,Ae.type=ce}function Ce(N){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",N.statusMessage)}function Le(N){const Z=N.target;Z.removeEventListener("dispose",Le),pe(Z)}function pe(N){Ue(N),Ne.remove(N)}function Ue(N){const Z=Ne.get(N).programs;Z!==void 0&&(Z.forEach(function(le){ee.releaseProgram(le)}),N.isShaderMaterial&&ee.releaseShaderCache(N))}this.renderBufferDirect=function(N,Z,le,K,ce,ze){Z===null&&(Z=Ct);const Ke=ce.isMesh&&ce.matrixWorld.determinant()<0,it=xu(N,Z,le,K,ce);de.setMaterial(K,Ke);let rt=le.index,gt=1;if(K.wireframe===!0){if(rt=O.getWireframeAttribute(le),rt===void 0)return;gt=2}const tt=le.drawRange,ot=le.attributes.position;let Ft=tt.start*gt,Bt=(tt.start+tt.count)*gt;ze!==null&&(Ft=Math.max(Ft,ze.start*gt),Bt=Math.min(Bt,(ze.start+ze.count)*gt)),rt!==null?(Ft=Math.max(Ft,0),Bt=Math.min(Bt,rt.count)):ot!=null&&(Ft=Math.max(Ft,0),Bt=Math.min(Bt,ot.count));const Fn=Bt-Ft;if(Fn<0||Fn===1/0)return;V.setup(ce,K,it,le,rt);let Yn,Nt=St;if(rt!==null&&(Yn=Dt.get(rt),Nt=Me,Nt.setIndex(Yn)),ce.isMesh)K.wireframe===!0?(de.setLineWidth(K.wireframeLinewidth*Ve()),Nt.setMode(B.LINES)):Nt.setMode(B.TRIANGLES);else if(ce.isLine){let at=K.linewidth;at===void 0&&(at=1),de.setLineWidth(at*Ve()),ce.isLineSegments?Nt.setMode(B.LINES):ce.isLineLoop?Nt.setMode(B.LINE_LOOP):Nt.setMode(B.LINE_STRIP)}else ce.isPoints?Nt.setMode(B.POINTS):ce.isSprite&&Nt.setMode(B.TRIANGLES);if(ce.isInstancedMesh)Nt.renderInstances(Ft,Fn,ce.count);else if(le.isInstancedBufferGeometry){const at=le._maxInstanceCount!==void 0?le._maxInstanceCount:1/0,Pt=Math.min(le.instanceCount,at);Nt.renderInstances(Ft,Fn,Pt)}else Nt.render(Ft,Fn)},this.compile=function(N,Z){function le(K,ce,ze){K.transparent===!0&&K.side===Pi&&K.forceSinglePass===!1?(K.side=Un,K.needsUpdate=!0,Mi(K,ce,ze),K.side=ir,K.needsUpdate=!0,Mi(K,ce,ze),K.side=Pi):Mi(K,ce,ze)}x=xe.get(N),x.init(),w.push(x),N.traverseVisible(function(K){K.isLight&&K.layers.test(Z.layers)&&(x.pushLight(K),K.castShadow&&x.pushShadow(K))}),x.setupLights(M._useLegacyLights),N.traverse(function(K){const ce=K.material;if(ce)if(Array.isArray(ce))for(let ze=0;ze<ce.length;ze++){const Ke=ce[ze];le(Ke,N,K)}else le(ce,N,K)}),w.pop(),x=null};let Je=null;function Ht(N){Je&&Je(N)}function Et(){Xt.stop()}function ln(){Xt.start()}const Xt=new O_;Xt.setAnimationLoop(Ht),typeof self<"u"&&Xt.setContext(self),this.setAnimationLoop=function(N){Je=N,F.setAnimationLoop(N),N===null?Xt.stop():Xt.start()},F.addEventListener("sessionstart",Et),F.addEventListener("sessionend",ln),this.render=function(N,Z){if(Z!==void 0&&Z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(A===!0)return;N.matrixWorldAutoUpdate===!0&&N.updateMatrixWorld(),Z.parent===null&&Z.matrixWorldAutoUpdate===!0&&Z.updateMatrixWorld(),F.enabled===!0&&F.isPresenting===!0&&(F.cameraAutoUpdate===!0&&F.updateCamera(Z),Z=F.getCamera()),N.isScene===!0&&N.onBeforeRender(M,N,Z,I),x=xe.get(N,w.length),x.init(),w.push(x),He.multiplyMatrices(Z.projectionMatrix,Z.matrixWorldInverse),fe.setFromProjectionMatrix(He),be=this.localClippingEnabled,Te=Ge.init(this.clippingPlanes,be),E=ge.get(N,v.length),E.init(),v.push(E),Va(N,Z,0,M.sortObjects),E.finish(),M.sortObjects===!0&&E.sort(Y,q),this.info.render.frame++,Te===!0&&Ge.beginShadows();const le=x.state.shadowsArray;if(Ae.render(le,N,Z),Te===!0&&Ge.endShadows(),this.info.autoReset===!0&&this.info.reset(),Pe.render(E,N),x.setupLights(M._useLegacyLights),Z.isArrayCamera){const K=Z.cameras;for(let ce=0,ze=K.length;ce<ze;ce++){const Ke=K[ce];Ga(E,N,Ke,Ke.viewport)}}else Ga(E,N,Z);I!==null&&(Oe.updateMultisampleRenderTarget(I),Oe.updateRenderTargetMipmap(I)),N.isScene===!0&&N.onAfterRender(M,N,Z),V.resetDefaultState(),z=-1,b=null,w.pop(),w.length>0?x=w[w.length-1]:x=null,v.pop(),v.length>0?E=v[v.length-1]:E=null};function Va(N,Z,le,K){if(N.visible===!1)return;if(N.layers.test(Z.layers)){if(N.isGroup)le=N.renderOrder;else if(N.isLOD)N.autoUpdate===!0&&N.update(Z);else if(N.isLight)x.pushLight(N),N.castShadow&&x.pushShadow(N);else if(N.isSprite){if(!N.frustumCulled||fe.intersectsSprite(N)){K&&yt.setFromMatrixPosition(N.matrixWorld).applyMatrix4(He);const Ke=P.update(N),it=N.material;it.visible&&E.push(N,Ke,it,le,yt.z,null)}}else if((N.isMesh||N.isLine||N.isPoints)&&(!N.frustumCulled||fe.intersectsObject(N))){const Ke=P.update(N),it=N.material;if(K&&(N.boundingSphere!==void 0?(N.boundingSphere===null&&N.computeBoundingSphere(),yt.copy(N.boundingSphere.center)):(Ke.boundingSphere===null&&Ke.computeBoundingSphere(),yt.copy(Ke.boundingSphere.center)),yt.applyMatrix4(N.matrixWorld).applyMatrix4(He)),Array.isArray(it)){const rt=Ke.groups;for(let gt=0,tt=rt.length;gt<tt;gt++){const ot=rt[gt],Ft=it[ot.materialIndex];Ft&&Ft.visible&&E.push(N,Ke,Ft,le,yt.z,ot)}}else it.visible&&E.push(N,Ke,it,le,yt.z,null)}}const ze=N.children;for(let Ke=0,it=ze.length;Ke<it;Ke++)Va(ze[Ke],Z,le,K)}function Ga(N,Z,le,K){const ce=N.opaque,ze=N.transmissive,Ke=N.transparent;x.setupLightsView(le),Te===!0&&Ge.setGlobalState(M.clippingPlanes,le),ze.length>0&&Wa(ce,ze,Z,le),K&&de.viewport(L.copy(K)),ce.length>0&&ar(ce,Z,le),ze.length>0&&ar(ze,Z,le),Ke.length>0&&ar(Ke,Z,le),de.buffers.depth.setTest(!0),de.buffers.depth.setMask(!0),de.buffers.color.setMask(!0),de.setPolygonOffset(!1)}function Wa(N,Z,le,K){const ce=Ee.isWebGL2;ke===null&&(ke=new vi(1,1,{generateMipmaps:!0,type:he.has("EXT_color_buffer_half_float")?mo:Ni,minFilter:Pr,samples:ce?4:0})),M.getDrawingBufferSize(Ze),ce?ke.setSize(Ze.x,Ze.y):ke.setSize(Vc(Ze.x),Vc(Ze.y));const ze=M.getRenderTarget();M.setRenderTarget(ke),M.getClearColor(se),G=M.getClearAlpha(),G<1&&M.setClearColor(16777215,.5),M.clear();const Ke=M.toneMapping;M.toneMapping=Di,ar(N,le,K),Oe.updateMultisampleRenderTarget(ke),Oe.updateRenderTargetMipmap(ke);let it=!1;for(let rt=0,gt=Z.length;rt<gt;rt++){const tt=Z[rt],ot=tt.object,Ft=tt.geometry,Bt=tt.material,Fn=tt.group;if(Bt.side===Pi&&ot.layers.test(K.layers)){const Yn=Bt.side;Bt.side=Un,Bt.needsUpdate=!0,Xa(ot,le,K,Ft,Bt,Fn),Bt.side=Yn,Bt.needsUpdate=!0,it=!0}}it===!0&&(Oe.updateMultisampleRenderTarget(ke),Oe.updateRenderTargetMipmap(ke)),M.setRenderTarget(ze),M.setClearColor(se,G),M.toneMapping=Ke}function ar(N,Z,le){const K=Z.isScene===!0?Z.overrideMaterial:null;for(let ce=0,ze=N.length;ce<ze;ce++){const Ke=N[ce],it=Ke.object,rt=Ke.geometry,gt=K===null?Ke.material:K,tt=Ke.group;it.layers.test(le.layers)&&Xa(it,Z,le,rt,gt,tt)}}function Xa(N,Z,le,K,ce,ze){N.onBeforeRender(M,Z,le,K,ce,ze),N.modelViewMatrix.multiplyMatrices(le.matrixWorldInverse,N.matrixWorld),N.normalMatrix.getNormalMatrix(N.modelViewMatrix),ce.onBeforeRender(M,Z,le,K,N,ze),ce.transparent===!0&&ce.side===Pi&&ce.forceSinglePass===!1?(ce.side=Un,ce.needsUpdate=!0,M.renderBufferDirect(le,Z,K,ce,N,ze),ce.side=ir,ce.needsUpdate=!0,M.renderBufferDirect(le,Z,K,ce,N,ze),ce.side=Pi):M.renderBufferDirect(le,Z,K,ce,N,ze),N.onAfterRender(M,Z,le,K,ce,ze)}function Mi(N,Z,le){Z.isScene!==!0&&(Z=Ct);const K=Ne.get(N),ce=x.state.lights,ze=x.state.shadowsArray,Ke=ce.state.version,it=ee.getParameters(N,ce.state,ze,Z,le),rt=ee.getProgramCacheKey(it);let gt=K.programs;K.environment=N.isMeshStandardMaterial?Z.environment:null,K.fog=Z.fog,K.envMap=(N.isMeshStandardMaterial?mt:et).get(N.envMap||K.environment),gt===void 0&&(N.addEventListener("dispose",Le),gt=new Map,K.programs=gt);let tt=gt.get(rt);if(tt!==void 0){if(K.currentProgram===tt&&K.lightsStateVersion===Ke)return Ya(N,it),tt}else it.uniforms=ee.getUniforms(N),N.onBuild(le,it,M),N.onBeforeCompile(it,M),tt=ee.acquireProgram(it,rt),gt.set(rt,tt),K.uniforms=it.uniforms;const ot=K.uniforms;(!N.isShaderMaterial&&!N.isRawShaderMaterial||N.clipping===!0)&&(ot.clippingPlanes=Ge.uniform),Ya(N,it),K.needsLights=Mu(N),K.lightsStateVersion=Ke,K.needsLights&&(ot.ambientLightColor.value=ce.state.ambient,ot.lightProbe.value=ce.state.probe,ot.directionalLights.value=ce.state.directional,ot.directionalLightShadows.value=ce.state.directionalShadow,ot.spotLights.value=ce.state.spot,ot.spotLightShadows.value=ce.state.spotShadow,ot.rectAreaLights.value=ce.state.rectArea,ot.ltc_1.value=ce.state.rectAreaLTC1,ot.ltc_2.value=ce.state.rectAreaLTC2,ot.pointLights.value=ce.state.point,ot.pointLightShadows.value=ce.state.pointShadow,ot.hemisphereLights.value=ce.state.hemi,ot.directionalShadowMap.value=ce.state.directionalShadowMap,ot.directionalShadowMatrix.value=ce.state.directionalShadowMatrix,ot.spotShadowMap.value=ce.state.spotShadowMap,ot.spotLightMatrix.value=ce.state.spotLightMatrix,ot.spotLightMap.value=ce.state.spotLightMap,ot.pointShadowMap.value=ce.state.pointShadowMap,ot.pointShadowMatrix.value=ce.state.pointShadowMatrix);const Ft=tt.getUniforms(),Bt=Fc.seqWithValue(Ft.seq,ot);return K.currentProgram=tt,K.uniformsList=Bt,tt}function Ya(N,Z){const le=Ne.get(N);le.outputColorSpace=Z.outputColorSpace,le.instancing=Z.instancing,le.instancingColor=Z.instancingColor,le.skinning=Z.skinning,le.morphTargets=Z.morphTargets,le.morphNormals=Z.morphNormals,le.morphColors=Z.morphColors,le.morphTargetsCount=Z.morphTargetsCount,le.numClippingPlanes=Z.numClippingPlanes,le.numIntersection=Z.numClipIntersection,le.vertexAlphas=Z.vertexAlphas,le.vertexTangents=Z.vertexTangents,le.toneMapping=Z.toneMapping}function xu(N,Z,le,K,ce){Z.isScene!==!0&&(Z=Ct),Oe.resetTextureUnits();const ze=Z.fog,Ke=K.isMeshStandardMaterial?Z.environment:null,it=I===null?M.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:Oi,rt=(K.isMeshStandardMaterial?mt:et).get(K.envMap||Ke),gt=K.vertexColors===!0&&!!le.attributes.color&&le.attributes.color.itemSize===4,tt=!!le.attributes.tangent&&(!!K.normalMap||K.anisotropy>0),ot=!!le.morphAttributes.position,Ft=!!le.morphAttributes.normal,Bt=!!le.morphAttributes.color;let Fn=Di;K.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(Fn=M.toneMapping);const Yn=le.morphAttributes.position||le.morphAttributes.normal||le.morphAttributes.color,Nt=Yn!==void 0?Yn.length:0,at=Ne.get(K),Pt=x.state.lights;if(Te===!0&&(be===!0||N!==b)){const Sn=N===b&&K.id===z;Ge.setState(K,N,Sn)}let st=!1;K.version===at.__version?(at.needsLights&&at.lightsStateVersion!==Pt.state.version||at.outputColorSpace!==it||ce.isInstancedMesh&&at.instancing===!1||!ce.isInstancedMesh&&at.instancing===!0||ce.isSkinnedMesh&&at.skinning===!1||!ce.isSkinnedMesh&&at.skinning===!0||ce.isInstancedMesh&&at.instancingColor===!0&&ce.instanceColor===null||ce.isInstancedMesh&&at.instancingColor===!1&&ce.instanceColor!==null||at.envMap!==rt||K.fog===!0&&at.fog!==ze||at.numClippingPlanes!==void 0&&(at.numClippingPlanes!==Ge.numPlanes||at.numIntersection!==Ge.numIntersection)||at.vertexAlphas!==gt||at.vertexTangents!==tt||at.morphTargets!==ot||at.morphNormals!==Ft||at.morphColors!==Bt||at.toneMapping!==Fn||Ee.isWebGL2===!0&&at.morphTargetsCount!==Nt)&&(st=!0):(st=!0,at.__version=K.version);let xn=at.currentProgram;st===!0&&(xn=Mi(K,Z,ce));let cn=!1,rn=!1,ui=!1;const Yt=xn.getUniforms(),qt=at.uniforms;if(de.useProgram(xn.program)&&(cn=!0,rn=!0,ui=!0),K.id!==z&&(z=K.id,rn=!0),cn||b!==N){Yt.setValue(B,"projectionMatrix",N.projectionMatrix),Yt.setValue(B,"viewMatrix",N.matrixWorldInverse);const Sn=Yt.map.cameraPosition;Sn!==void 0&&Sn.setValue(B,yt.setFromMatrixPosition(N.matrixWorld)),Ee.logarithmicDepthBuffer&&Yt.setValue(B,"logDepthBufFC",2/(Math.log(N.far+1)/Math.LN2)),(K.isMeshPhongMaterial||K.isMeshToonMaterial||K.isMeshLambertMaterial||K.isMeshBasicMaterial||K.isMeshStandardMaterial||K.isShaderMaterial)&&Yt.setValue(B,"isOrthographic",N.isOrthographicCamera===!0),b!==N&&(b=N,rn=!0,ui=!0)}if(ce.isSkinnedMesh){Yt.setOptional(B,ce,"bindMatrix"),Yt.setOptional(B,ce,"bindMatrixInverse");const Sn=ce.skeleton;Sn&&(Ee.floatVertexTextures?(Sn.boneTexture===null&&Sn.computeBoneTexture(),Yt.setValue(B,"boneTexture",Sn.boneTexture,Oe),Yt.setValue(B,"boneTextureSize",Sn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const lr=le.morphAttributes;if((lr.position!==void 0||lr.normal!==void 0||lr.color!==void 0&&Ee.isWebGL2===!0)&&nt.update(ce,le,xn),(rn||at.receiveShadow!==ce.receiveShadow)&&(at.receiveShadow=ce.receiveShadow,Yt.setValue(B,"receiveShadow",ce.receiveShadow)),K.isMeshGouraudMaterial&&K.envMap!==null&&(qt.envMap.value=rt,qt.flipEnvMap.value=rt.isCubeTexture&&rt.isRenderTargetTexture===!1?-1:1),rn&&(Yt.setValue(B,"toneMappingExposure",M.toneMappingExposure),at.needsLights&&Su(qt,ui),ze&&K.fog===!0&&Se.refreshFogUniforms(qt,ze),Se.refreshMaterialUniforms(qt,K,ie,oe,ke),Fc.upload(B,at.uniformsList,qt,Oe)),K.isShaderMaterial&&K.uniformsNeedUpdate===!0&&(Fc.upload(B,at.uniformsList,qt,Oe),K.uniformsNeedUpdate=!1),K.isSpriteMaterial&&Yt.setValue(B,"center",ce.center),Yt.setValue(B,"modelViewMatrix",ce.modelViewMatrix),Yt.setValue(B,"normalMatrix",ce.normalMatrix),Yt.setValue(B,"modelMatrix",ce.matrixWorld),K.isShaderMaterial||K.isRawShaderMaterial){const Sn=K.uniformsGroups;for(let Ss=0,Ms=Sn.length;Ss<Ms;Ss++)if(Ee.isWebGL2){const wo=Sn[Ss];ae.update(wo,xn),ae.bind(wo,xn)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return xn}function Su(N,Z){N.ambientLightColor.needsUpdate=Z,N.lightProbe.needsUpdate=Z,N.directionalLights.needsUpdate=Z,N.directionalLightShadows.needsUpdate=Z,N.pointLights.needsUpdate=Z,N.pointLightShadows.needsUpdate=Z,N.spotLights.needsUpdate=Z,N.spotLightShadows.needsUpdate=Z,N.rectAreaLights.needsUpdate=Z,N.hemisphereLights.needsUpdate=Z}function Mu(N){return N.isMeshLambertMaterial||N.isMeshToonMaterial||N.isMeshPhongMaterial||N.isMeshStandardMaterial||N.isShadowMaterial||N.isShaderMaterial&&N.lights===!0}this.getActiveCubeFace=function(){return R},this.getActiveMipmapLevel=function(){return C},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(N,Z,le){Ne.get(N.texture).__webglTexture=Z,Ne.get(N.depthTexture).__webglTexture=le;const K=Ne.get(N);K.__hasExternalTextures=!0,K.__hasExternalTextures&&(K.__autoAllocateDepthBuffer=le===void 0,K.__autoAllocateDepthBuffer||he.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),K.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(N,Z){const le=Ne.get(N);le.__webglFramebuffer=Z,le.__useDefaultFramebuffer=Z===void 0},this.setRenderTarget=function(N,Z=0,le=0){I=N,R=Z,C=le;let K=!0,ce=null,ze=!1,Ke=!1;if(N){const rt=Ne.get(N);rt.__useDefaultFramebuffer!==void 0?(de.bindFramebuffer(B.FRAMEBUFFER,null),K=!1):rt.__webglFramebuffer===void 0?Oe.setupRenderTarget(N):rt.__hasExternalTextures&&Oe.rebindTextures(N,Ne.get(N.texture).__webglTexture,Ne.get(N.depthTexture).__webglTexture);const gt=N.texture;(gt.isData3DTexture||gt.isDataArrayTexture||gt.isCompressedArrayTexture)&&(Ke=!0);const tt=Ne.get(N).__webglFramebuffer;N.isWebGLCubeRenderTarget?(Array.isArray(tt[Z])?ce=tt[Z][le]:ce=tt[Z],ze=!0):Ee.isWebGL2&&N.samples>0&&Oe.useMultisampledRTT(N)===!1?ce=Ne.get(N).__webglMultisampledFramebuffer:Array.isArray(tt)?ce=tt[le]:ce=tt,L.copy(N.viewport),H.copy(N.scissor),te=N.scissorTest}else L.copy(j).multiplyScalar(ie).floor(),H.copy(k).multiplyScalar(ie).floor(),te=Q;if(de.bindFramebuffer(B.FRAMEBUFFER,ce)&&Ee.drawBuffers&&K&&de.drawBuffers(N,ce),de.viewport(L),de.scissor(H),de.setScissorTest(te),ze){const rt=Ne.get(N.texture);B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_CUBE_MAP_POSITIVE_X+Z,rt.__webglTexture,le)}else if(Ke){const rt=Ne.get(N.texture),gt=Z||0;B.framebufferTextureLayer(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,rt.__webglTexture,le||0,gt)}z=-1},this.readRenderTargetPixels=function(N,Z,le,K,ce,ze,Ke){if(!(N&&N.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let it=Ne.get(N).__webglFramebuffer;if(N.isWebGLCubeRenderTarget&&Ke!==void 0&&(it=it[Ke]),it){de.bindFramebuffer(B.FRAMEBUFFER,it);try{const rt=N.texture,gt=rt.format,tt=rt.type;if(gt!==Gn&&Mt.convert(gt)!==B.getParameter(B.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ot=tt===mo&&(he.has("EXT_color_buffer_half_float")||Ee.isWebGL2&&he.has("EXT_color_buffer_float"));if(tt!==Ni&&Mt.convert(tt)!==B.getParameter(B.IMPLEMENTATION_COLOR_READ_TYPE)&&!(tt===Li&&(Ee.isWebGL2||he.has("OES_texture_float")||he.has("WEBGL_color_buffer_float")))&&!ot){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Z>=0&&Z<=N.width-K&&le>=0&&le<=N.height-ce&&B.readPixels(Z,le,K,ce,Mt.convert(gt),Mt.convert(tt),ze)}finally{const rt=I!==null?Ne.get(I).__webglFramebuffer:null;de.bindFramebuffer(B.FRAMEBUFFER,rt)}}},this.copyFramebufferToTexture=function(N,Z,le=0){const K=Math.pow(2,-le),ce=Math.floor(Z.image.width*K),ze=Math.floor(Z.image.height*K);Oe.setTexture2D(Z,0),B.copyTexSubImage2D(B.TEXTURE_2D,le,0,0,N.x,N.y,ce,ze),de.unbindTexture()},this.copyTextureToTexture=function(N,Z,le,K=0){const ce=Z.image.width,ze=Z.image.height,Ke=Mt.convert(le.format),it=Mt.convert(le.type);Oe.setTexture2D(le,0),B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,le.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,le.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,le.unpackAlignment),Z.isDataTexture?B.texSubImage2D(B.TEXTURE_2D,K,N.x,N.y,ce,ze,Ke,it,Z.image.data):Z.isCompressedTexture?B.compressedTexSubImage2D(B.TEXTURE_2D,K,N.x,N.y,Z.mipmaps[0].width,Z.mipmaps[0].height,Ke,Z.mipmaps[0].data):B.texSubImage2D(B.TEXTURE_2D,K,N.x,N.y,Ke,it,Z.image),K===0&&le.generateMipmaps&&B.generateMipmap(B.TEXTURE_2D),de.unbindTexture()},this.copyTextureToTexture3D=function(N,Z,le,K,ce=0){if(M.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const ze=N.max.x-N.min.x+1,Ke=N.max.y-N.min.y+1,it=N.max.z-N.min.z+1,rt=Mt.convert(K.format),gt=Mt.convert(K.type);let tt;if(K.isData3DTexture)Oe.setTexture3D(K,0),tt=B.TEXTURE_3D;else if(K.isDataArrayTexture)Oe.setTexture2DArray(K,0),tt=B.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,K.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,K.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,K.unpackAlignment);const ot=B.getParameter(B.UNPACK_ROW_LENGTH),Ft=B.getParameter(B.UNPACK_IMAGE_HEIGHT),Bt=B.getParameter(B.UNPACK_SKIP_PIXELS),Fn=B.getParameter(B.UNPACK_SKIP_ROWS),Yn=B.getParameter(B.UNPACK_SKIP_IMAGES),Nt=le.isCompressedTexture?le.mipmaps[0]:le.image;B.pixelStorei(B.UNPACK_ROW_LENGTH,Nt.width),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,Nt.height),B.pixelStorei(B.UNPACK_SKIP_PIXELS,N.min.x),B.pixelStorei(B.UNPACK_SKIP_ROWS,N.min.y),B.pixelStorei(B.UNPACK_SKIP_IMAGES,N.min.z),le.isDataTexture||le.isData3DTexture?B.texSubImage3D(tt,ce,Z.x,Z.y,Z.z,ze,Ke,it,rt,gt,Nt.data):le.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),B.compressedTexSubImage3D(tt,ce,Z.x,Z.y,Z.z,ze,Ke,it,rt,Nt.data)):B.texSubImage3D(tt,ce,Z.x,Z.y,Z.z,ze,Ke,it,rt,gt,Nt),B.pixelStorei(B.UNPACK_ROW_LENGTH,ot),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,Ft),B.pixelStorei(B.UNPACK_SKIP_PIXELS,Bt),B.pixelStorei(B.UNPACK_SKIP_ROWS,Fn),B.pixelStorei(B.UNPACK_SKIP_IMAGES,Yn),ce===0&&K.generateMipmaps&&B.generateMipmap(tt),de.unbindTexture()},this.initTexture=function(N){N.isCubeTexture?Oe.setTextureCube(N,0):N.isData3DTexture?Oe.setTexture3D(N,0):N.isDataArrayTexture||N.isCompressedArrayTexture?Oe.setTexture2DArray(N,0):Oe.setTexture2D(N,0),de.unbindTexture()},this.resetState=function(){R=0,C=0,I=null,de.reset(),V.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ii}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===Jc?"display-p3":"srgb",t.unpackColorSpace=Lt.workingColorSpace===Ia?"display-p3":"srgb"}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===hn?br:Md}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===br?hn:Oi}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class W_ extends Ld{}W_.prototype.isWebGL1Renderer=!0;class eu{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Fe(e),this.density=t}clone(){return new eu(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class tu{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Fe(e),this.near=t,this.far=n}clone(){return new tu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Id extends Rt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}}class nu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=xa,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=ei()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ei()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ei()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Dn=new D;class ps{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.applyMatrix4(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.applyNormalMatrix(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Dn.fromBufferAttribute(this,t),Dn.transformDirection(e),this.setXYZ(t,Dn.x,Dn.y,Dn.z);return this}setX(e,t){return this.normalized&&(t=ft(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ft(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ft(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ft(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Wn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Wn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Wn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Wn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=ft(t,this.array),n=ft(n,this.array),i=ft(i,this.array),s=ft(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Ot(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new ps(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Dd extends Pn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Fe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Ks;const jo=new D,Qs=new D,$s=new D,eo=new ue,Zo=new ue,X_=new ut,oc=new D,Jo=new D,ac=new D,gg=new ue,jh=new ue,_g=new ue;class Y_ extends Rt{constructor(e=new Dd){if(super(),this.isSprite=!0,this.type="Sprite",Ks===void 0){Ks=new vt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new nu(t,5);Ks.setIndex([0,1,2,0,2,3]),Ks.setAttribute("position",new ps(n,3,0,!1)),Ks.setAttribute("uv",new ps(n,2,3,!1))}this.geometry=Ks,this.material=e,this.center=new ue(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Qs.setFromMatrixScale(this.matrixWorld),X_.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),$s.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Qs.multiplyScalar(-$s.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const l=this.center;lc(oc.set(-.5,-.5,0),$s,l,Qs,i,s),lc(Jo.set(.5,-.5,0),$s,l,Qs,i,s),lc(ac.set(.5,.5,0),$s,l,Qs,i,s),gg.set(0,0),jh.set(1,0),_g.set(1,1);let c=e.ray.intersectTriangle(oc,Jo,ac,!1,jo);if(c===null&&(lc(Jo.set(-.5,.5,0),$s,l,Qs,i,s),jh.set(0,1),c=e.ray.intersectTriangle(oc,ac,Jo,!1,jo),c===null))return;const u=e.ray.origin.distanceTo(jo);u<e.near||u>e.far||t.push({distance:u,point:jo.clone(),uv:Vn.getInterpolation(jo,oc,Jo,ac,gg,jh,_g,new ue),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function lc(r,e,t,n,i,s){eo.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(Zo.x=s*eo.x-i*eo.y,Zo.y=i*eo.x+s*eo.y):Zo.copy(eo),r.copy(e),r.x+=Zo.x,r.y+=Zo.y,r.applyMatrix4(X_)}const cc=new D,vg=new D;class q_ extends Rt{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){cc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(cc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){cc.setFromMatrixPosition(e.matrixWorld),vg.setFromMatrixPosition(this.matrixWorld);const n=cc.distanceTo(vg)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let l=t[i].distance;if(t[i].object.visible&&(l-=l*t[i].hysteresis),n>=l)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const l=n[i];t.object.levels.push({object:l.object.uuid,distance:l.distance,hysteresis:l.hysteresis})}return t}}const yg=new D,xg=new It,Sg=new It,Y1=new D,Mg=new ut,to=new D,Zh=new yi,Eg=new ut,Jh=new _s;class j_ extends yn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ut,this.bindMatrixInverse=new ut,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new zi),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)to.fromBufferAttribute(t,n),this.applyBoneTransform(n,to),this.boundingBox.expandByPoint(to)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new yi),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)to.fromBufferAttribute(t,n),this.applyBoneTransform(n,to),this.boundingSphere.expandByPoint(to)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Zh.copy(this.boundingSphere),Zh.applyMatrix4(i),e.ray.intersectsSphere(Zh)!==!1&&(Eg.copy(i).invert(),Jh.copy(e.ray).applyMatrix4(Eg),!(this.boundingBox!==null&&Jh.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Jh)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new It,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;xg.fromBufferAttribute(i.attributes.skinIndex,e),Sg.fromBufferAttribute(i.attributes.skinWeight,e),yg.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const l=Sg.getComponent(s);if(l!==0){const c=xg.getComponent(s);Mg.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(Y1.copy(yg).applyMatrix4(Mg),l)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class Nd extends Rt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class po extends nn{constructor(e=null,t=1,n=1,i,s,l,c,u,h=$t,d=$t,p,m){super(null,l,c,u,h,d,i,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const wg=new ut,q1=new ut;class iu{constructor(e=[],t=[]){this.uuid=ei(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new ut)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new ut;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,l=e.length;s<l;s++){const c=e[s]?e[s].matrixWorld:q1;wg.multiplyMatrices(c,t[s]),wg.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new iu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=b_(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new po(t,e,e,Gn,Li);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let l=t[s];l===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),l=new Nd),this.bones.push(l),this.boneInverses.push(new ut().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const l=t[i];e.bones.push(l.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class vo extends Ot{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const no=new ut,Tg=new ut,uc=[],Ag=new zi,j1=new ut,Ko=new yn,Qo=new yi;class Z_ extends yn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new vo(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,j1)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new zi),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,no),Ag.copy(e.boundingBox).applyMatrix4(no),this.boundingBox.union(Ag)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new yi),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,no),Qo.copy(e.boundingSphere).applyMatrix4(no),this.boundingSphere.union(Qo)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Ko.geometry=this.geometry,Ko.material=this.material,Ko.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Qo.copy(this.boundingSphere),Qo.applyMatrix4(n),e.ray.intersectsSphere(Qo)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,no),Tg.multiplyMatrices(n,no),Ko.matrixWorld=Tg,Ko.raycast(e,uc);for(let l=0,c=uc.length;l<c;l++){const u=uc[l];u.instanceId=s,u.object=this,t.push(u)}uc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new vo(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class On extends Pn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Fe(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const bg=new D,Rg=new D,Cg=new ut,Kh=new _s,hc=new yi;class Lr extends Rt{constructor(e=new vt,t=new On){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)bg.fromBufferAttribute(t,i-1),Rg.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=bg.distanceTo(Rg);e.setAttribute("lineDistance",new We(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),hc.copy(n.boundingSphere),hc.applyMatrix4(i),hc.radius+=s,e.ray.intersectsSphere(hc)===!1)return;Cg.copy(i).invert(),Kh.copy(e.ray).applyMatrix4(Cg);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new D,d=new D,p=new D,m=new D,_=this.isLineSegments?2:1,y=n.index,x=n.attributes.position;if(y!==null){const v=Math.max(0,l.start),w=Math.min(y.count,l.start+l.count);for(let M=v,A=w-1;M<A;M+=_){const R=y.getX(M),C=y.getX(M+1);if(h.fromBufferAttribute(x,R),d.fromBufferAttribute(x,C),Kh.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const z=e.ray.origin.distanceTo(m);z<e.near||z>e.far||t.push({distance:z,point:p.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,l.start),w=Math.min(x.count,l.start+l.count);for(let M=v,A=w-1;M<A;M+=_){if(h.fromBufferAttribute(x,M),d.fromBufferAttribute(x,M+1),Kh.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const C=e.ray.origin.distanceTo(m);C<e.near||C>e.far||t.push({distance:C,point:p.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const Pg=new D,Lg=new D;class Bi extends Lr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)Pg.fromBufferAttribute(t,i),Lg.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Pg.distanceTo(Lg);e.setAttribute("lineDistance",new We(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class J_ extends Lr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Ud extends Pn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Fe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const Ig=new ut,td=new _s,fc=new yi,dc=new D;class K_ extends Rt{constructor(e=new vt,t=new Ud){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,l=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),fc.copy(n.boundingSphere),fc.applyMatrix4(i),fc.radius+=s,e.ray.intersectsSphere(fc)===!1)return;Ig.copy(i).invert(),td.copy(e.ray).applyMatrix4(Ig);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,l.start),_=Math.min(h.count,l.start+l.count);for(let y=m,E=_;y<E;y++){const x=h.getX(y);dc.fromBufferAttribute(p,x),Dg(dc,x,u,i,e,t,this)}}else{const m=Math.max(0,l.start),_=Math.min(p.count,l.start+l.count);for(let y=m,E=_;y<E;y++)dc.fromBufferAttribute(p,y),Dg(dc,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,l=i.length;s<l;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function Dg(r,e,t,n,i,s,l){const c=td.distanceSqToPoint(r);if(c<t){const u=new D;td.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:l})}}class Z1 extends nn{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isVideoTexture=!0,this.minFilter=l!==void 0?l:en,this.magFilter=s!==void 0?s:en,this.generateMipmaps=!1;const d=this;function p(){d.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class J1 extends nn{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=$t,this.minFilter=$t,this.generateMipmaps=!1,this.needsUpdate=!0}}class ru extends nn{constructor(e,t,n,i,s,l,c,u,h,d,p,m){super(null,l,c,u,h,d,i,s,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class K1 extends ru{constructor(e,t,n,i,s,l){super(e,t,n,s,l),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Rn}}class Q1 extends ru{constructor(e,t,n){super(void 0,e[0].width,e[0].height,t,n,rr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=e}}class $1 extends nn{constructor(e,t,n,i,s,l,c,u,h){super(e,t,n,i,s,l,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class xi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let l=1;l<=e;l++)n=this.getPoint(l/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let l;t?l=t:l=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-l,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===l)return i/(s-1);const d=n[i],m=n[i+1]-d,_=(l-d)/m;return(i+_)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const l=this.getPoint(i),c=this.getPoint(s),u=t||(l.isVector2?new ue:new D);return u.copy(c).sub(l).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new D,i=[],s=[],l=[],c=new D,u=new ut;for(let _=0;_<=e;_++){const y=_/e;i[_]=this.getTangentAt(y,new D)}s[0]=new D,l[0]=new D;let h=Number.MAX_VALUE;const d=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);d<=h&&(h=d,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),l[0].crossVectors(i[0],s[0]);for(let _=1;_<=e;_++){if(s[_]=s[_-1].clone(),l[_]=l[_-1].clone(),c.crossVectors(i[_-1],i[_]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(Jt(i[_-1].dot(i[_]),-1,1));s[_].applyMatrix4(u.makeRotationAxis(c,y))}l[_].crossVectors(i[_],s[_])}if(t===!0){let _=Math.acos(Jt(s[0].dot(s[e]),-1,1));_/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(_=-_);for(let y=1;y<=e;y++)s[y].applyMatrix4(u.makeRotationAxis(i[y],_*y)),l[y].crossVectors(i[y],s[y])}return{tangents:i,normals:s,binormals:l}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class su extends xi{constructor(e=0,t=0,n=1,i=1,s=0,l=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=l,this.aClockwise=c,this.aRotation=u}getPoint(e,t){const n=t||new ue,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const l=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(l?s=0:s=i),this.aClockwise===!0&&!l&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const d=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,_=h-this.aY;u=m*d-_*p+this.aX,h=m*p+_*d+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Q_ extends su{constructor(e,t,n,i,s,l){super(e,t,n,n,i,s,l),this.isArcCurve=!0,this.type="ArcCurve"}}function Od(){let r=0,e=0,t=0,n=0;function i(s,l,c,u){r=s,e=c,t=-3*s+3*l-2*c-u,n=2*s-2*l+c+u}return{initCatmullRom:function(s,l,c,u,h){i(l,c,h*(c-s),h*(u-l))},initNonuniformCatmullRom:function(s,l,c,u,h,d,p){let m=(l-s)/h-(c-s)/(h+d)+(c-l)/d,_=(c-l)/d-(u-l)/(d+p)+(u-c)/p;m*=d,_*=d,i(l,c,m,_)},calc:function(s){const l=s*s,c=l*s;return r+e*s+t*l+n*c}}}const pc=new D,Qh=new Od,$h=new Od,ef=new Od;class $_ extends xi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new D){const n=t,i=this.points,s=i.length,l=(s-(this.closed?0:1))*e;let c=Math.floor(l),u=l-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,d;this.closed||c>0?h=i[(c-1)%s]:(pc.subVectors(i[0],i[1]).add(i[0]),h=pc);const p=i[c%s],m=i[(c+1)%s];if(this.closed||c+2<s?d=i[(c+2)%s]:(pc.subVectors(i[s-1],i[s-2]).add(i[s-1]),d=pc),this.curveType==="centripetal"||this.curveType==="chordal"){const _=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),_),E=Math.pow(p.distanceToSquared(m),_),x=Math.pow(m.distanceToSquared(d),_);E<1e-4&&(E=1),y<1e-4&&(y=E),x<1e-4&&(x=E),Qh.initNonuniformCatmullRom(h.x,p.x,m.x,d.x,y,E,x),$h.initNonuniformCatmullRom(h.y,p.y,m.y,d.y,y,E,x),ef.initNonuniformCatmullRom(h.z,p.z,m.z,d.z,y,E,x)}else this.curveType==="catmullrom"&&(Qh.initCatmullRom(h.x,p.x,m.x,d.x,this.tension),$h.initCatmullRom(h.y,p.y,m.y,d.y,this.tension),ef.initCatmullRom(h.z,p.z,m.z,d.z,this.tension));return n.set(Qh.calc(u),$h.calc(u),ef.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new D().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function Ng(r,e,t,n,i){const s=(n-e)*.5,l=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+l)*u+(-3*t+3*n-2*s-l)*c+s*r+t}function eT(r,e){const t=1-r;return t*t*e}function tT(r,e){return 2*(1-r)*r*e}function nT(r,e){return r*r*e}function la(r,e,t,n){return eT(r,e)+tT(r,t)+nT(r,n)}function iT(r,e){const t=1-r;return t*t*t*e}function rT(r,e){const t=1-r;return 3*t*t*r*e}function sT(r,e){return 3*(1-r)*r*r*e}function oT(r,e){return r*r*r*e}function ca(r,e,t,n,i){return iT(r,e)+rT(r,t)+sT(r,n)+oT(r,i)}class Fd extends xi{constructor(e=new ue,t=new ue,n=new ue,i=new ue){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ue){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(ca(e,i.x,s.x,l.x,c.x),ca(e,i.y,s.y,l.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class ev extends xi{constructor(e=new D,t=new D,n=new D,i=new D){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,l=this.v2,c=this.v3;return n.set(ca(e,i.x,s.x,l.x,c.x),ca(e,i.y,s.y,l.y,c.y),ca(e,i.z,s.z,l.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class zd extends xi{constructor(e=new ue,t=new ue){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ue){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ue){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class tv extends xi{constructor(e=new D,t=new D){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new D){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new D){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Bd extends xi{constructor(e=new ue,t=new ue,n=new ue){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ue){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(la(e,i.x,s.x,l.x),la(e,i.y,s.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class kd extends xi{constructor(e=new D,t=new D,n=new D){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,l=this.v2;return n.set(la(e,i.x,s.x,l.x),la(e,i.y,s.y,l.y),la(e,i.z,s.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Hd extends xi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ue){const n=t,i=this.points,s=(i.length-1)*e,l=Math.floor(s),c=s-l,u=i[l===0?l:l-1],h=i[l],d=i[l>i.length-2?i.length-1:l+1],p=i[l>i.length-3?i.length-1:l+2];return n.set(Ng(c,u.x,h.x,d.x,p.x),Ng(c,u.y,h.y,d.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ue().fromArray(i))}return this}}var Gc=Object.freeze({__proto__:null,ArcCurve:Q_,CatmullRomCurve3:$_,CubicBezierCurve:Fd,CubicBezierCurve3:ev,EllipseCurve:su,LineCurve:zd,LineCurve3:tv,QuadraticBezierCurve:Bd,QuadraticBezierCurve3:kd,SplineCurve:Hd});class nv extends xi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);if(!e.equals(t)){const n=e.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Gc[n](t,e))}return this}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const l=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-l/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const l=s[i],c=l.isEllipseCurve?e*2:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?e*l.points.length:e,u=l.getPoints(c);for(let h=0;h<u.length;h++){const d=u[h];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Gc[i.type]().fromJSON(i))}return this}}class Ea extends nv{constructor(e){super(),this.type="Path",this.currentPoint=new ue,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new zd(this.currentPoint.clone(),new ue(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new Bd(this.currentPoint.clone(),new ue(e,t),new ue(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,l){const c=new Fd(this.currentPoint.clone(),new ue(e,t),new ue(n,i),new ue(s,l));return this.curves.push(c),this.currentPoint.set(s,l),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Hd(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,l),this}absarc(e,t,n,i,s,l){return this.absellipse(e,t,n,n,i,s,l),this}ellipse(e,t,n,i,s,l,c,u){const h=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+h,t+d,n,i,s,l,c,u),this}absellipse(e,t,n,i,s,l,c,u){const h=new su(e,t,n,i,s,l,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const d=h.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Fa extends vt{constructor(e=[new ue(0,-.5),new ue(.5,0),new ue(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=Jt(i,0,Math.PI*2);const s=[],l=[],c=[],u=[],h=[],d=1/t,p=new D,m=new ue,_=new D,y=new D,E=new D;let x=0,v=0;for(let w=0;w<=e.length-1;w++)switch(w){case 0:x=e[w+1].x-e[w].x,v=e[w+1].y-e[w].y,_.x=v*1,_.y=-x,_.z=v*0,E.copy(_),_.normalize(),u.push(_.x,_.y,_.z);break;case e.length-1:u.push(E.x,E.y,E.z);break;default:x=e[w+1].x-e[w].x,v=e[w+1].y-e[w].y,_.x=v*1,_.y=-x,_.z=v*0,y.copy(_),_.x+=E.x,_.y+=E.y,_.z+=E.z,_.normalize(),u.push(_.x,_.y,_.z),E.copy(y)}for(let w=0;w<=t;w++){const M=n+w*d*i,A=Math.sin(M),R=Math.cos(M);for(let C=0;C<=e.length-1;C++){p.x=e[C].x*A,p.y=e[C].y,p.z=e[C].x*R,l.push(p.x,p.y,p.z),m.x=w/t,m.y=C/(e.length-1),c.push(m.x,m.y);const I=u[3*C+0]*A,z=u[3*C+1],b=u[3*C+0]*R;h.push(I,z,b)}}for(let w=0;w<t;w++)for(let M=0;M<e.length-1;M++){const A=M+w*e.length,R=A,C=A+e.length,I=A+e.length+1,z=A+1;s.push(R,C,z),s.push(I,z,C)}this.setIndex(s),this.setAttribute("position",new We(l,3)),this.setAttribute("uv",new We(c,2)),this.setAttribute("normal",new We(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Fa(e.points,e.segments,e.phiStart,e.phiLength)}}class ou extends Fa{constructor(e=1,t=1,n=4,i=8){const s=new Ea;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,length:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new ou(e.radius,e.length,e.capSegments,e.radialSegments)}}class au extends vt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],l=[],c=[],u=[],h=new D,d=new ue;l.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const _=n+p/t*i;h.x=e*Math.cos(_),h.y=e*Math.sin(_),l.push(h.x,h.y,h.z),c.push(0,0,1),d.x=(l[m]/e+1)/2,d.y=(l[m+1]/e+1)/2,u.push(d.x,d.y)}for(let p=1;p<=t;p++)s.push(p,p+1,0);this.setIndex(s),this.setAttribute("position",new We(l,3)),this.setAttribute("normal",new We(c,3)),this.setAttribute("uv",new We(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new au(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Mo extends vt{constructor(e=1,t=1,n=1,i=32,s=1,l=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:l,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const d=[],p=[],m=[],_=[];let y=0;const E=[],x=n/2;let v=0;w(),l===!1&&(e>0&&M(!0),t>0&&M(!1)),this.setIndex(d),this.setAttribute("position",new We(p,3)),this.setAttribute("normal",new We(m,3)),this.setAttribute("uv",new We(_,2));function w(){const A=new D,R=new D;let C=0;const I=(t-e)/n;for(let z=0;z<=s;z++){const b=[],L=z/s,H=L*(t-e)+e;for(let te=0;te<=i;te++){const se=te/i,G=se*u+c,$=Math.sin(G),oe=Math.cos(G);R.x=H*$,R.y=-L*n+x,R.z=H*oe,p.push(R.x,R.y,R.z),A.set($,I,oe).normalize(),m.push(A.x,A.y,A.z),_.push(se,1-L),b.push(y++)}E.push(b)}for(let z=0;z<i;z++)for(let b=0;b<s;b++){const L=E[b][z],H=E[b+1][z],te=E[b+1][z+1],se=E[b][z+1];d.push(L,H,se),d.push(H,te,se),C+=6}h.addGroup(v,C,0),v+=C}function M(A){const R=y,C=new ue,I=new D;let z=0;const b=A===!0?e:t,L=A===!0?1:-1;for(let te=1;te<=i;te++)p.push(0,x*L,0),m.push(0,L,0),_.push(.5,.5),y++;const H=y;for(let te=0;te<=i;te++){const G=te/i*u+c,$=Math.cos(G),oe=Math.sin(G);I.x=b*oe,I.y=x*L,I.z=b*$,p.push(I.x,I.y,I.z),m.push(0,L,0),C.x=$*.5+.5,C.y=oe*.5*L+.5,_.push(C.x,C.y),y++}for(let te=0;te<i;te++){const se=R+te,G=H+te;A===!0?d.push(G,G+1,se):d.push(G+1,G,se),z+=3}h.addGroup(v,z,A===!0?1:2),v+=z}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Mo(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class lu extends Mo{constructor(e=1,t=1,n=32,i=1,s=!1,l=0,c=Math.PI*2){super(0,e,t,n,i,s,l,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:l,thetaLength:c}}static fromJSON(e){return new lu(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Nr extends vt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],l=[];c(i),h(n),d(),this.setAttribute("position",new We(s,3)),this.setAttribute("normal",new We(s.slice(),3)),this.setAttribute("uv",new We(l,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(w){const M=new D,A=new D,R=new D;for(let C=0;C<t.length;C+=3)_(t[C+0],M),_(t[C+1],A),_(t[C+2],R),u(M,A,R,w)}function u(w,M,A,R){const C=R+1,I=[];for(let z=0;z<=C;z++){I[z]=[];const b=w.clone().lerp(A,z/C),L=M.clone().lerp(A,z/C),H=C-z;for(let te=0;te<=H;te++)te===0&&z===C?I[z][te]=b:I[z][te]=b.clone().lerp(L,te/H)}for(let z=0;z<C;z++)for(let b=0;b<2*(C-z)-1;b++){const L=Math.floor(b/2);b%2===0?(m(I[z][L+1]),m(I[z+1][L]),m(I[z][L])):(m(I[z][L+1]),m(I[z+1][L+1]),m(I[z+1][L]))}}function h(w){const M=new D;for(let A=0;A<s.length;A+=3)M.x=s[A+0],M.y=s[A+1],M.z=s[A+2],M.normalize().multiplyScalar(w),s[A+0]=M.x,s[A+1]=M.y,s[A+2]=M.z}function d(){const w=new D;for(let M=0;M<s.length;M+=3){w.x=s[M+0],w.y=s[M+1],w.z=s[M+2];const A=x(w)/2/Math.PI+.5,R=v(w)/Math.PI+.5;l.push(A,1-R)}y(),p()}function p(){for(let w=0;w<l.length;w+=6){const M=l[w+0],A=l[w+2],R=l[w+4],C=Math.max(M,A,R),I=Math.min(M,A,R);C>.9&&I<.1&&(M<.2&&(l[w+0]+=1),A<.2&&(l[w+2]+=1),R<.2&&(l[w+4]+=1))}}function m(w){s.push(w.x,w.y,w.z)}function _(w,M){const A=w*3;M.x=e[A+0],M.y=e[A+1],M.z=e[A+2]}function y(){const w=new D,M=new D,A=new D,R=new D,C=new ue,I=new ue,z=new ue;for(let b=0,L=0;b<s.length;b+=9,L+=6){w.set(s[b+0],s[b+1],s[b+2]),M.set(s[b+3],s[b+4],s[b+5]),A.set(s[b+6],s[b+7],s[b+8]),C.set(l[L+0],l[L+1]),I.set(l[L+2],l[L+3]),z.set(l[L+4],l[L+5]),R.copy(w).add(M).add(A).divideScalar(3);const H=x(R);E(C,L+0,w,H),E(I,L+2,M,H),E(z,L+4,A,H)}}function E(w,M,A,R){R<0&&w.x===1&&(l[M]=w.x-1),A.x===0&&A.z===0&&(l[M]=R/2/Math.PI+.5)}function x(w){return Math.atan2(w.z,-w.x)}function v(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Nr(e.vertices,e.indices,e.radius,e.details)}}class cu extends Nr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],l=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,l,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new cu(e.radius,e.detail)}}const mc=new D,gc=new D,tf=new D,_c=new Vn;class iv extends vt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(us*t),l=e.getIndex(),c=e.getAttribute("position"),u=l?l.count:c.count,h=[0,0,0],d=["a","b","c"],p=new Array(3),m={},_=[];for(let y=0;y<u;y+=3){l?(h[0]=l.getX(y),h[1]=l.getX(y+1),h[2]=l.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:E,b:x,c:v}=_c;if(E.fromBufferAttribute(c,h[0]),x.fromBufferAttribute(c,h[1]),v.fromBufferAttribute(c,h[2]),_c.getNormal(tf),p[0]=`${Math.round(E.x*i)},${Math.round(E.y*i)},${Math.round(E.z*i)}`,p[1]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[2]=`${Math.round(v.x*i)},${Math.round(v.y*i)},${Math.round(v.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let w=0;w<3;w++){const M=(w+1)%3,A=p[w],R=p[M],C=_c[d[w]],I=_c[d[M]],z=`${A}_${R}`,b=`${R}_${A}`;b in m&&m[b]?(tf.dot(m[b].normal)<=s&&(_.push(C.x,C.y,C.z),_.push(I.x,I.y,I.z)),m[b]=null):z in m||(m[z]={index0:h[w],index1:h[M],normal:tf.clone()})}}for(const y in m)if(m[y]){const{index0:E,index1:x}=m[y];mc.fromBufferAttribute(c,E),gc.fromBufferAttribute(c,x),_.push(mc.x,mc.y,mc.z),_.push(gc.x,gc.y,gc.z)}this.setAttribute("position",new We(_,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class fs extends Ea{constructor(e){super(e),this.uuid=ei(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Ea().fromJSON(i))}return this}}const aT={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=rv(r,0,i,t,!0);const l=[];if(!s||s.next===s.prev)return l;let c,u,h,d,p,m,_;if(n&&(s=fT(r,e,s,t)),r.length>80*t){c=h=r[0],u=d=r[1];for(let y=t;y<i;y+=t)p=r[y],m=r[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>d&&(d=m);_=Math.max(h-c,d-u),_=_!==0?32767/_:0}return wa(s,l,t,c,u,_,0),l}};function rv(r,e,t,n,i){let s,l;if(i===ET(r,e,t,n)>0)for(s=e;s<t;s+=n)l=Ug(s,r[s],r[s+1],l);else for(s=t-n;s>=e;s-=n)l=Ug(s,r[s],r[s+1],l);return l&&uu(l,l.next)&&(Aa(l),l=l.next),l}function ms(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(uu(t,t.next)||Wt(t.prev,t,t.next)===0)){if(Aa(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function wa(r,e,t,n,i,s,l){if(!r)return;!l&&s&&_T(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?cT(r,n,i,s):lT(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),Aa(r),r=h.next,c=h.next;continue}if(r=h,r===c){l?l===1?(r=uT(ms(r),e,t),wa(r,e,t,n,i,s,2)):l===2&&hT(r,e,t,n,i,s):wa(ms(r),e,t,n,i,s,1);break}}}function lT(r){const e=r.prev,t=r,n=r.next;if(Wt(e,t,n)>=0)return!1;const i=e.x,s=t.x,l=n.x,c=e.y,u=t.y,h=n.y,d=i<s?i<l?i:l:s<l?s:l,p=c<u?c<h?c:h:u<h?u:h,m=i>s?i>l?i:l:s>l?s:l,_=c>u?c>h?c:h:u>h?u:h;let y=n.next;for(;y!==e;){if(y.x>=d&&y.x<=m&&y.y>=p&&y.y<=_&&uo(i,c,s,u,l,h,y.x,y.y)&&Wt(y.prev,y,y.next)>=0)return!1;y=y.next}return!0}function cT(r,e,t,n){const i=r.prev,s=r,l=r.next;if(Wt(i,s,l)>=0)return!1;const c=i.x,u=s.x,h=l.x,d=i.y,p=s.y,m=l.y,_=c<u?c<h?c:h:u<h?u:h,y=d<p?d<m?d:m:p<m?p:m,E=c>u?c>h?c:h:u>h?u:h,x=d>p?d>m?d:m:p>m?p:m,v=nd(_,y,e,t,n),w=nd(E,x,e,t,n);let M=r.prevZ,A=r.nextZ;for(;M&&M.z>=v&&A&&A.z<=w;){if(M.x>=_&&M.x<=E&&M.y>=y&&M.y<=x&&M!==i&&M!==l&&uo(c,d,u,p,h,m,M.x,M.y)&&Wt(M.prev,M,M.next)>=0||(M=M.prevZ,A.x>=_&&A.x<=E&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&uo(c,d,u,p,h,m,A.x,A.y)&&Wt(A.prev,A,A.next)>=0))return!1;A=A.nextZ}for(;M&&M.z>=v;){if(M.x>=_&&M.x<=E&&M.y>=y&&M.y<=x&&M!==i&&M!==l&&uo(c,d,u,p,h,m,M.x,M.y)&&Wt(M.prev,M,M.next)>=0)return!1;M=M.prevZ}for(;A&&A.z<=w;){if(A.x>=_&&A.x<=E&&A.y>=y&&A.y<=x&&A!==i&&A!==l&&uo(c,d,u,p,h,m,A.x,A.y)&&Wt(A.prev,A,A.next)>=0)return!1;A=A.nextZ}return!0}function uT(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!uu(i,s)&&sv(i,n,n.next,s)&&Ta(i,s)&&Ta(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),Aa(n),Aa(n.next),n=r=s),n=n.next}while(n!==r);return ms(n)}function hT(r,e,t,n,i,s){let l=r;do{let c=l.next.next;for(;c!==l.prev;){if(l.i!==c.i&&xT(l,c)){let u=ov(l,c);l=ms(l,l.next),u=ms(u,u.next),wa(l,e,t,n,i,s,0),wa(u,e,t,n,i,s,0);return}c=c.next}l=l.next}while(l!==r)}function fT(r,e,t,n){const i=[];let s,l,c,u,h;for(s=0,l=e.length;s<l;s++)c=e[s]*n,u=s<l-1?e[s+1]*n:r.length,h=rv(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(yT(h));for(i.sort(dT),s=0;s<i.length;s++)t=pT(i[s],t);return t}function dT(r,e){return r.x-e.x}function pT(r,e){const t=mT(r,e);if(!t)return e;const n=ov(t,r);return ms(n,n.next),ms(t,t.next)}function mT(r,e){let t=e,n=-1/0,i;const s=r.x,l=r.y;do{if(l<=t.y&&l>=t.next.y&&t.next.y!==t.y){const m=t.x+(l-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=s&&m>n&&(n=m,i=t.x<t.next.x?t:t.next,m===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let d=1/0,p;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&uo(l<h?s:n,l,u,h,l<h?n:s,l,t.x,t.y)&&(p=Math.abs(l-t.y)/(s-t.x),Ta(t,r)&&(p<d||p===d&&(t.x>i.x||t.x===i.x&&gT(i,t)))&&(i=t,d=p)),t=t.next;while(t!==c);return i}function gT(r,e){return Wt(r.prev,r,e.prev)<0&&Wt(e.next,r,r.next)<0}function _T(r,e,t,n){let i=r;do i.z===0&&(i.z=nd(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,vT(i)}function vT(r){let e,t,n,i,s,l,c,u,h=1;do{for(t=r,r=null,s=null,l=0;t;){for(l++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(l>1);return r}function nd(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function yT(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function uo(r,e,t,n,i,s,l,c){return(i-l)*(e-c)>=(r-l)*(s-c)&&(r-l)*(n-c)>=(t-l)*(e-c)&&(t-l)*(s-c)>=(i-l)*(n-c)}function xT(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!ST(r,e)&&(Ta(r,e)&&Ta(e,r)&&MT(r,e)&&(Wt(r.prev,r,e.prev)||Wt(r,e.prev,e))||uu(r,e)&&Wt(r.prev,r,r.next)>0&&Wt(e.prev,e,e.next)>0)}function Wt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function uu(r,e){return r.x===e.x&&r.y===e.y}function sv(r,e,t,n){const i=yc(Wt(r,e,t)),s=yc(Wt(r,e,n)),l=yc(Wt(t,n,r)),c=yc(Wt(t,n,e));return!!(i!==s&&l!==c||i===0&&vc(r,t,e)||s===0&&vc(r,n,e)||l===0&&vc(t,r,n)||c===0&&vc(t,e,n))}function vc(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function yc(r){return r>0?1:r<0?-1:0}function ST(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&sv(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function Ta(r,e){return Wt(r.prev,r,r.next)<0?Wt(r,e,r.next)>=0&&Wt(r,r.prev,e)>=0:Wt(r,e,r.prev)<0||Wt(r,r.next,e)<0}function MT(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function ov(r,e){const t=new id(r.i,r.x,r.y),n=new id(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function Ug(r,e,t,n){const i=new id(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Aa(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function id(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function ET(r,e,t,n){let i=0;for(let s=e,l=t-n;s<t;s+=n)i+=(r[l]-r[s])*(r[s+1]+r[l+1]),l=s;return i}class Ui{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Ui.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Og(e),Fg(n,e);let l=e.length;t.forEach(Og);for(let u=0;u<t.length;u++)i.push(l),l+=t[u].length,Fg(n,t[u]);const c=aT.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function Og(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Fg(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class hu extends vt{constructor(e=new fs([new ue(.5,.5),new ue(-.5,.5),new ue(-.5,-.5),new ue(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];l(h)}this.setAttribute("position",new We(i,3)),this.setAttribute("uv",new We(s,2)),this.computeVertexNormals();function l(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,_=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:_-.1,E=t.bevelOffset!==void 0?t.bevelOffset:0,x=t.bevelSegments!==void 0?t.bevelSegments:3;const v=t.extrudePath,w=t.UVGenerator!==void 0?t.UVGenerator:wT;let M,A=!1,R,C,I,z;v&&(M=v.getSpacedPoints(d),A=!0,m=!1,R=v.computeFrenetFrames(d,!1),C=new D,I=new D,z=new D),m||(x=0,_=0,y=0,E=0);const b=c.extractPoints(h);let L=b.shape;const H=b.holes;if(!Ui.isClockWise(L)){L=L.reverse();for(let B=0,_e=H.length;B<_e;B++){const he=H[B];Ui.isClockWise(he)&&(H[B]=he.reverse())}}const se=Ui.triangulateShape(L,H),G=L;for(let B=0,_e=H.length;B<_e;B++){const he=H[B];L=L.concat(he)}function $(B,_e,he){return _e||console.error("THREE.ExtrudeGeometry: vec does not exist"),B.clone().addScaledVector(_e,he)}const oe=L.length,ie=se.length;function Y(B,_e,he){let Ee,de,Xe;const Ne=B.x-_e.x,Oe=B.y-_e.y,et=he.x-B.x,mt=he.y-B.y,Dt=Ne*Ne+Oe*Oe,O=Ne*mt-Oe*et;if(Math.abs(O)>Number.EPSILON){const P=Math.sqrt(Dt),ee=Math.sqrt(et*et+mt*mt),Se=_e.x-Oe/P,ge=_e.y+Ne/P,xe=he.x-mt/ee,Ge=he.y+et/ee,Ae=((xe-Se)*mt-(Ge-ge)*et)/(Ne*mt-Oe*et);Ee=Se+Ne*Ae-B.x,de=ge+Oe*Ae-B.y;const Pe=Ee*Ee+de*de;if(Pe<=2)return new ue(Ee,de);Xe=Math.sqrt(Pe/2)}else{let P=!1;Ne>Number.EPSILON?et>Number.EPSILON&&(P=!0):Ne<-Number.EPSILON?et<-Number.EPSILON&&(P=!0):Math.sign(Oe)===Math.sign(mt)&&(P=!0),P?(Ee=-Oe,de=Ne,Xe=Math.sqrt(Dt)):(Ee=Ne,de=Oe,Xe=Math.sqrt(Dt/2))}return new ue(Ee/Xe,de/Xe)}const q=[];for(let B=0,_e=G.length,he=_e-1,Ee=B+1;B<_e;B++,he++,Ee++)he===_e&&(he=0),Ee===_e&&(Ee=0),q[B]=Y(G[B],G[he],G[Ee]);const j=[];let k,Q=q.concat();for(let B=0,_e=H.length;B<_e;B++){const he=H[B];k=[];for(let Ee=0,de=he.length,Xe=de-1,Ne=Ee+1;Ee<de;Ee++,Xe++,Ne++)Xe===de&&(Xe=0),Ne===de&&(Ne=0),k[Ee]=Y(he[Ee],he[Xe],he[Ne]);j.push(k),Q=Q.concat(k)}for(let B=0;B<x;B++){const _e=B/x,he=_*Math.cos(_e*Math.PI/2),Ee=y*Math.sin(_e*Math.PI/2)+E;for(let de=0,Xe=G.length;de<Xe;de++){const Ne=$(G[de],q[de],Ee);He(Ne.x,Ne.y,-he)}for(let de=0,Xe=H.length;de<Xe;de++){const Ne=H[de];k=j[de];for(let Oe=0,et=Ne.length;Oe<et;Oe++){const mt=$(Ne[Oe],k[Oe],Ee);He(mt.x,mt.y,-he)}}}const fe=y+E;for(let B=0;B<oe;B++){const _e=m?$(L[B],Q[B],fe):L[B];A?(I.copy(R.normals[0]).multiplyScalar(_e.x),C.copy(R.binormals[0]).multiplyScalar(_e.y),z.copy(M[0]).add(I).add(C),He(z.x,z.y,z.z)):He(_e.x,_e.y,0)}for(let B=1;B<=d;B++)for(let _e=0;_e<oe;_e++){const he=m?$(L[_e],Q[_e],fe):L[_e];A?(I.copy(R.normals[B]).multiplyScalar(he.x),C.copy(R.binormals[B]).multiplyScalar(he.y),z.copy(M[B]).add(I).add(C),He(z.x,z.y,z.z)):He(he.x,he.y,p/d*B)}for(let B=x-1;B>=0;B--){const _e=B/x,he=_*Math.cos(_e*Math.PI/2),Ee=y*Math.sin(_e*Math.PI/2)+E;for(let de=0,Xe=G.length;de<Xe;de++){const Ne=$(G[de],q[de],Ee);He(Ne.x,Ne.y,p+he)}for(let de=0,Xe=H.length;de<Xe;de++){const Ne=H[de];k=j[de];for(let Oe=0,et=Ne.length;Oe<et;Oe++){const mt=$(Ne[Oe],k[Oe],Ee);A?He(mt.x,mt.y+M[d-1].y,M[d-1].x+he):He(mt.x,mt.y,p+he)}}}Te(),be();function Te(){const B=i.length/3;if(m){let _e=0,he=oe*_e;for(let Ee=0;Ee<ie;Ee++){const de=se[Ee];Ze(de[2]+he,de[1]+he,de[0]+he)}_e=d+x*2,he=oe*_e;for(let Ee=0;Ee<ie;Ee++){const de=se[Ee];Ze(de[0]+he,de[1]+he,de[2]+he)}}else{for(let _e=0;_e<ie;_e++){const he=se[_e];Ze(he[2],he[1],he[0])}for(let _e=0;_e<ie;_e++){const he=se[_e];Ze(he[0]+oe*d,he[1]+oe*d,he[2]+oe*d)}}n.addGroup(B,i.length/3-B,0)}function be(){const B=i.length/3;let _e=0;ke(G,_e),_e+=G.length;for(let he=0,Ee=H.length;he<Ee;he++){const de=H[he];ke(de,_e),_e+=de.length}n.addGroup(B,i.length/3-B,1)}function ke(B,_e){let he=B.length;for(;--he>=0;){const Ee=he;let de=he-1;de<0&&(de=B.length-1);for(let Xe=0,Ne=d+x*2;Xe<Ne;Xe++){const Oe=oe*Xe,et=oe*(Xe+1),mt=_e+Ee+Oe,Dt=_e+de+Oe,O=_e+de+et,P=_e+Ee+et;yt(mt,Dt,O,P)}}}function He(B,_e,he){u.push(B),u.push(_e),u.push(he)}function Ze(B,_e,he){Ct(B),Ct(_e),Ct(he);const Ee=i.length/3,de=w.generateTopUV(n,i,Ee-3,Ee-2,Ee-1);Ve(de[0]),Ve(de[1]),Ve(de[2])}function yt(B,_e,he,Ee){Ct(B),Ct(_e),Ct(Ee),Ct(_e),Ct(he),Ct(Ee);const de=i.length/3,Xe=w.generateSideWallUV(n,i,de-6,de-3,de-2,de-1);Ve(Xe[0]),Ve(Xe[1]),Ve(Xe[3]),Ve(Xe[1]),Ve(Xe[2]),Ve(Xe[3])}function Ct(B){i.push(u[B*3+0]),i.push(u[B*3+1]),i.push(u[B*3+2])}function Ve(B){s.push(B.x),s.push(B.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return TT(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,l=e.shapes.length;s<l;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Gc[i.type]().fromJSON(i)),new hu(n,e.options)}}const wT={generateTopUV:function(r,e,t,n,i){const s=e[t*3],l=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],d=e[i*3+1];return[new ue(s,l),new ue(c,u),new ue(h,d)]},generateSideWallUV:function(r,e,t,n,i,s){const l=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],d=e[n*3+1],p=e[n*3+2],m=e[i*3],_=e[i*3+1],y=e[i*3+2],E=e[s*3],x=e[s*3+1],v=e[s*3+2];return Math.abs(c-d)<Math.abs(l-h)?[new ue(l,1-u),new ue(h,1-p),new ue(m,1-y),new ue(E,1-v)]:[new ue(c,1-u),new ue(d,1-p),new ue(_,1-y),new ue(x,1-v)]}};function TT(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class fu extends Nr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new fu(e.radius,e.detail)}}class za extends Nr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new za(e.radius,e.detail)}}class du extends vt{constructor(e=.5,t=1,n=32,i=1,s=0,l=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:l},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],d=[];let p=e;const m=(t-e)/i,_=new D,y=new ue;for(let E=0;E<=i;E++){for(let x=0;x<=n;x++){const v=s+x/n*l;_.x=p*Math.cos(v),_.y=p*Math.sin(v),u.push(_.x,_.y,_.z),h.push(0,0,1),y.x=(_.x/t+1)/2,y.y=(_.y/t+1)/2,d.push(y.x,y.y)}p+=m}for(let E=0;E<i;E++){const x=E*(n+1);for(let v=0;v<n;v++){const w=v+x,M=w,A=w+n+1,R=w+n+2,C=w+1;c.push(M,A,C),c.push(A,R,C)}}this.setIndex(c),this.setAttribute("position",new We(u,3)),this.setAttribute("normal",new We(h,3)),this.setAttribute("uv",new We(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new du(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class pu extends vt{constructor(e=new fs([new ue(0,.5),new ue(-.5,-.5),new ue(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],l=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let d=0;d<e.length;d++)h(e[d]),this.addGroup(c,u,d),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new We(i,3)),this.setAttribute("normal",new We(s,3)),this.setAttribute("uv",new We(l,2));function h(d){const p=i.length/3,m=d.extractPoints(t);let _=m.shape;const y=m.holes;Ui.isClockWise(_)===!1&&(_=_.reverse());for(let x=0,v=y.length;x<v;x++){const w=y[x];Ui.isClockWise(w)===!0&&(y[x]=w.reverse())}const E=Ui.triangulateShape(_,y);for(let x=0,v=y.length;x<v;x++){const w=y[x];_=_.concat(w)}for(let x=0,v=_.length;x<v;x++){const w=_[x];i.push(w.x,w.y,0),s.push(0,0,1),l.push(w.x,w.y)}for(let x=0,v=E.length;x<v;x++){const w=E[x],M=w[0]+p,A=w[1]+p,R=w[2]+p;n.push(M,A,R),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return AT(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const l=t[e.shapes[i]];n.push(l)}return new pu(n,e.curveSegments)}}function AT(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class Ba extends vt{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,l=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:l,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(l+c,Math.PI);let h=0;const d=[],p=new D,m=new D,_=[],y=[],E=[],x=[];for(let v=0;v<=n;v++){const w=[],M=v/n;let A=0;v===0&&l===0?A=.5/t:v===n&&u===Math.PI&&(A=-.5/t);for(let R=0;R<=t;R++){const C=R/t;p.x=-e*Math.cos(i+C*s)*Math.sin(l+M*c),p.y=e*Math.cos(l+M*c),p.z=e*Math.sin(i+C*s)*Math.sin(l+M*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),E.push(m.x,m.y,m.z),x.push(C+A,1-M),w.push(h++)}d.push(w)}for(let v=0;v<n;v++)for(let w=0;w<t;w++){const M=d[v][w+1],A=d[v][w],R=d[v+1][w],C=d[v+1][w+1];(v!==0||l>0)&&_.push(M,A,C),(v!==n-1||u<Math.PI)&&_.push(A,R,C)}this.setIndex(_),this.setAttribute("position",new We(y,3)),this.setAttribute("normal",new We(E,3)),this.setAttribute("uv",new We(x,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ba(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class mu extends Nr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new mu(e.radius,e.detail)}}class gu extends vt{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const l=[],c=[],u=[],h=[],d=new D,p=new D,m=new D;for(let _=0;_<=n;_++)for(let y=0;y<=i;y++){const E=y/i*s,x=_/n*Math.PI*2;p.x=(e+t*Math.cos(x))*Math.cos(E),p.y=(e+t*Math.cos(x))*Math.sin(E),p.z=t*Math.sin(x),c.push(p.x,p.y,p.z),d.x=e*Math.cos(E),d.y=e*Math.sin(E),m.subVectors(p,d).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(_/n)}for(let _=1;_<=n;_++)for(let y=1;y<=i;y++){const E=(i+1)*_+y-1,x=(i+1)*(_-1)+y-1,v=(i+1)*(_-1)+y,w=(i+1)*_+y;l.push(E,x,w),l.push(x,v,w)}this.setIndex(l),this.setAttribute("position",new We(c,3)),this.setAttribute("normal",new We(u,3)),this.setAttribute("uv",new We(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new gu(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class _u extends vt{constructor(e=1,t=.4,n=64,i=8,s=2,l=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:l},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],d=[],p=new D,m=new D,_=new D,y=new D,E=new D,x=new D,v=new D;for(let M=0;M<=n;++M){const A=M/n*s*Math.PI*2;w(A,s,l,e,_),w(A+.01,s,l,e,y),x.subVectors(y,_),v.addVectors(y,_),E.crossVectors(x,v),v.crossVectors(E,x),E.normalize(),v.normalize();for(let R=0;R<=i;++R){const C=R/i*Math.PI*2,I=-t*Math.cos(C),z=t*Math.sin(C);p.x=_.x+(I*v.x+z*E.x),p.y=_.y+(I*v.y+z*E.y),p.z=_.z+(I*v.z+z*E.z),u.push(p.x,p.y,p.z),m.subVectors(p,_).normalize(),h.push(m.x,m.y,m.z),d.push(M/n),d.push(R/i)}}for(let M=1;M<=n;M++)for(let A=1;A<=i;A++){const R=(i+1)*(M-1)+(A-1),C=(i+1)*M+(A-1),I=(i+1)*M+A,z=(i+1)*(M-1)+A;c.push(R,C,z),c.push(C,I,z)}this.setIndex(c),this.setAttribute("position",new We(u,3)),this.setAttribute("normal",new We(h,3)),this.setAttribute("uv",new We(d,2));function w(M,A,R,C,I){const z=Math.cos(M),b=Math.sin(M),L=R/A*M,H=Math.cos(L);I.x=C*(2+H)*.5*z,I.y=C*(2+H)*b*.5,I.z=C*Math.sin(L)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new _u(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class vu extends vt{constructor(e=new kd(new D(-1,-1,0),new D(-1,1,0),new D(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const l=e.computeFrenetFrames(t,s);this.tangents=l.tangents,this.normals=l.normals,this.binormals=l.binormals;const c=new D,u=new D,h=new ue;let d=new D;const p=[],m=[],_=[],y=[];E(),this.setIndex(y),this.setAttribute("position",new We(p,3)),this.setAttribute("normal",new We(m,3)),this.setAttribute("uv",new We(_,2));function E(){for(let M=0;M<t;M++)x(M);x(s===!1?t:0),w(),v()}function x(M){d=e.getPointAt(M/t,d);const A=l.normals[M],R=l.binormals[M];for(let C=0;C<=i;C++){const I=C/i*Math.PI*2,z=Math.sin(I),b=-Math.cos(I);u.x=b*A.x+z*R.x,u.y=b*A.y+z*R.y,u.z=b*A.z+z*R.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=d.x+n*u.x,c.y=d.y+n*u.y,c.z=d.z+n*u.z,p.push(c.x,c.y,c.z)}}function v(){for(let M=1;M<=t;M++)for(let A=1;A<=i;A++){const R=(i+1)*(M-1)+(A-1),C=(i+1)*M+(A-1),I=(i+1)*M+A,z=(i+1)*(M-1)+A;y.push(R,C,z),y.push(C,I,z)}}function w(){for(let M=0;M<=t;M++)for(let A=0;A<=i;A++)h.x=M/t,h.y=A/i,_.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new vu(new Gc[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class av extends vt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new D,s=new D;if(e.index!==null){const l=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,d=u.length;h<d;++h){const p=u[h],m=p.start,_=p.count;for(let y=m,E=m+_;y<E;y+=3)for(let x=0;x<3;x++){const v=c.getX(y+x),w=c.getX(y+(x+1)%3);i.fromBufferAttribute(l,v),s.fromBufferAttribute(l,w),zg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const l=e.attributes.position;for(let c=0,u=l.count/3;c<u;c++)for(let h=0;h<3;h++){const d=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(l,d),s.fromBufferAttribute(l,p),zg(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new We(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function zg(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var Bg=Object.freeze({__proto__:null,BoxGeometry:vs,CapsuleGeometry:ou,CircleGeometry:au,ConeGeometry:lu,CylinderGeometry:Mo,DodecahedronGeometry:cu,EdgesGeometry:iv,ExtrudeGeometry:hu,IcosahedronGeometry:fu,LatheGeometry:Fa,OctahedronGeometry:za,PlaneGeometry:Oa,PolyhedronGeometry:Nr,RingGeometry:du,ShapeGeometry:pu,SphereGeometry:Ba,TetrahedronGeometry:mu,TorusGeometry:gu,TorusKnotGeometry:_u,TubeGeometry:vu,WireframeGeometry:av});class lv extends Pn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Fe(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class cv extends Fi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Vd extends Pn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Fe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ir,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class uv extends Vd{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ue(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Jt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Fe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Fe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Fe(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class hv extends Pn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Fe(16777215),this.specular=new Fe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ir,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=La,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class fv extends Pn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Fe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ir,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class dv extends Pn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ir,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class pv extends Pn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Fe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Fe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ir,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=La,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class mv extends Pn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Fe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ir,this.normalScale=new ue(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class gv extends On{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function ls(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function _v(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function vv(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function rd(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,l=0;l!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[l++]=r[c+u]}return i}function Gd(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let l=s[n];if(l!==void 0)if(Array.isArray(l))do l=s[n],l!==void 0&&(e.push(s.time),t.push.apply(t,l)),s=r[i++];while(s!==void 0);else if(l.toArray!==void 0)do l=s[n],l!==void 0&&(e.push(s.time),l.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do l=s[n],l!==void 0&&(e.push(s.time),t.push(l)),s=r[i++];while(s!==void 0)}function bT(r,e,t,n,i=30){const s=r.clone();s.name=e;const l=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],d=h.getValueSize(),p=[],m=[];for(let _=0;_<h.times.length;++_){const y=h.times[_]*i;if(!(y<t||y>=n)){p.push(h.times[_]);for(let E=0;E<d;++E)m.push(h.values[_*d+E])}}p.length!==0&&(h.times=ls(p,h.times.constructor),h.values=ls(m,h.values.constructor),l.push(h))}s.tracks=l;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function RT(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let l=0;l<i;++l){const c=t.tracks[l],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(v){return v.name===c.name&&v.ValueTypeName===u});if(h===void 0)continue;let d=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let m=0;const _=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=_/3);const y=c.times.length-1;let E;if(s<=c.times[0]){const v=d,w=p-d;E=c.values.slice(v,w)}else if(s>=c.times[y]){const v=y*p+d,w=v+p-d;E=c.values.slice(v,w)}else{const v=c.createInterpolant(),w=d,M=p-d;v.evaluate(s),E=v.resultBuffer.slice(w,M)}u==="quaternion"&&new Cn().fromArray(E).normalize().conjugate().toArray(E);const x=h.times.length;for(let v=0;v<x;++v){const w=v*_+m;if(u==="quaternion")Cn.multiplyQuaternionsFlat(h.values,w,E,0,h.values,w);else{const M=_-m*2;for(let A=0;A<M;++A)h.values[w+A]-=E[A]}}}return r.blendMode=Sd,r}const CT={convertArray:ls,isTypedArray:_v,getKeyframeOrder:vv,sortedArray:rd,flattenJSON:Gd,subclip:bT,makeClipAdditive:RT};class ka{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let l;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}l=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}l=n,n=0;break n}break e}for(;n<l;){const c=n+l>>>1;e<t[c]?l=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let l=0;l!==i;++l)t[l]=n[s+l];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class yv extends ka{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ss,endingEnd:ss}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,l=e+1,c=i[s],u=i[l];if(c===void 0)switch(this.getSettings_().endingStart){case os:s=e,c=2*t-n;break;case ga:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case os:l=e,u=2*n-t;break;case ga:l=1,u=n+i[1]-i[0];break;default:l=e-1,u=t}const h=(n-t)*.5,d=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*d,this._offsetNext=l*d}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,_=this._weightNext,y=(n-t)/(i-t),E=y*y,x=E*y,v=-m*x+2*m*E-m*y,w=(1+m)*x+(-1.5-2*m)*E+(-.5+m)*y+1,M=(-1-_)*x+(1.5+_)*E+.5*y,A=_*x-_*E;for(let R=0;R!==c;++R)s[R]=v*l[d+R]+w*l[h+R]+M*l[u+R]+A*l[p+R];return s}}class Wd extends ka{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=(n-t)/(i-t),p=1-d;for(let m=0;m!==c;++m)s[m]=l[h+m]*p+l[u+m]*d;return s}}class xv extends ka{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Si{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ls(t,this.TimeBufferType),this.values=ls(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ls(e.times,Array),values:ls(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new xv(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Wd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new yv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case pa:t=this.InterpolantFactoryMethodDiscrete;break;case ma:t=this.InterpolantFactoryMethodLinear;break;case Uc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return pa;case this.InterpolantFactoryMethodLinear:return ma;case this.InterpolantFactoryMethodSmooth:return Uc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,l=i-1;for(;s!==i&&n[s]<e;)++s;for(;l!==-1&&n[l]>t;)--l;if(++l,s!==0||l!==i){s>=l&&(l=Math.max(l,1),s=l-1);const c=this.getValueSize();this.times=n.slice(s,l),this.values=this.values.slice(s*c,l*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let l=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(l!==null&&l>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,l),e=!1;break}l=u}if(i!==void 0&&_v(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Uc,s=e.length-1;let l=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],d=e[c+1];if(h!==d&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,_=p+n;for(let y=0;y!==n;++y){const E=t[p+y];if(E!==t[m+y]||E!==t[_+y]){u=!0;break}}}if(u){if(c!==l){e[l]=e[c];const p=c*n,m=l*n;for(let _=0;_!==n;++_)t[m+_]=t[p+_]}++l}}if(s>0){e[l]=e[s];for(let c=s*n,u=l*n,h=0;h!==n;++h)t[u+h]=t[c+h];++l}return l!==e.length?(this.times=e.slice(0,l),this.values=t.slice(0,l*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Si.prototype.TimeBufferType=Float32Array;Si.prototype.ValueBufferType=Float32Array;Si.prototype.DefaultInterpolation=ma;class ys extends Si{}ys.prototype.ValueTypeName="bool";ys.prototype.ValueBufferType=Array;ys.prototype.DefaultInterpolation=pa;ys.prototype.InterpolantFactoryMethodLinear=void 0;ys.prototype.InterpolantFactoryMethodSmooth=void 0;class Xd extends Si{}Xd.prototype.ValueTypeName="color";class ba extends Si{}ba.prototype.ValueTypeName="number";class Sv extends ka{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,l=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let d=h+c;h!==d;h+=4)Cn.slerpFlat(s,0,l,h-c,l,h,u);return s}}class Eo extends Si{InterpolantFactoryMethodLinear(e){return new Sv(this.times,this.values,this.getValueSize(),e)}}Eo.prototype.ValueTypeName="quaternion";Eo.prototype.DefaultInterpolation=ma;Eo.prototype.InterpolantFactoryMethodSmooth=void 0;class xs extends Si{}xs.prototype.ValueTypeName="string";xs.prototype.ValueBufferType=Array;xs.prototype.DefaultInterpolation=pa;xs.prototype.InterpolantFactoryMethodLinear=void 0;xs.prototype.InterpolantFactoryMethodSmooth=void 0;class Ra extends Si{}Ra.prototype.ValueTypeName="vector";class Ca{constructor(e,t=-1,n,i=Zc){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=ei(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let l=0,c=n.length;l!==c;++l)t.push(LT(n[l]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,l=n.length;s!==l;++s)t.push(Si.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,l=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const d=vv(u);u=rd(u,1,d),h=rd(h,1,d),!i&&u[0]===0&&(u.push(s),h.push(h[0])),l.push(new ba(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,l)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],d=h.name.match(s);if(d&&d.length>1){const p=d[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const l=[];for(const c in i)l.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return l}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,_,y,E){if(_.length!==0){const x=[],v=[];Gd(_,x,v,y),x.length!==0&&E.push(new p(m,x,v))}},i=[],s=e.name||"default",l=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const _={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let E=0;E<m[y].morphTargets.length;E++)_[m[y].morphTargets[E]]=-1;for(const E in _){const x=[],v=[];for(let w=0;w!==m[y].morphTargets.length;++w){const M=m[y];x.push(M.time),v.push(M.morphTarget===E?1:0)}i.push(new ba(".morphTargetInfluence["+E+"]",x,v))}u=_.length*l}else{const _=".bones["+t[p].name+"]";n(Ra,_+".position",m,"pos",i),n(Eo,_+".quaternion",m,"rot",i),n(Ra,_+".scale",m,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function PT(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ba;case"vector":case"vector2":case"vector3":case"vector4":return Ra;case"color":return Xd;case"quaternion":return Eo;case"bool":case"boolean":return ys;case"string":return xs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function LT(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=PT(r.type);if(r.times===void 0){const t=[],n=[];Gd(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const gs={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Yd{constructor(e,t,n){const i=this;let s=!1,l=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){c++,s===!1&&i.onStart!==void 0&&i.onStart(d,l,c),s=!0},this.itemEnd=function(d){l++,i.onProgress!==void 0&&i.onProgress(d,l,c),l===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return u?u(d):d},this.setURLModifier=function(d){return u=d,this},this.addHandler=function(d,p){return h.push(d,p),this},this.removeHandler=function(d){const p=h.indexOf(d);return p!==-1&&h.splice(p,2),this},this.getHandler=function(d){for(let p=0,m=h.length;p<m;p+=2){const _=h[p],y=h[p+1];if(_.global&&(_.lastIndex=0),_.test(d))return y}return null}}}const Mv=new Yd;class Xn{constructor(e){this.manager=e!==void 0?e:Mv,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Xn.DEFAULT_MATERIAL_NAME="__DEFAULT";const Qi={};class IT extends Error{constructor(e,t){super(e),this.response=t}}class sr extends Xn{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=gs.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Qi[e]!==void 0){Qi[e].push({onLoad:t,onProgress:n,onError:i});return}Qi[e]=[],Qi[e].push({onLoad:t,onProgress:n,onError:i});const l=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(l).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const d=Qi[e],p=h.body.getReader(),m=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),_=m?parseInt(m):0,y=_!==0;let E=0;const x=new ReadableStream({start(v){w();function w(){p.read().then(({done:M,value:A})=>{if(M)v.close();else{E+=A.byteLength;const R=new ProgressEvent("progress",{lengthComputable:y,loaded:E,total:_});for(let C=0,I=d.length;C<I;C++){const z=d[C];z.onProgress&&z.onProgress(R)}v.enqueue(A),w()}})}}});return new Response(x)}else throw new IT(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(d=>new DOMParser().parseFromString(d,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,_=new TextDecoder(m);return h.arrayBuffer().then(y=>_.decode(y))}}}).then(h=>{gs.add(e,h);const d=Qi[e];delete Qi[e];for(let p=0,m=d.length;p<m;p++){const _=d[p];_.onLoad&&_.onLoad(h)}}).catch(h=>{const d=Qi[e];if(d===void 0)throw this.manager.itemError(e),h;delete Qi[e];for(let p=0,m=d.length;p<m;p++){const _=d[p];_.onError&&_.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class DT extends Xn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new sr(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Ca.parse(e[n]);t.push(i)}return t}}class NT extends Xn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=[],c=new ru,u=new sr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function d(p){u.load(e[p],function(m){const _=s.parse(m,!0);l[p]={width:_.width,height:_.height,format:_.format,mipmaps:_.mipmaps},h+=1,h===6&&(_.mipmapCount===1&&(c.minFilter=en),c.image=l,c.format=_.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)d(p);else u.load(e,function(p){const m=s.parse(p,!0);if(m.isCubemap){const _=m.mipmaps.length/m.mipmapCount;for(let y=0;y<_;y++){l[y]={mipmaps:[]};for(let E=0;E<m.mipmapCount;E++)l[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+E]),l[y].format=m.format,l[y].width=m.width,l[y].height=m.height}c.image=l}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=en),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class Pa extends Xn{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=gs.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c=Ma("img");function u(){d(),gs.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(p){d(),i&&i(p),s.manager.itemError(e),s.manager.itemEnd(e)}function d(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class UT extends Xn{constructor(e){super(e)}load(e,t,n,i){const s=new Ua;s.colorSpace=hn;const l=new Pa(this.manager);l.setCrossOrigin(this.crossOrigin),l.setPath(this.path);let c=0;function u(h){l.load(e[h],function(d){s.images[h]=d,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class OT extends Xn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new po,c=new sr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){let h;try{h=s.parse(u)}catch(d){if(i!==void 0)i(d);else{console.error(d);return}}h.image!==void 0?l.image=h.image:h.data!==void 0&&(l.image.width=h.width,l.image.height=h.height,l.image.data=h.data),l.wrapS=h.wrapS!==void 0?h.wrapS:Rn,l.wrapT=h.wrapT!==void 0?h.wrapT:Rn,l.magFilter=h.magFilter!==void 0?h.magFilter:en,l.minFilter=h.minFilter!==void 0?h.minFilter:en,l.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0?l.colorSpace=h.colorSpace:h.encoding!==void 0&&(l.encoding=h.encoding),h.flipY!==void 0&&(l.flipY=h.flipY),h.format!==void 0&&(l.format=h.format),h.type!==void 0&&(l.type=h.type),h.mipmaps!==void 0&&(l.mipmaps=h.mipmaps,l.minFilter=Pr),h.mipmapCount===1&&(l.minFilter=en),h.generateMipmaps!==void 0&&(l.generateMipmaps=h.generateMipmaps),l.needsUpdate=!0,t&&t(l,h)},n,i),l}}class FT extends Xn{constructor(e){super(e)}load(e,t,n,i){const s=new nn,l=new Pa(this.manager);return l.setCrossOrigin(this.crossOrigin),l.setPath(this.path),l.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class Ur extends Rt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Fe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class Ev extends Ur{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Rt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Fe(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const nf=new ut,kg=new D,Hg=new D;class qd{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ue(512,512),this.map=null,this.mapPass=null,this.matrix=new ut,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Qc,this._frameExtents=new ue(1,1),this._viewportCount=1,this._viewports=[new It(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;kg.setFromMatrixPosition(e.matrixWorld),t.position.copy(kg),Hg.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Hg),t.updateMatrixWorld(),nf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(nf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(nf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class zT extends qd{constructor(){super(new tn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=go*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class wv extends Ur{constructor(e,t,n=0,i=Math.PI/3,s=0,l=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Rt.DEFAULT_UP),this.updateMatrix(),this.target=new Rt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=l,this.map=null,this.shadow=new zT}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const Vg=new ut,$o=new D,rf=new D;class BT extends qd{constructor(){super(new tn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ue(4,2),this._viewportCount=6,this._viewports=[new It(2,1,1,1),new It(0,1,1,1),new It(3,1,1,1),new It(1,1,1,1),new It(3,0,1,1),new It(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),$o.setFromMatrixPosition(e.matrixWorld),n.position.copy($o),rf.copy(n.position),rf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(rf),n.updateMatrixWorld(),i.makeTranslation(-$o.x,-$o.y,-$o.z),Vg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Vg)}}class Tv extends Ur{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new BT}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class kT extends qd{constructor(){super(new Rr(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Av extends Ur{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Rt.DEFAULT_UP),this.updateMatrix(),this.target=new Rt,this.shadow=new kT}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class bv extends Ur{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Rv extends Ur{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Cv{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new D)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.282095),t.addScaledVector(l[1],.488603*i),t.addScaledVector(l[2],.488603*s),t.addScaledVector(l[3],.488603*n),t.addScaledVector(l[4],1.092548*(n*i)),t.addScaledVector(l[5],1.092548*(i*s)),t.addScaledVector(l[6],.315392*(3*s*s-1)),t.addScaledVector(l[7],1.092548*(n*s)),t.addScaledVector(l[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,l=this.coefficients;return t.copy(l[0]).multiplyScalar(.886227),t.addScaledVector(l[1],2*.511664*i),t.addScaledVector(l[2],2*.511664*s),t.addScaledVector(l[3],2*.511664*n),t.addScaledVector(l[4],2*.429043*n*i),t.addScaledVector(l[5],2*.429043*i*s),t.addScaledVector(l[6],.743125*s*s-.247708),t.addScaledVector(l[7],2*.429043*n*s),t.addScaledVector(l[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class Pv extends Ur{constructor(e=new Cv,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class yu extends Xn{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,l=new sr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=yu.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Fe().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.alphaHash!==void 0&&(i.alphaHash=e.alphaHash),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==void 0&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const l=e.uniforms[s];switch(i.uniforms[s]={},l.type){case"t":i.uniforms[s].value=n(l.value);break;case"c":i.uniforms[s].value=new Fe().setHex(l.value);break;case"v2":i.uniforms[s].value=new ue().fromArray(l.value);break;case"v3":i.uniforms[s].value=new D().fromArray(l.value);break;case"v4":i.uniforms[s].value=new It().fromArray(l.value);break;case"m3":i.uniforms[s].value=new pt().fromArray(l.value);break;case"m4":i.uniforms[s].value=new ut().fromArray(l.value);break;default:i.uniforms[s].value=l.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new ue().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ue().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:lv,SpriteMaterial:Dd,RawShaderMaterial:cv,ShaderMaterial:Fi,PointsMaterial:Ud,MeshPhysicalMaterial:uv,MeshStandardMaterial:Vd,MeshPhongMaterial:hv,MeshToonMaterial:fv,MeshNormalMaterial:dv,MeshLambertMaterial:pv,MeshDepthMaterial:Cd,MeshDistanceMaterial:Pd,MeshBasicMaterial:Dr,MeshMatcapMaterial:mv,LineDashedMaterial:gv,LineBasicMaterial:On,Material:Pn};return new t[e]}}class sd{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Lv extends vt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Iv extends Xn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new sr(s.manager);l.setPath(s.path),l.setRequestHeader(s.requestHeader),l.setWithCredentials(s.withCredentials),l.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(_,y){if(t[y]!==void 0)return t[y];const x=_.interleavedBuffers[y],v=s(_,x.buffer),w=ao(x.type,v),M=new nu(w,x.stride);return M.uuid=x.uuid,t[y]=M,M}function s(_,y){if(n[y]!==void 0)return n[y];const x=_.arrayBuffers[y],v=new Uint32Array(x).buffer;return n[y]=v,v}const l=e.isInstancedBufferGeometry?new Lv:new vt,c=e.data.index;if(c!==void 0){const _=ao(c.type,c.array);l.setIndex(new Ot(_,1))}const u=e.data.attributes;for(const _ in u){const y=u[_];let E;if(y.isInterleavedBufferAttribute){const x=i(e.data,y.data);E=new ps(x,y.itemSize,y.offset,y.normalized)}else{const x=ao(y.type,y.array),v=y.isInstancedBufferAttribute?vo:Ot;E=new v(x,y.itemSize,y.normalized)}y.name!==void 0&&(E.name=y.name),y.usage!==void 0&&E.setUsage(y.usage),y.updateRange!==void 0&&(E.updateRange.offset=y.updateRange.offset,E.updateRange.count=y.updateRange.count),l.setAttribute(_,E)}const h=e.data.morphAttributes;if(h)for(const _ in h){const y=h[_],E=[];for(let x=0,v=y.length;x<v;x++){const w=y[x];let M;if(w.isInterleavedBufferAttribute){const A=i(e.data,w.data);M=new ps(A,w.itemSize,w.offset,w.normalized)}else{const A=ao(w.type,w.array);M=new Ot(A,w.itemSize,w.normalized)}w.name!==void 0&&(M.name=w.name),E.push(M)}l.morphAttributes[_]=E}e.data.morphTargetsRelative&&(l.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let _=0,y=p.length;_!==y;++_){const E=p[_];l.addGroup(E.start,E.count,E.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const _=new D;m.center!==void 0&&_.fromArray(m.center),l.boundingSphere=new yi(_,m.radius)}return e.name&&(l.name=e.name),e.userData&&(l.userData=e.userData),l}}class HT extends Xn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=this.path===""?sd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||l;const c=new sr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const d=h.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?sd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new sr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const l=await s.loadAsync(e,t),c=JSON.parse(l),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),l=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,l),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),d=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,d),t!==void 0){let p=!1;for(const m in l)if(l[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),l=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,l),u=this.parseObject(e.object,i,c,l,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new fs().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=new iu().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Iv;for(let s=0,l=e.length;s<l;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in Bg?c=Bg[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new yu;s.setTextures(t);for(let l=0,c=e.length;l<c;l++){const u=e[l];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=Ca.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function l(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return l(d)}else return u.data?{data:ao(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new Yd(t);s=new Pa(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,d=e.length;h<d;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const _=[];for(let y=0,E=m.length;y<E;y++){const x=m[y],v=c(x);v!==null&&(v instanceof HTMLImageElement?_.push(v):_.push(new po(v.data,v.width,v.height)))}i[p.uuid]=new as(_)}else{const _=c(p.url);i[p.uuid]=new as(_)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return l.data?{data:ao(l.type,l.data),width:l.width,height:l.height}:null}if(e!==void 0&&e.length>0){i=new Pa(this.manager),i.setCrossOrigin(this.crossOrigin);for(let l=0,c=e.length;l<c;l++){const u=e[l],h=u.url;if(Array.isArray(h)){const d=[];for(let p=0,m=h.length;p<m;p++){const _=h[p],y=await s(_);y!==null&&(y instanceof HTMLImageElement?d.push(y):d.push(new po(y.data,y.width,y.height)))}n[u.uuid]=new as(d)}else{const d=await s(u.url);n[u.uuid]=new as(d)}}}return n}parseTextures(e,t){function n(s,l){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),l[s])}const i={};if(e!==void 0)for(let s=0,l=e.length;s<l;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let d;Array.isArray(h)?(d=new Ua,h.length===6&&(d.needsUpdate=!0)):(h&&h.data?d=new po:d=new nn,h&&(d.needsUpdate=!0)),d.source=u,d.uuid=c.uuid,c.name!==void 0&&(d.name=c.name),c.mapping!==void 0&&(d.mapping=n(c.mapping,VT)),c.channel!==void 0&&(d.channel=c.channel),c.offset!==void 0&&d.offset.fromArray(c.offset),c.repeat!==void 0&&d.repeat.fromArray(c.repeat),c.center!==void 0&&d.center.fromArray(c.center),c.rotation!==void 0&&(d.rotation=c.rotation),c.wrap!==void 0&&(d.wrapS=n(c.wrap[0],Gg),d.wrapT=n(c.wrap[1],Gg)),c.format!==void 0&&(d.format=c.format),c.internalFormat!==void 0&&(d.internalFormat=c.internalFormat),c.type!==void 0&&(d.type=c.type),c.colorSpace!==void 0&&(d.colorSpace=c.colorSpace),c.encoding!==void 0&&(d.encoding=c.encoding),c.minFilter!==void 0&&(d.minFilter=n(c.minFilter,Wg)),c.magFilter!==void 0&&(d.magFilter=n(c.magFilter,Wg)),c.anisotropy!==void 0&&(d.anisotropy=c.anisotropy),c.flipY!==void 0&&(d.flipY=c.flipY),c.generateMipmaps!==void 0&&(d.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(d.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(d.compareFunction=c.compareFunction),c.userData!==void 0&&(d.userData=c.userData),i[c.uuid]=d}return i}parseObject(e,t,n,i,s){let l;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const _=[];for(let y=0,E=m.length;y<E;y++){const x=m[y];n[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),_.push(n[x])}return _}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let d,p;switch(e.type){case"Scene":l=new Id,e.background!==void 0&&(Number.isInteger(e.background)?l.background=new Fe(e.background):l.background=h(e.background)),e.environment!==void 0&&(l.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?l.fog=new tu(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(l.fog=new eu(e.fog.color,e.fog.density)),e.fog.name!==""&&(l.fog.name=e.fog.name)),e.backgroundBlurriness!==void 0&&(l.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(l.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":l=new tn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(l.focus=e.focus),e.zoom!==void 0&&(l.zoom=e.zoom),e.filmGauge!==void 0&&(l.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(l.filmOffset=e.filmOffset),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"OrthographicCamera":l=new Rr(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(l.zoom=e.zoom),e.view!==void 0&&(l.view=Object.assign({},e.view));break;case"AmbientLight":l=new bv(e.color,e.intensity);break;case"DirectionalLight":l=new Av(e.color,e.intensity);break;case"PointLight":l=new Tv(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":l=new Rv(e.color,e.intensity,e.width,e.height);break;case"SpotLight":l=new wv(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":l=new Ev(e.color,e.groundColor,e.intensity);break;case"LightProbe":l=new Pv().fromJSON(e);break;case"SkinnedMesh":d=c(e.geometry),p=u(e.material),l=new j_(d,p),e.bindMode!==void 0&&(l.bindMode=e.bindMode),e.bindMatrix!==void 0&&l.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(l.skeleton=e.skeleton);break;case"Mesh":d=c(e.geometry),p=u(e.material),l=new yn(d,p);break;case"InstancedMesh":d=c(e.geometry),p=u(e.material);const m=e.count,_=e.instanceMatrix,y=e.instanceColor;l=new Z_(d,p,m),l.instanceMatrix=new vo(new Float32Array(_.array),16),y!==void 0&&(l.instanceColor=new vo(new Float32Array(y.array),y.itemSize));break;case"LOD":l=new q_;break;case"Line":l=new Lr(c(e.geometry),u(e.material));break;case"LineLoop":l=new J_(c(e.geometry),u(e.material));break;case"LineSegments":l=new Bi(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":l=new K_(c(e.geometry),u(e.material));break;case"Sprite":l=new Y_(u(e.material));break;case"Group":l=new co;break;case"Bone":l=new Nd;break;default:l=new Rt}if(l.uuid=e.uuid,e.name!==void 0&&(l.name=e.name),e.matrix!==void 0?(l.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(l.matrixAutoUpdate=e.matrixAutoUpdate),l.matrixAutoUpdate&&l.matrix.decompose(l.position,l.quaternion,l.scale)):(e.position!==void 0&&l.position.fromArray(e.position),e.rotation!==void 0&&l.rotation.fromArray(e.rotation),e.quaternion!==void 0&&l.quaternion.fromArray(e.quaternion),e.scale!==void 0&&l.scale.fromArray(e.scale)),e.up!==void 0&&l.up.fromArray(e.up),e.castShadow!==void 0&&(l.castShadow=e.castShadow),e.receiveShadow!==void 0&&(l.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(l.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(l.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(l.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&l.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(l.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(l.visible=e.visible),e.frustumCulled!==void 0&&(l.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(l.renderOrder=e.renderOrder),e.userData!==void 0&&(l.userData=e.userData),e.layers!==void 0&&(l.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let _=0;_<m.length;_++)l.add(this.parseObject(m[_],t,n,i,s))}if(e.animations!==void 0){const m=e.animations;for(let _=0;_<m.length;_++){const y=m[_];l.animations.push(s[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(l.autoUpdate=e.autoUpdate);const m=e.levels;for(let _=0;_<m.length;_++){const y=m[_],E=l.getObjectByProperty("uuid",y.object);E!==void 0&&l.addLevel(E,y.distance,y.hysteresis)}}return l}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const VT={UVMapping:qc,CubeReflectionMapping:rr,CubeRefractionMapping:Cr,EquirectangularReflectionMapping:ua,EquirectangularRefractionMapping:ha,CubeUVReflectionMapping:xo},Gg={RepeatWrapping:fa,ClampToEdgeWrapping:Rn,MirroredRepeatWrapping:da},Wg={NearestFilter:$t,NearestMipmapNearestFilter:kc,NearestMipmapLinearFilter:sa,LinearFilter:en,LinearMipmapNearestFilter:pd,LinearMipmapLinearFilter:Pr};class GT extends Xn{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,l=gs.get(e);if(l!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(l),s.manager.itemEnd(e)},0),l;const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,fetch(e,c).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(u){gs.add(e,u),t&&t(u),s.manager.itemEnd(e)}).catch(function(u){i&&i(u),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let xc;class jd{static getContext(){return xc===void 0&&(xc=new(window.AudioContext||window.webkitAudioContext)),xc}static setContext(e){xc=e}}class WT extends Xn{constructor(e){super(e)}load(e,t,n,i){const s=this,l=new sr(this.manager);l.setResponseType("arraybuffer"),l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){try{const h=u.slice(0);jd.getContext().decodeAudioData(h,function(p){t(p)},c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}const Xg=new ut,Yg=new ut,Zr=new ut;class XT{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new tn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new tn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Zr.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,l=t.near*Math.tan(us*t.fov*.5)/t.zoom;let c,u;Yg.elements[12]=-i,Xg.elements[12]=i,c=-l*t.aspect+s,u=l*t.aspect+s,Zr.elements[0]=2*t.near/(u-c),Zr.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(Zr),c=-l*t.aspect-s,u=l*t.aspect-s,Zr.elements[0]=2*t.near/(u-c),Zr.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(Zr)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Yg),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Xg)}}class Zd{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=qg(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=qg();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function qg(){return(typeof performance>"u"?Date:performance).now()}const Jr=new D,jg=new Cn,YT=new D,Kr=new D;class qT extends Rt{constructor(){super(),this.type="AudioListener",this.context=jd.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Zd}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Jr,jg,YT),Kr.set(0,0,-1).applyQuaternion(jg),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Jr.x,i),t.positionY.linearRampToValueAtTime(Jr.y,i),t.positionZ.linearRampToValueAtTime(Jr.z,i),t.forwardX.linearRampToValueAtTime(Kr.x,i),t.forwardY.linearRampToValueAtTime(Kr.y,i),t.forwardZ.linearRampToValueAtTime(Kr.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Jr.x,Jr.y,Jr.z),t.setOrientation(Kr.x,Kr.y,Kr.z,n.x,n.y,n.z)}}class Dv extends Rt{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Qr=new D,Zg=new Cn,jT=new D,$r=new D;class ZT extends Dv{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Qr,Zg,jT),$r.set(0,0,1).applyQuaternion(Zg);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Qr.x,n),t.positionY.linearRampToValueAtTime(Qr.y,n),t.positionZ.linearRampToValueAtTime(Qr.z,n),t.orientationX.linearRampToValueAtTime($r.x,n),t.orientationY.linearRampToValueAtTime($r.y,n),t.orientationZ.linearRampToValueAtTime($r.z,n)}else t.setPosition(Qr.x,Qr.y,Qr.z),t.setOrientation($r.x,$r.y,$r.z)}}class JT{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Nv{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,l;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let l=this.cumulativeWeight;if(l===0){for(let c=0;c!==i;++c)n[s+c]=n[c];l=t}else{l+=t;const c=t/l;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=l}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,l=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}l>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,l=i;s!==l;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let l=0;l!==s;++l)e[t+l]=e[n+l]}_slerp(e,t,n,i){Cn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const l=this._workIndex*s;Cn.multiplyQuaternionsFlat(e,l,e,t,e,n),Cn.slerpFlat(e,t,e,t,e,l,i)}_lerp(e,t,n,i,s){const l=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*l+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let l=0;l!==s;++l){const c=t+l;e[c]=e[c]+e[n+l]*i}}}const Jd="\\[\\]\\.:\\/",KT=new RegExp("["+Jd+"]","g"),Kd="[^"+Jd+"]",QT="[^"+Jd.replace("\\.","")+"]",$T=/((?:WC+[\/:])*)/.source.replace("WC",Kd),eA=/(WCOD+)?/.source.replace("WCOD",QT),tA=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Kd),nA=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Kd),iA=new RegExp("^"+$T+eA+tA+nA+"$"),rA=["material","materials","bones","map"];class sA{constructor(e,t,n){const i=n||wt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class wt{constructor(e,t,n){this.path=t,this.parsedPath=n||wt.parseTrackName(t),this.node=wt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new wt.Composite(e,t,n):new wt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(KT,"")}static parseTrackName(e){const t=iA.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);rA.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let l=0;l<s.length;l++){const c=s[l];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=wt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===h){h=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const l=e[i];if(l===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=s}else l.fromArray!==void 0&&l.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=l):Array.isArray(l)?(u=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}wt.Composite=sA;wt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};wt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};wt.prototype.GetterByBindingType=[wt.prototype._getValue_direct,wt.prototype._getValue_array,wt.prototype._getValue_arrayElement,wt.prototype._getValue_toArray];wt.prototype.SetterByBindingTypeAndVersioning=[[wt.prototype._setValue_direct,wt.prototype._setValue_direct_setNeedsUpdate,wt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[wt.prototype._setValue_array,wt.prototype._setValue_array_setNeedsUpdate,wt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[wt.prototype._setValue_arrayElement,wt.prototype._setValue_arrayElement_setNeedsUpdate,wt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[wt.prototype._setValue_fromArray,wt.prototype._setValue_fromArray_setNeedsUpdate,wt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class oA{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ei(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,l=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let d=0,p=arguments.length;d!==p;++d){const m=arguments[d],_=m.uuid;let y=t[_];if(y===void 0){y=u++,t[_]=y,e.push(m);for(let E=0,x=l;E!==x;++E)s[E].push(new wt(m,n[E],i[E]))}else if(y<h){c=e[y];const E=--h,x=e[E];t[x.uuid]=y,e[y]=x,t[_]=E,e[E]=m;for(let v=0,w=l;v!==w;++v){const M=s[v],A=M[E];let R=M[y];M[y]=A,R===void 0&&(R=new wt(m,n[v],i[v])),M[E]=R}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let l=0,c=arguments.length;l!==c;++l){const u=arguments[l],h=u.uuid,d=t[h];if(d!==void 0&&d>=s){const p=s++,m=e[p];t[m.uuid]=d,e[d]=m,t[h]=p,e[p]=u;for(let _=0,y=i;_!==y;++_){const E=n[_],x=E[p],v=E[d];E[d]=x,E[p]=v}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,l=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],d=h.uuid,p=t[d];if(p!==void 0)if(delete t[d],p<s){const m=--s,_=e[m],y=--l,E=e[y];t[_.uuid]=p,e[p]=_,t[E.uuid]=m,e[m]=E,e.pop();for(let x=0,v=i;x!==v;++x){const w=n[x],M=w[m],A=w[y];w[p]=M,w[m]=A,w.pop()}}else{const m=--l,_=e[m];m>0&&(t[_.uuid]=p),e[p]=_,e.pop();for(let y=0,E=i;y!==E;++y){const x=n[y];x[p]=x[m],x.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const l=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,d=this.nCachedObjects_,p=new Array(h);i=s.length,n[e]=i,l.push(e),c.push(t),s.push(p);for(let m=d,_=u.length;m!==_;++m){const y=u[m];p[m]=new wt(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,l=this._bindings,c=l.length-1,u=l[c],h=e[c];t[h]=n,l[n]=u,l.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class Uv{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,l=s.length,c=new Array(l),u={endingStart:ss,endingEnd:ss};for(let h=0;h!==l;++h){const d=s[h].createInterpolant(null);c[h]=d,d.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=d_,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,l=s/i,c=i/s;e.warp(1,l,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,l=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/l,h[1]=t/l,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const l=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Sd:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),h[d].accumulateAdditive(c);break;case Zc:default:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(l),h[d].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const l=n===p_;if(e===0)return s===-1?i:l&&(s&1)===1?t-i:i;if(n===f_){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,l)):this._setEndings(this.repetitions===0,!0,l)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,l)}else this._setEndings(!1,!1,l);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(l&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=os,i.endingEnd=os):(e?i.endingStart=this.zeroSlopeAtStart?os:ss:i.endingStart=ga,t?i.endingEnd=this.zeroSlopeAtEnd?os:ss:i.endingEnd=ga)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let l=this._weightInterpolant;l===null&&(l=i._lendControlInterpolant(),this._weightInterpolant=l);const c=l.parameterPositions,u=l.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const aA=new Float32Array(1);class lA extends or{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,l=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let d=h[u];d===void 0&&(d={},h[u]=d);for(let p=0;p!==s;++p){const m=i[p],_=m.name;let y=d[_];if(y!==void 0)++y.referenceCount,l[p]=y;else{if(y=l[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,_));continue}const E=t&&t._propertyBindings[p].binding.parsedPath;y=new Nv(wt.create(n,_,E),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,_),l[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let l=s[t];if(l===void 0)l={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=l;else{const c=l.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),l.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,l=this._actionsByClip,c=l[s],u=c.knownActions,h=u[u.length-1],d=e._byClipCacheIndex;h._byClipCacheIndex=d,u[d]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete l[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let l=i[t];l===void 0&&(l={},i[t]=l),l[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,l=this._bindingsByRootAndName,c=l[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete l[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Wd(new Float32Array(2),new Float32Array(2),1,aA),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let l=typeof e=="string"?Ca.findByName(i,e):e;const c=l!==null?l.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(l!==null?n=l.blendMode:n=Zc),u!==void 0){const p=u.actionByRoot[s];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],l===null&&(l=h._clip)}if(l===null)return null;const d=new Uv(this,l,t,n);return this._bindAction(d,h),this._addInactiveAction(d,c,s),d}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Ca.findByName(n,e):e,l=s?s.uuid:e,c=this._actionsByClip[l];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),l=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,l);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(l);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const l=s.knownActions;for(let c=0,u=l.length;c!==u;++c){const h=l[c];this._deactivateAction(h);const d=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=d,t[d]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const l in n){const c=n[l].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const l in s){const c=s[l];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Qd{constructor(e){this.value=e}clone(){return new Qd(this.value.clone===void 0?this.value:this.value.clone())}}let cA=0;class uA extends or{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:cA++}),this.name="",this.usage=xa,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class hA extends nu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class fA{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class Ov{constructor(e,t,n=0,i=1/0){this.ray=new _s(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new hs,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return od(e,this,n,t),n.sort(Jg),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)od(e[i],this,n,t);return n.sort(Jg),n}}function Jg(r,e){return r.distance-e.distance}function od(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,l=i.length;s<l;s++)od(i[s],e,t,!0)}}class ad{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Jt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class dA{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const Kg=new ue;class pA{constructor(e=new ue(1/0,1/0),t=new ue(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Kg.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Kg).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Qg=new D,Sc=new D;class mA{constructor(e=new D,t=new D){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Qg.subVectors(e,this.start),Sc.subVectors(this.end,this.start);const n=Sc.dot(Sc);let s=Sc.dot(Qg)/n;return t&&(s=Jt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const $g=new D;class gA extends Rt{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new vt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let l=0,c=1,u=32;l<u;l++,c++){const h=l/u*Math.PI*2,d=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new We(i,3));const s=new On({fog:!1,toneMapped:!1});this.cone=new Bi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),$g.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt($g),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Mr=new D,Mc=new ut,sf=new ut;class _A extends Bi{constructor(e){const t=Fv(e),n=new vt,i=[],s=[],l=new Fe(0,0,1),c=new Fe(0,1,0);for(let h=0;h<t.length;h++){const d=t[h];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(l.r,l.g,l.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new We(i,3)),n.setAttribute("color",new We(s,3));const u=new On({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");sf.copy(this.root.matrixWorld).invert();for(let s=0,l=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(Mc.multiplyMatrices(sf,c.matrixWorld),Mr.setFromMatrixPosition(Mc),i.setXYZ(l,Mr.x,Mr.y,Mr.z),Mc.multiplyMatrices(sf,c.parent.matrixWorld),Mr.setFromMatrixPosition(Mc),i.setXYZ(l+1,Mr.x,Mr.y,Mr.z),l+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Fv(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,Fv(r.children[t]));return e}class vA extends yn{constructor(e,t,n){const i=new Ba(t,4,2),s=new Dr({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const yA=new D,e0=new Fe,t0=new Fe;class xA extends Rt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new za(t);i.rotateY(Math.PI*.5),this.material=new Dr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),l=new Float32Array(s.count*3);i.setAttribute("color",new Ot(l,3)),this.add(new yn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");e0.copy(this.light.color),t0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?e0:t0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(yA.setFromMatrixPosition(this.light.matrixWorld).negate())}}class SA extends Bi{constructor(e=10,t=10,n=4473924,i=8947848){n=new Fe(n),i=new Fe(i);const s=t/2,l=e/t,c=e/2,u=[],h=[];for(let m=0,_=0,y=-c;m<=t;m++,y+=l){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const E=m===s?n:i;E.toArray(h,_),_+=3,E.toArray(h,_),_+=3,E.toArray(h,_),_+=3,E.toArray(h,_),_+=3}const d=new vt;d.setAttribute("position",new We(u,3)),d.setAttribute("color",new We(h,3));const p=new On({vertexColors:!0,toneMapped:!1});super(d,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class MA extends Bi{constructor(e=10,t=16,n=8,i=64,s=4473924,l=8947848){s=new Fe(s),l=new Fe(l);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),_=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(_,0,y);const E=p&1?s:l;u.push(E.r,E.g,E.b),u.push(E.r,E.g,E.b)}for(let p=0;p<n;p++){const m=p&1?s:l,_=e-e/n*p;for(let y=0;y<i;y++){let E=y/i*(Math.PI*2),x=Math.sin(E)*_,v=Math.cos(E)*_;c.push(x,0,v),u.push(m.r,m.g,m.b),E=(y+1)/i*(Math.PI*2),x=Math.sin(E)*_,v=Math.cos(E)*_,c.push(x,0,v),u.push(m.r,m.g,m.b)}}const h=new vt;h.setAttribute("position",new We(c,3)),h.setAttribute("color",new We(u,3));const d=new On({vertexColors:!0,toneMapped:!1});super(h,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const n0=new D,Ec=new D,i0=new D;class EA extends Rt{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new vt;i.setAttribute("position",new We([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new On({fog:!1,toneMapped:!1});this.lightPlane=new Lr(i,s),this.add(this.lightPlane),i=new vt,i.setAttribute("position",new We([0,0,0,0,0,1],3)),this.targetLine=new Lr(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),n0.setFromMatrixPosition(this.light.matrixWorld),Ec.setFromMatrixPosition(this.light.target.matrixWorld),i0.subVectors(Ec,n0),this.lightPlane.lookAt(Ec),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Ec),this.targetLine.scale.z=i0.length()}}const wc=new D,Zt=new Na;class wA extends Bi{constructor(e){const t=new vt,n=new On({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],l={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,E){u(y),u(E)}function u(y){i.push(0,0,0),s.push(0,0,0),l[y]===void 0&&(l[y]=[]),l[y].push(i.length/3-1)}t.setAttribute("position",new We(i,3)),t.setAttribute("color",new We(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=l,this.update();const h=new Fe(16755200),d=new Fe(16711680),p=new Fe(43775),m=new Fe(16777215),_=new Fe(3355443);this.setColors(h,d,p,m,_)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Zt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Qt("c",t,e,Zt,0,0,-1),Qt("t",t,e,Zt,0,0,1),Qt("n1",t,e,Zt,-1,-1,-1),Qt("n2",t,e,Zt,n,-1,-1),Qt("n3",t,e,Zt,-1,i,-1),Qt("n4",t,e,Zt,n,i,-1),Qt("f1",t,e,Zt,-1,-1,1),Qt("f2",t,e,Zt,n,-1,1),Qt("f3",t,e,Zt,-1,i,1),Qt("f4",t,e,Zt,n,i,1),Qt("u1",t,e,Zt,n*.7,i*1.1,-1),Qt("u2",t,e,Zt,-1*.7,i*1.1,-1),Qt("u3",t,e,Zt,0,i*2,-1),Qt("cf1",t,e,Zt,-1,0,1),Qt("cf2",t,e,Zt,n,0,1),Qt("cf3",t,e,Zt,0,-1,1),Qt("cf4",t,e,Zt,0,i,1),Qt("cn1",t,e,Zt,-1,0,-1),Qt("cn2",t,e,Zt,n,0,-1),Qt("cn3",t,e,Zt,0,-1,-1),Qt("cn4",t,e,Zt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Qt(r,e,t,n,i,s,l){wc.set(i,s,l).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,d=c.length;h<d;h++)u.setXYZ(c[h],wc.x,wc.y,wc.z)}}const Tc=new zi;class TA extends Bi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new vt;s.setIndex(new Ot(n,1)),s.setAttribute("position",new Ot(i,3)),super(s,new On({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Tc.setFromObject(this.object),Tc.isEmpty())return;const t=Tc.min,n=Tc.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class AA extends Bi{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new vt;s.setIndex(new Ot(n,1)),s.setAttribute("position",new We(i,3)),super(s,new On({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class bA extends Lr{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],l=new vt;l.setAttribute("position",new We(s,3)),l.computeBoundingSphere(),super(l,new On({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new vt;u.setAttribute("position",new We(c,3)),u.computeBoundingSphere(),this.add(new yn(u,new Dr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const r0=new D;let Ac,of;class RA extends Rt{constructor(e=new D(0,0,1),t=new D(0,0,0),n=1,i=16776960,s=n*.2,l=s*.2){super(),this.type="ArrowHelper",Ac===void 0&&(Ac=new vt,Ac.setAttribute("position",new We([0,0,0,0,1,0],3)),of=new Mo(0,.5,1,5,1),of.translate(0,-.5,0)),this.position.copy(t),this.line=new Lr(Ac,new On({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new yn(of,new Dr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,l)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{r0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(r0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class CA extends Bi{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new vt;i.setAttribute("position",new We(t,3)),i.setAttribute("color",new We(n,3));const s=new On({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Fe,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class PA{constructor(){this.type="ShapePath",this.color=new Fe,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Ea,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,l){return this.currentPath.bezierCurveTo(e,t,n,i,s,l),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(v){const w=[];for(let M=0,A=v.length;M<A;M++){const R=v[M],C=new fs;C.curves=R.curves,w.push(C)}return w}function n(v,w){const M=w.length;let A=!1;for(let R=M-1,C=0;C<M;R=C++){let I=w[R],z=w[C],b=z.x-I.x,L=z.y-I.y;if(Math.abs(L)>Number.EPSILON){if(L<0&&(I=w[C],b=-b,z=w[R],L=-L),v.y<I.y||v.y>z.y)continue;if(v.y===I.y){if(v.x===I.x)return!0}else{const H=L*(v.x-I.x)-b*(v.y-I.y);if(H===0)return!0;if(H<0)continue;A=!A}}else{if(v.y!==I.y)continue;if(z.x<=v.x&&v.x<=I.x||I.x<=v.x&&v.x<=z.x)return!0}}return A}const i=Ui.isClockWise,s=this.subPaths;if(s.length===0)return[];let l,c,u;const h=[];if(s.length===1)return c=s[0],u=new fs,u.curves=c.curves,h.push(u),h;let d=!i(s[0].getPoints());d=e?!d:d;const p=[],m=[];let _=[],y=0,E;m[y]=void 0,_[y]=[];for(let v=0,w=s.length;v<w;v++)c=s[v],E=c.getPoints(),l=i(E),l=e?!l:l,l?(!d&&m[y]&&y++,m[y]={s:new fs,p:E},m[y].s.curves=c.curves,d&&y++,_[y]=[]):_[y].push({h:c,p:E[0]});if(!m[0])return t(s);if(m.length>1){let v=!1,w=0;for(let M=0,A=m.length;M<A;M++)p[M]=[];for(let M=0,A=m.length;M<A;M++){const R=_[M];for(let C=0;C<R.length;C++){const I=R[C];let z=!0;for(let b=0;b<m.length;b++)n(I.p,m[b].p)&&(M!==b&&w++,z?(z=!1,p[b].push(I)):v=!0);z&&p[M].push(I)}}w>0&&v===!1&&(_=p)}let x;for(let v=0,w=m.length;v<w;v++){u=m[v].s,h.push(u),x=_[v];for(let M=0,A=x.length;M<A;M++)u.holes.push(x[M].h)}return h}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Xc}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Xc);const LA=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:dd,AddEquation:is,AddOperation:Q0,AdditiveAnimationBlendMode:Sd,AdditiveBlending:Sf,AlphaFormat:s_,AlwaysCompare:A_,AlwaysDepth:X0,AlwaysStencilFunc:v_,AmbientLight:bv,AnimationAction:Uv,AnimationClip:Ca,AnimationLoader:DT,AnimationMixer:lA,AnimationObjectGroup:oA,AnimationUtils:CT,ArcCurve:Q_,ArrayCamera:V_,ArrowHelper:RA,Audio:Dv,AudioAnalyser:JT,AudioContext:jd,AudioListener:qT,AudioLoader:WT,AxesHelper:CA,BackSide:Un,BasicDepthPacking:m_,BasicShadowMap:L0,Bone:Nd,BooleanKeyframeTrack:ys,Box2:pA,Box3:zi,Box3Helper:AA,BoxGeometry:vs,BoxHelper:TA,BufferAttribute:Ot,BufferGeometry:vt,BufferGeometryLoader:Iv,ByteType:i_,Cache:gs,Camera:Na,CameraHelper:wA,CanvasTexture:$1,CapsuleGeometry:ou,CatmullRomCurve3:$_,CineonToneMapping:t_,CircleGeometry:au,ClampToEdgeWrapping:Rn,Clock:Zd,Color:Fe,ColorKeyframeTrack:Xd,ColorManagement:Lt,CompressedArrayTexture:K1,CompressedCubeTexture:Q1,CompressedTexture:ru,CompressedTextureLoader:NT,ConeGeometry:lu,CubeCamera:N_,CubeReflectionMapping:rr,CubeRefractionMapping:Cr,CubeTexture:Ua,CubeTextureLoader:UT,CubeUVReflectionMapping:xo,CubicBezierCurve:Fd,CubicBezierCurve3:ev,CubicInterpolant:yv,CullFaceBack:xf,CullFaceFront:P0,CullFaceFrontBack:Jy,CullFaceNone:C0,Curve:xi,CurvePath:nv,CustomBlending:I0,CustomToneMapping:n_,CylinderGeometry:Mo,Cylindrical:dA,Data3DTexture:Td,DataArrayTexture:Kc,DataTexture:po,DataTextureLoader:OT,DataUtils:sS,DecrementStencilOp:lx,DecrementWrapStencilOp:ux,DefaultLoadingManager:Mv,DepthFormat:Ar,DepthStencilFormat:ds,DepthTexture:G_,DirectionalLight:Av,DirectionalLightHelper:EA,DiscreteInterpolant:xv,DisplayP3ColorSpace:Jc,DodecahedronGeometry:cu,DoubleSide:Pi,DstAlphaFactor:B0,DstColorFactor:H0,DynamicCopyUsage:Tx,DynamicDrawUsage:yx,DynamicReadUsage:Mx,EdgesGeometry:iv,EllipseCurve:su,EqualCompare:S_,EqualDepth:q0,EqualStencilFunc:px,EquirectangularReflectionMapping:ua,EquirectangularRefractionMapping:ha,Euler:Da,EventDispatcher:or,ExtrudeGeometry:hu,FileLoader:sr,Float16BufferAttribute:hS,Float32BufferAttribute:We,Float64BufferAttribute:fS,FloatType:Li,Fog:tu,FogExp2:eu,FramebufferTexture:J1,FrontSide:ir,Frustum:Qc,GLBufferAttribute:fA,GLSL1:bx,GLSL3:Kf,GreaterCompare:E_,GreaterDepth:Z0,GreaterEqualCompare:T_,GreaterEqualDepth:j0,GreaterEqualStencilFunc:vx,GreaterStencilFunc:gx,GridHelper:SA,Group:co,HalfFloatType:mo,HemisphereLight:Ev,HemisphereLightHelper:xA,IcosahedronGeometry:fu,ImageBitmapLoader:GT,ImageLoader:Pa,ImageUtils:wd,IncrementStencilOp:ax,IncrementWrapStencilOp:cx,InstancedBufferAttribute:vo,InstancedBufferGeometry:Lv,InstancedInterleavedBuffer:hA,InstancedMesh:Z_,Int16BufferAttribute:cS,Int32BufferAttribute:uS,Int8BufferAttribute:oS,IntType:md,InterleavedBuffer:nu,InterleavedBufferAttribute:ps,Interpolant:ka,InterpolateDiscrete:pa,InterpolateLinear:ma,InterpolateSmooth:Uc,InvertStencilOp:hx,KeepStencilOp:Oc,KeyframeTrack:Si,LOD:q_,LatheGeometry:Fa,Layers:hs,LessCompare:x_,LessDepth:Y0,LessEqualCompare:M_,LessEqualDepth:Bc,LessEqualStencilFunc:mx,LessStencilFunc:dx,Light:Ur,LightProbe:Pv,Line:Lr,Line3:mA,LineBasicMaterial:On,LineCurve:zd,LineCurve3:tv,LineDashedMaterial:gv,LineLoop:J_,LineSegments:Bi,LinearDisplayP3ColorSpace:Ia,LinearEncoding:Md,LinearFilter:en,LinearInterpolant:Wd,LinearMipMapLinearFilter:tx,LinearMipMapNearestFilter:ex,LinearMipmapLinearFilter:Pr,LinearMipmapNearestFilter:pd,LinearSRGBColorSpace:Oi,LinearToneMapping:$0,LinearTransfer:_a,Loader:Xn,LoaderUtils:sd,LoadingManager:Yd,LoopOnce:f_,LoopPingPong:p_,LoopRepeat:d_,LuminanceAlphaFormat:a_,LuminanceFormat:o_,MOUSE:es,Material:Pn,MaterialLoader:yu,MathUtils:Hx,Matrix3:pt,Matrix4:ut,MaxEquation:Tf,Mesh:yn,MeshBasicMaterial:Dr,MeshDepthMaterial:Cd,MeshDistanceMaterial:Pd,MeshLambertMaterial:pv,MeshMatcapMaterial:mv,MeshNormalMaterial:dv,MeshPhongMaterial:hv,MeshPhysicalMaterial:uv,MeshStandardMaterial:Vd,MeshToonMaterial:fv,MinEquation:wf,MirroredRepeatWrapping:da,MixOperation:K0,MultiplyBlending:Ef,MultiplyOperation:La,NearestFilter:$t,NearestMipMapLinearFilter:$y,NearestMipMapNearestFilter:Qy,NearestMipmapLinearFilter:sa,NearestMipmapNearestFilter:kc,NeverCompare:y_,NeverDepth:W0,NeverStencilFunc:fx,NoBlending:nr,NoColorSpace:$n,NoToneMapping:Di,NormalAnimationBlendMode:Zc,NormalBlending:cs,NotEqualCompare:w_,NotEqualDepth:J0,NotEqualStencilFunc:_x,NumberKeyframeTrack:ba,Object3D:Rt,ObjectLoader:HT,ObjectSpaceNormalMap:__,OctahedronGeometry:za,OneFactor:O0,OneMinusDstAlphaFactor:k0,OneMinusDstColorFactor:V0,OneMinusSrcAlphaFactor:fd,OneMinusSrcColorFactor:z0,OrthographicCamera:Rr,P3Primaries:ya,PCFShadowMap:Yc,PCFSoftShadowMap:ra,PMREMGenerator:$f,Path:Ea,PerspectiveCamera:tn,Plane:$i,PlaneGeometry:Oa,PlaneHelper:bA,PointLight:Tv,PointLightHelper:vA,Points:K_,PointsMaterial:Ud,PolarGridHelper:MA,PolyhedronGeometry:Nr,PositionalAudio:ZT,PropertyBinding:wt,PropertyMixer:Nv,QuadraticBezierCurve:Bd,QuadraticBezierCurve3:kd,Quaternion:Cn,QuaternionKeyframeTrack:Eo,QuaternionLinearInterpolant:Sv,RED_GREEN_RGTC2_Format:Zf,RED_RGTC1_Format:h_,REVISION:Xc,RGBADepthPacking:g_,RGBAFormat:Gn,RGBAIntegerFormat:xd,RGBA_ASTC_10x10_Format:Gf,RGBA_ASTC_10x5_Format:kf,RGBA_ASTC_10x6_Format:Hf,RGBA_ASTC_10x8_Format:Vf,RGBA_ASTC_12x10_Format:Wf,RGBA_ASTC_12x12_Format:Xf,RGBA_ASTC_4x4_Format:If,RGBA_ASTC_5x4_Format:Df,RGBA_ASTC_5x5_Format:Nf,RGBA_ASTC_6x5_Format:Uf,RGBA_ASTC_6x6_Format:Of,RGBA_ASTC_8x5_Format:Ff,RGBA_ASTC_8x6_Format:zf,RGBA_ASTC_8x8_Format:Bf,RGBA_BPTC_Format:Nc,RGBA_ETC2_EAC_Format:Lf,RGBA_PVRTC_2BPPV1_Format:Cf,RGBA_PVRTC_4BPPV1_Format:Rf,RGBA_S3TC_DXT1_Format:Lc,RGBA_S3TC_DXT3_Format:Ic,RGBA_S3TC_DXT5_Format:Dc,RGB_BPTC_SIGNED_Format:Yf,RGB_BPTC_UNSIGNED_Format:qf,RGB_ETC1_Format:u_,RGB_ETC2_Format:Pf,RGB_PVRTC_2BPPV1_Format:bf,RGB_PVRTC_4BPPV1_Format:Af,RGB_S3TC_DXT1_Format:Pc,RGFormat:c_,RGIntegerFormat:yd,RawShaderMaterial:cv,Ray:_s,Raycaster:Ov,Rec709Primaries:va,RectAreaLight:Rv,RedFormat:l_,RedIntegerFormat:vd,ReinhardToneMapping:e_,RenderTarget:P_,RepeatWrapping:fa,ReplaceStencilOp:ox,ReverseSubtractEquation:N0,RingGeometry:du,SIGNED_RED_GREEN_RGTC2_Format:Jf,SIGNED_RED_RGTC1_Format:jf,SRGBColorSpace:hn,SRGBTransfer:zt,Scene:Id,ShaderChunk:ht,ShaderLib:_i,ShaderMaterial:Fi,ShadowMaterial:lv,Shape:fs,ShapeGeometry:pu,ShapePath:PA,ShapeUtils:Ui,ShortType:r_,Skeleton:iu,SkeletonHelper:_A,SkinnedMesh:j_,Source:as,Sphere:yi,SphereGeometry:Ba,Spherical:ad,SphericalHarmonics3:Cv,SplineCurve:Hd,SpotLight:wv,SpotLightHelper:gA,Sprite:Y_,SpriteMaterial:Dd,SrcAlphaFactor:hd,SrcAlphaSaturateFactor:G0,SrcColorFactor:F0,StaticCopyUsage:wx,StaticDrawUsage:xa,StaticReadUsage:Sx,StereoCamera:XT,StreamCopyUsage:Ax,StreamDrawUsage:xx,StreamReadUsage:Ex,StringKeyframeTrack:xs,SubtractEquation:D0,SubtractiveBlending:Mf,TOUCH:ts,TangentSpaceNormalMap:Ir,TetrahedronGeometry:mu,Texture:nn,TextureLoader:FT,TorusGeometry:gu,TorusKnotGeometry:_u,Triangle:Vn,TriangleFanDrawMode:rx,TriangleStripDrawMode:ix,TrianglesDrawMode:nx,TubeGeometry:vu,TwoPassDoubleSide:Ky,UVMapping:qc,Uint16BufferAttribute:Ad,Uint32BufferAttribute:bd,Uint8BufferAttribute:aS,Uint8ClampedBufferAttribute:lS,Uniform:Qd,UniformsGroup:uA,UniformsLib:Re,UniformsUtils:D_,UnsignedByteType:Ni,UnsignedInt248Type:Tr,UnsignedIntType:tr,UnsignedShort4444Type:gd,UnsignedShort5551Type:_d,UnsignedShortType:jc,VSMShadowMap:gi,Vector2:ue,Vector3:D,Vector4:It,VectorKeyframeTrack:Ra,VideoTexture:Z1,WebGL1Renderer:W_,WebGL3DRenderTarget:qx,WebGLArrayRenderTarget:Yx,WebGLCoordinateSystem:Ii,WebGLCubeRenderTarget:U_,WebGLMultipleRenderTargets:jx,WebGLRenderTarget:vi,WebGLRenderer:Ld,WebGLUtils:H_,WebGPUCoordinateSystem:Sa,WireframeGeometry:av,WrapAroundEnding:ga,ZeroCurvatureEnding:ss,ZeroFactor:U0,ZeroSlopeEnding:os,ZeroStencilOp:sx,_SRGBAFormat:Hc,createCanvasElement:C_,sRGBEncoding:br},Symbol.toStringTag,{value:"Module"}));var af={exports:{}},Er={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var s0;function IA(){return s0||(s0=1,Er.ConcurrentRoot=1,Er.ContinuousEventPriority=4,Er.DefaultEventPriority=16,Er.DiscreteEventPriority=1,Er.IdleEventPriority=536870912,Er.LegacyRoot=0),Er}var o0;function DA(){return o0||(o0=1,af.exports=IA()),af.exports}var ho=DA();function NA(r){let e;const t=new Set,n=(h,d)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=d?p:Object.assign({},e,p),t.forEach(_=>_(e,m))}},i=()=>e,s=(h,d=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=d(e);function _(){const y=d(e);if(!p(m,y)){const E=m;h(m=y,E)}}return t.add(_),()=>t.delete(_)},u={setState:n,getState:i,subscribe:(h,d,p)=>d||p?s(h,d,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=r(n,i,u),u}const UA=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),a0=UA?Ye.useEffect:Ye.useLayoutEffect;function OA(r){const e=typeof r=="function"?NA(r):r,t=(n=e.getState,i=Object.is)=>{const[,s]=Ye.useReducer(x=>x+1,0),l=e.getState(),c=Ye.useRef(l),u=Ye.useRef(n),h=Ye.useRef(i),d=Ye.useRef(!1),p=Ye.useRef();p.current===void 0&&(p.current=n(l));let m,_=!1;(c.current!==l||u.current!==n||h.current!==i||d.current)&&(m=n(l),_=!i(p.current,m)),a0(()=>{_&&(p.current=m),c.current=l,u.current=n,h.current=i,d.current=!1});const y=Ye.useRef(l);a0(()=>{const x=()=>{try{const w=e.getState(),M=u.current(w);h.current(p.current,M)||(c.current=w,p.current=M,s())}catch{d.current=!0,s()}},v=e.subscribe(x);return e.getState()!==y.current&&x(),v},[]);const E=_?m:p.current;return Ye.useDebugValue(E),E};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}var lf={exports:{}},cf={exports:{}},uf={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var l0;function FA(){return l0||(l0=1,function(r){function e(Y,q){var j=Y.length;Y.push(q);e:for(;0<j;){var k=j-1>>>1,Q=Y[k];if(0<i(Q,q))Y[k]=q,Y[j]=Q,j=k;else break e}}function t(Y){return Y.length===0?null:Y[0]}function n(Y){if(Y.length===0)return null;var q=Y[0],j=Y.pop();if(j!==q){Y[0]=j;e:for(var k=0,Q=Y.length,fe=Q>>>1;k<fe;){var Te=2*(k+1)-1,be=Y[Te],ke=Te+1,He=Y[ke];if(0>i(be,j))ke<Q&&0>i(He,be)?(Y[k]=He,Y[ke]=j,k=ke):(Y[k]=be,Y[Te]=j,k=Te);else if(ke<Q&&0>i(He,j))Y[k]=He,Y[ke]=j,k=ke;else break e}}return q}function i(Y,q){var j=Y.sortIndex-q.sortIndex;return j!==0?j:Y.id-q.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;r.unstable_now=function(){return s.now()}}else{var l=Date,c=l.now();r.unstable_now=function(){return l.now()-c}}var u=[],h=[],d=1,p=null,m=3,_=!1,y=!1,E=!1,x=typeof setTimeout=="function"?setTimeout:null,v=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function M(Y){for(var q=t(h);q!==null;){if(q.callback===null)n(h);else if(q.startTime<=Y)n(h),q.sortIndex=q.expirationTime,e(u,q);else break;q=t(h)}}function A(Y){if(E=!1,M(Y),!y)if(t(u)!==null)y=!0,oe(R);else{var q=t(h);q!==null&&ie(A,q.startTime-Y)}}function R(Y,q){y=!1,E&&(E=!1,v(z),z=-1),_=!0;var j=m;try{for(M(q),p=t(u);p!==null&&(!(p.expirationTime>q)||Y&&!H());){var k=p.callback;if(typeof k=="function"){p.callback=null,m=p.priorityLevel;var Q=k(p.expirationTime<=q);q=r.unstable_now(),typeof Q=="function"?p.callback=Q:p===t(u)&&n(u),M(q)}else n(u);p=t(u)}if(p!==null)var fe=!0;else{var Te=t(h);Te!==null&&ie(A,Te.startTime-q),fe=!1}return fe}finally{p=null,m=j,_=!1}}var C=!1,I=null,z=-1,b=5,L=-1;function H(){return!(r.unstable_now()-L<b)}function te(){if(I!==null){var Y=r.unstable_now();L=Y;var q=!0;try{q=I(!0,Y)}finally{q?se():(C=!1,I=null)}}else C=!1}var se;if(typeof w=="function")se=function(){w(te)};else if(typeof MessageChannel<"u"){var G=new MessageChannel,$=G.port2;G.port1.onmessage=te,se=function(){$.postMessage(null)}}else se=function(){x(te,0)};function oe(Y){I=Y,C||(C=!0,se())}function ie(Y,q){z=x(function(){Y(r.unstable_now())},q)}r.unstable_IdlePriority=5,r.unstable_ImmediatePriority=1,r.unstable_LowPriority=4,r.unstable_NormalPriority=3,r.unstable_Profiling=null,r.unstable_UserBlockingPriority=2,r.unstable_cancelCallback=function(Y){Y.callback=null},r.unstable_continueExecution=function(){y||_||(y=!0,oe(R))},r.unstable_forceFrameRate=function(Y){0>Y||125<Y?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):b=0<Y?Math.floor(1e3/Y):5},r.unstable_getCurrentPriorityLevel=function(){return m},r.unstable_getFirstCallbackNode=function(){return t(u)},r.unstable_next=function(Y){switch(m){case 1:case 2:case 3:var q=3;break;default:q=m}var j=m;m=q;try{return Y()}finally{m=j}},r.unstable_pauseExecution=function(){},r.unstable_requestPaint=function(){},r.unstable_runWithPriority=function(Y,q){switch(Y){case 1:case 2:case 3:case 4:case 5:break;default:Y=3}var j=m;m=Y;try{return q()}finally{m=j}},r.unstable_scheduleCallback=function(Y,q,j){var k=r.unstable_now();switch(typeof j=="object"&&j!==null?(j=j.delay,j=typeof j=="number"&&0<j?k+j:k):j=k,Y){case 1:var Q=-1;break;case 2:Q=250;break;case 5:Q=1073741823;break;case 4:Q=1e4;break;default:Q=5e3}return Q=j+Q,Y={id:d++,callback:q,priorityLevel:Y,startTime:j,expirationTime:Q,sortIndex:-1},j>k?(Y.sortIndex=j,e(h,Y),t(u)===null&&Y===t(h)&&(E?(v(z),z=-1):E=!0,ie(A,j-k))):(Y.sortIndex=Q,e(u,Y),y||_||(y=!0,oe(R))),Y},r.unstable_shouldYield=H,r.unstable_wrapCallback=function(Y){var q=m;return function(){var j=m;m=q;try{return Y.apply(this,arguments)}finally{m=j}}}}(uf)),uf}var c0;function zv(){return c0||(c0=1,cf.exports=FA()),cf.exports}/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var hf,u0;function zA(){return u0||(u0=1,hf=function(e){var t={},n=qy(),i=zv(),s=Object.assign;function l(o){for(var a="https://reactjs.org/docs/error-decoder.html?invariant="+o,f=1;f<arguments.length;f++)a+="&args[]="+encodeURIComponent(arguments[f]);return"Minified React error #"+o+"; visit "+a+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),_=Symbol.for("react.provider"),y=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),v=Symbol.for("react.suspense_list"),w=Symbol.for("react.memo"),M=Symbol.for("react.lazy"),A=Symbol.for("react.offscreen"),R=Symbol.iterator;function C(o){return o===null||typeof o!="object"?null:(o=R&&o[R]||o["@@iterator"],typeof o=="function"?o:null)}function I(o){if(o==null)return null;if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case d:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case x:return"Suspense";case v:return"SuspenseList"}if(typeof o=="object")switch(o.$$typeof){case y:return(o.displayName||"Context")+".Consumer";case _:return(o._context.displayName||"Context")+".Provider";case E:var a=o.render;return o=o.displayName,o||(o=a.displayName||a.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case w:return a=o.displayName||null,a!==null?a:I(o.type)||"Memo";case M:a=o._payload,o=o._init;try{return I(o(a))}catch{}}return null}function z(o){var a=o.type;switch(o.tag){case 24:return"Cache";case 9:return(a.displayName||"Context")+".Consumer";case 10:return(a._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return o=a.render,o=o.displayName||o.name||"",a.displayName||(o!==""?"ForwardRef("+o+")":"ForwardRef");case 7:return"Fragment";case 5:return a;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return I(a);case 8:return a===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a}return null}function b(o){var a=o,f=o;if(o.alternate)for(;a.return;)a=a.return;else{o=a;do a=o,(a.flags&4098)!==0&&(f=a.return),o=a.return;while(o)}return a.tag===3?f:null}function L(o){if(b(o)!==o)throw Error(l(188))}function H(o){var a=o.alternate;if(!a){if(a=b(o),a===null)throw Error(l(188));return a!==o?null:o}for(var f=o,g=a;;){var S=f.return;if(S===null)break;var T=S.alternate;if(T===null){if(g=S.return,g!==null){f=g;continue}break}if(S.child===T.child){for(T=S.child;T;){if(T===f)return L(S),o;if(T===g)return L(S),a;T=T.sibling}throw Error(l(188))}if(f.return!==g.return)f=S,g=T;else{for(var U=!1,W=S.child;W;){if(W===f){U=!0,f=S,g=T;break}if(W===g){U=!0,g=S,f=T;break}W=W.sibling}if(!U){for(W=T.child;W;){if(W===f){U=!0,f=T,g=S;break}if(W===g){U=!0,g=T,f=S;break}W=W.sibling}if(!U)throw Error(l(189))}}if(f.alternate!==g)throw Error(l(190))}if(f.tag!==3)throw Error(l(188));return f.stateNode.current===f?o:a}function te(o){return o=H(o),o!==null?se(o):null}function se(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){var a=se(o);if(a!==null)return a;o=o.sibling}return null}function G(o){if(o.tag===5||o.tag===6)return o;for(o=o.child;o!==null;){if(o.tag!==4){var a=G(o);if(a!==null)return a}o=o.sibling}return null}var $=Array.isArray,oe=e.getPublicInstance,ie=e.getRootHostContext,Y=e.getChildHostContext,q=e.prepareForCommit,j=e.resetAfterCommit,k=e.createInstance,Q=e.appendInitialChild,fe=e.finalizeInitialChildren,Te=e.prepareUpdate,be=e.shouldSetTextContent,ke=e.createTextInstance,He=e.scheduleTimeout,Ze=e.cancelTimeout,yt=e.noTimeout,Ct=e.isPrimaryRenderer,Ve=e.supportsMutation,B=e.supportsPersistence,_e=e.supportsHydration,he=e.getInstanceFromNode,Ee=e.preparePortalMount,de=e.getCurrentEventPriority,Xe=e.detachDeletedInstance,Ne=e.supportsMicrotasks,Oe=e.scheduleMicrotask,et=e.supportsTestSelectors,mt=e.findFiberRoot,Dt=e.getBoundingRect,O=e.getTextContent,P=e.isHiddenSubtree,ee=e.matchAccessibilityRole,Se=e.setFocusIfFocusable,ge=e.setupIntersectionObserver,xe=e.appendChild,Ge=e.appendChildToContainer,Ae=e.commitTextUpdate,Pe=e.commitMount,nt=e.commitUpdate,St=e.insertBefore,Me=e.insertInContainerBefore,Mt=e.removeChild,V=e.removeChildFromContainer,ae=e.resetTextContent,ve=e.hideInstance,F=e.hideTextInstance,me=e.unhideInstance,ye=e.unhideTextInstance,Ce=e.clearContainer,Le=e.cloneInstance,pe=e.createContainerChildSet,Ue=e.appendChildToContainerChildSet,Je=e.finalizeContainerChildren,Ht=e.replaceContainerChildren,Et=e.cloneHiddenInstance,ln=e.cloneHiddenTextInstance,Xt=e.canHydrateInstance,Va=e.canHydrateTextInstance,Ga=e.canHydrateSuspenseInstance,Wa=e.isSuspenseInstancePending,ar=e.isSuspenseInstanceFallback,Xa=e.registerSuspenseInstanceRetry,Mi=e.getNextHydratableSibling,Ya=e.getFirstHydratableChild,xu=e.getFirstHydratableChildWithinContainer,Su=e.getFirstHydratableChildWithinSuspenseInstance,Mu=e.hydrateInstance,N=e.hydrateTextInstance,Z=e.hydrateSuspenseInstance,le=e.getNextHydratableInstanceAfterSuspenseInstance,K=e.commitHydratedContainer,ce=e.commitHydratedSuspenseInstance,ze=e.clearSuspenseBoundary,Ke=e.clearSuspenseBoundaryFromContainer,it=e.shouldDeleteUnhydratedTailInstances,rt=e.didNotMatchHydratedContainerTextInstance,gt=e.didNotMatchHydratedTextInstance,tt;function ot(o){if(tt===void 0)try{throw Error()}catch(f){var a=f.stack.trim().match(/\n( *(at )?)/);tt=a&&a[1]||""}return`
`+tt+o}var Ft=!1;function Bt(o,a){if(!o||Ft)return"";Ft=!0;var f=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(a)if(a=function(){throw Error()},Object.defineProperty(a.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(a,[])}catch(we){var g=we}Reflect.construct(o,[],a)}else{try{a.call()}catch(we){g=we}o.call(a.prototype)}else{try{throw Error()}catch(we){g=we}o()}}catch(we){if(we&&g&&typeof we.stack=="string"){for(var S=we.stack.split(`
`),T=g.stack.split(`
`),U=S.length-1,W=T.length-1;1<=U&&0<=W&&S[U]!==T[W];)W--;for(;1<=U&&0<=W;U--,W--)if(S[U]!==T[W]){if(U!==1||W!==1)do if(U--,W--,0>W||S[U]!==T[W]){var re=`
`+S[U].replace(" at new "," at ");return o.displayName&&re.includes("<anonymous>")&&(re=re.replace("<anonymous>",o.displayName)),re}while(1<=U&&0<=W);break}}}finally{Ft=!1,Error.prepareStackTrace=f}return(o=o?o.displayName||o.name:"")?ot(o):""}var Fn=Object.prototype.hasOwnProperty,Yn=[],Nt=-1;function at(o){return{current:o}}function Pt(o){0>Nt||(o.current=Yn[Nt],Yn[Nt]=null,Nt--)}function st(o,a){Nt++,Yn[Nt]=o.current,o.current=a}var xn={},cn=at(xn),rn=at(!1),ui=xn;function Yt(o,a){var f=o.type.contextTypes;if(!f)return xn;var g=o.stateNode;if(g&&g.__reactInternalMemoizedUnmaskedChildContext===a)return g.__reactInternalMemoizedMaskedChildContext;var S={},T;for(T in f)S[T]=a[T];return g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=a,o.__reactInternalMemoizedMaskedChildContext=S),S}function qt(o){return o=o.childContextTypes,o!=null}function lr(){Pt(rn),Pt(cn)}function Sn(o,a,f){if(cn.current!==xn)throw Error(l(168));st(cn,a),st(rn,f)}function Ss(o,a,f){var g=o.stateNode;if(a=a.childContextTypes,typeof g.getChildContext!="function")return f;g=g.getChildContext();for(var S in g)if(!(S in a))throw Error(l(108,z(o)||"Unknown",S));return s({},f,g)}function Ms(o){return o=(o=o.stateNode)&&o.__reactInternalMemoizedMergedChildContext||xn,ui=cn.current,st(cn,o),st(rn,rn.current),!0}function wo(o,a,f){var g=o.stateNode;if(!g)throw Error(l(169));f?(o=Ss(o,a,ui),g.__reactInternalMemoizedMergedChildContext=o,Pt(rn),Pt(cn),st(cn,o)):Pt(rn),st(rn,f)}var hi=Math.clz32?Math.clz32:ry,ny=Math.log,iy=Math.LN2;function ry(o){return o>>>=0,o===0?32:31-(ny(o)/iy|0)|0}var qa=64,ja=4194304;function To(o){switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return o&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return o}}function Za(o,a){var f=o.pendingLanes;if(f===0)return 0;var g=0,S=o.suspendedLanes,T=o.pingedLanes,U=f&268435455;if(U!==0){var W=U&~S;W!==0?g=To(W):(T&=U,T!==0&&(g=To(T)))}else U=f&~S,U!==0?g=To(U):T!==0&&(g=To(T));if(g===0)return 0;if(a!==0&&a!==g&&(a&S)===0&&(S=g&-g,T=a&-a,S>=T||S===16&&(T&4194240)!==0))return a;if((g&4)!==0&&(g|=f&16),a=o.entangledLanes,a!==0)for(o=o.entanglements,a&=g;0<a;)f=31-hi(a),S=1<<f,g|=o[f],a&=~S;return g}function sy(o,a){switch(o){case 1:case 2:case 4:return a+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function oy(o,a){for(var f=o.suspendedLanes,g=o.pingedLanes,S=o.expirationTimes,T=o.pendingLanes;0<T;){var U=31-hi(T),W=1<<U,re=S[U];re===-1?((W&f)===0||(W&g)!==0)&&(S[U]=sy(W,a)):re<=a&&(o.expiredLanes|=W),T&=~W}}function Eu(o){return o=o.pendingLanes&-1073741825,o!==0?o:o&1073741824?1073741824:0}function wu(o){for(var a=[],f=0;31>f;f++)a.push(o);return a}function Ao(o,a,f){o.pendingLanes|=a,a!==536870912&&(o.suspendedLanes=0,o.pingedLanes=0),o=o.eventTimes,a=31-hi(a),o[a]=f}function ay(o,a){var f=o.pendingLanes&~a;o.pendingLanes=a,o.suspendedLanes=0,o.pingedLanes=0,o.expiredLanes&=a,o.mutableReadLanes&=a,o.entangledLanes&=a,a=o.entanglements;var g=o.eventTimes;for(o=o.expirationTimes;0<f;){var S=31-hi(f),T=1<<S;a[S]=0,g[S]=-1,o[S]=-1,f&=~T}}function Tu(o,a){var f=o.entangledLanes|=a;for(o=o.entanglements;f;){var g=31-hi(f),S=1<<g;S&a|o[g]&a&&(o[g]|=a),f&=~S}}var Tt=0;function tp(o){return o&=-o,1<o?4<o?(o&268435455)!==0?16:536870912:4:1}var Au=i.unstable_scheduleCallback,np=i.unstable_cancelCallback,ly=i.unstable_shouldYield,cy=i.unstable_requestPaint,pn=i.unstable_now,bu=i.unstable_ImmediatePriority,uy=i.unstable_UserBlockingPriority,Ru=i.unstable_NormalPriority,hy=i.unstable_IdlePriority,Ja=null,Ei=null;function fy(o){if(Ei&&typeof Ei.onCommitFiberRoot=="function")try{Ei.onCommitFiberRoot(Ja,o,void 0,(o.current.flags&128)===128)}catch{}}function dy(o,a){return o===a&&(o!==0||1/o===1/a)||o!==o&&a!==a}var wi=typeof Object.is=="function"?Object.is:dy,ki=null,Ka=!1,Cu=!1;function ip(o){ki===null?ki=[o]:ki.push(o)}function py(o){Ka=!0,ip(o)}function Ti(){if(!Cu&&ki!==null){Cu=!0;var o=0,a=Tt;try{var f=ki;for(Tt=1;o<f.length;o++){var g=f[o];do g=g(!0);while(g!==null)}ki=null,Ka=!1}catch(S){throw ki!==null&&(ki=ki.slice(o+1)),Au(bu,Ti),S}finally{Tt=a,Cu=!1}}return null}var my=c.ReactCurrentBatchConfig;function Qa(o,a){if(wi(o,a))return!0;if(typeof o!="object"||o===null||typeof a!="object"||a===null)return!1;var f=Object.keys(o),g=Object.keys(a);if(f.length!==g.length)return!1;for(g=0;g<f.length;g++){var S=f[g];if(!Fn.call(a,S)||!wi(o[S],a[S]))return!1}return!0}function gy(o){switch(o.tag){case 5:return ot(o.type);case 16:return ot("Lazy");case 13:return ot("Suspense");case 19:return ot("SuspenseList");case 0:case 2:case 15:return o=Bt(o.type,!1),o;case 11:return o=Bt(o.type.render,!1),o;case 1:return o=Bt(o.type,!0),o;default:return""}}function fi(o,a){if(o&&o.defaultProps){a=s({},a),o=o.defaultProps;for(var f in o)a[f]===void 0&&(a[f]=o[f]);return a}return a}var $a=at(null),el=null,Es=null,Pu=null;function Lu(){Pu=Es=el=null}function rp(o,a,f){Ct?(st($a,a._currentValue),a._currentValue=f):(st($a,a._currentValue2),a._currentValue2=f)}function Iu(o){var a=$a.current;Pt($a),Ct?o._currentValue=a:o._currentValue2=a}function Du(o,a,f){for(;o!==null;){var g=o.alternate;if((o.childLanes&a)!==a?(o.childLanes|=a,g!==null&&(g.childLanes|=a)):g!==null&&(g.childLanes&a)!==a&&(g.childLanes|=a),o===f)break;o=o.return}}function ws(o,a){el=o,Pu=Es=null,o=o.dependencies,o!==null&&o.firstContext!==null&&((o.lanes&a)!==0&&(Zn=!0),o.firstContext=null)}function ti(o){var a=Ct?o._currentValue:o._currentValue2;if(Pu!==o)if(o={context:o,memoizedValue:a,next:null},Es===null){if(el===null)throw Error(l(308));Es=o,el.dependencies={lanes:0,firstContext:o}}else Es=Es.next=o;return a}var Ai=null,cr=!1;function Nu(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function sp(o,a){o=o.updateQueue,a.updateQueue===o&&(a.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,effects:o.effects})}function Hi(o,a){return{eventTime:o,lane:a,tag:0,payload:null,callback:null,next:null}}function ur(o,a){var f=o.updateQueue;f!==null&&(f=f.shared,sn!==null&&(o.mode&1)!==0&&(_t&2)===0?(o=f.interleaved,o===null?(a.next=a,Ai===null?Ai=[f]:Ai.push(f)):(a.next=o.next,o.next=a),f.interleaved=a):(o=f.pending,o===null?a.next=a:(a.next=o.next,o.next=a),f.pending=a))}function tl(o,a,f){if(a=a.updateQueue,a!==null&&(a=a.shared,(f&4194240)!==0)){var g=a.lanes;g&=o.pendingLanes,f|=g,a.lanes=f,Tu(o,f)}}function op(o,a){var f=o.updateQueue,g=o.alternate;if(g!==null&&(g=g.updateQueue,f===g)){var S=null,T=null;if(f=f.firstBaseUpdate,f!==null){do{var U={eventTime:f.eventTime,lane:f.lane,tag:f.tag,payload:f.payload,callback:f.callback,next:null};T===null?S=T=U:T=T.next=U,f=f.next}while(f!==null);T===null?S=T=a:T=T.next=a}else S=T=a;f={baseState:g.baseState,firstBaseUpdate:S,lastBaseUpdate:T,shared:g.shared,effects:g.effects},o.updateQueue=f;return}o=f.lastBaseUpdate,o===null?f.firstBaseUpdate=a:o.next=a,f.lastBaseUpdate=a}function nl(o,a,f,g){var S=o.updateQueue;cr=!1;var T=S.firstBaseUpdate,U=S.lastBaseUpdate,W=S.shared.pending;if(W!==null){S.shared.pending=null;var re=W,we=re.next;re.next=null,U===null?T=we:U.next=we,U=re;var Be=o.alternate;Be!==null&&(Be=Be.updateQueue,W=Be.lastBaseUpdate,W!==U&&(W===null?Be.firstBaseUpdate=we:W.next=we,Be.lastBaseUpdate=re))}if(T!==null){var lt=S.baseState;U=0,Be=we=re=null,W=T;do{var Qe=W.lane,Ut=W.eventTime;if((g&Qe)===Qe){Be!==null&&(Be=Be.next={eventTime:Ut,lane:0,tag:W.tag,payload:W.payload,callback:W.callback,next:null});e:{var je=o,Tn=W;switch(Qe=a,Ut=f,Tn.tag){case 1:if(je=Tn.payload,typeof je=="function"){lt=je.call(Ut,lt,Qe);break e}lt=je;break e;case 3:je.flags=je.flags&-65537|128;case 0:if(je=Tn.payload,Qe=typeof je=="function"?je.call(Ut,lt,Qe):je,Qe==null)break e;lt=s({},lt,Qe);break e;case 2:cr=!0}}W.callback!==null&&W.lane!==0&&(o.flags|=64,Qe=S.effects,Qe===null?S.effects=[W]:Qe.push(W))}else Ut={eventTime:Ut,lane:Qe,tag:W.tag,payload:W.payload,callback:W.callback,next:null},Be===null?(we=Be=Ut,re=lt):Be=Be.next=Ut,U|=Qe;if(W=W.next,W===null){if(W=S.shared.pending,W===null)break;Qe=W,W=Qe.next,Qe.next=null,S.lastBaseUpdate=Qe,S.shared.pending=null}}while(!0);if(Be===null&&(re=lt),S.baseState=re,S.firstBaseUpdate=we,S.lastBaseUpdate=Be,a=S.shared.interleaved,a!==null){S=a;do U|=S.lane,S=S.next;while(S!==a)}else T===null&&(S.shared.lanes=0);Ds|=U,o.lanes=U,o.memoizedState=lt}}function ap(o,a,f){if(o=a.effects,a.effects=null,o!==null)for(a=0;a<o.length;a++){var g=o[a],S=g.callback;if(S!==null){if(g.callback=null,g=f,typeof S!="function")throw Error(l(191,S));S.call(g)}}}var lp=new n.Component().refs;function Uu(o,a,f,g){a=o.memoizedState,f=f(g,a),f=f==null?a:s({},a,f),o.memoizedState=f,o.lanes===0&&(o.updateQueue.baseState=f)}var il={isMounted:function(o){return(o=o._reactInternals)?b(o)===o:!1},enqueueSetState:function(o,a,f){o=o._reactInternals;var g=In(),S=dr(o),T=Hi(g,S);T.payload=a,f!=null&&(T.callback=f),ur(o,T),a=oi(o,S,g),a!==null&&tl(a,o,S)},enqueueReplaceState:function(o,a,f){o=o._reactInternals;var g=In(),S=dr(o),T=Hi(g,S);T.tag=1,T.payload=a,f!=null&&(T.callback=f),ur(o,T),a=oi(o,S,g),a!==null&&tl(a,o,S)},enqueueForceUpdate:function(o,a){o=o._reactInternals;var f=In(),g=dr(o),S=Hi(f,g);S.tag=2,a!=null&&(S.callback=a),ur(o,S),a=oi(o,g,f),a!==null&&tl(a,o,g)}};function cp(o,a,f,g,S,T,U){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(g,T,U):a.prototype&&a.prototype.isPureReactComponent?!Qa(f,g)||!Qa(S,T):!0}function up(o,a,f){var g=!1,S=xn,T=a.contextType;return typeof T=="object"&&T!==null?T=ti(T):(S=qt(a)?ui:cn.current,g=a.contextTypes,T=(g=g!=null)?Yt(o,S):xn),a=new a(f,T),o.memoizedState=a.state!==null&&a.state!==void 0?a.state:null,a.updater=il,o.stateNode=a,a._reactInternals=o,g&&(o=o.stateNode,o.__reactInternalMemoizedUnmaskedChildContext=S,o.__reactInternalMemoizedMaskedChildContext=T),a}function hp(o,a,f,g){o=a.state,typeof a.componentWillReceiveProps=="function"&&a.componentWillReceiveProps(f,g),typeof a.UNSAFE_componentWillReceiveProps=="function"&&a.UNSAFE_componentWillReceiveProps(f,g),a.state!==o&&il.enqueueReplaceState(a,a.state,null)}function Ou(o,a,f,g){var S=o.stateNode;S.props=f,S.state=o.memoizedState,S.refs=lp,Nu(o);var T=a.contextType;typeof T=="object"&&T!==null?S.context=ti(T):(T=qt(a)?ui:cn.current,S.context=Yt(o,T)),S.state=o.memoizedState,T=a.getDerivedStateFromProps,typeof T=="function"&&(Uu(o,a,T,f),S.state=o.memoizedState),typeof a.getDerivedStateFromProps=="function"||typeof S.getSnapshotBeforeUpdate=="function"||typeof S.UNSAFE_componentWillMount!="function"&&typeof S.componentWillMount!="function"||(a=S.state,typeof S.componentWillMount=="function"&&S.componentWillMount(),typeof S.UNSAFE_componentWillMount=="function"&&S.UNSAFE_componentWillMount(),a!==S.state&&il.enqueueReplaceState(S,S.state,null),nl(o,f,S,g),S.state=o.memoizedState),typeof S.componentDidMount=="function"&&(o.flags|=4194308)}var Ts=[],As=0,rl=null,sl=0,ni=[],ii=0,Or=null,Vi=1,Gi="";function Fr(o,a){Ts[As++]=sl,Ts[As++]=rl,rl=o,sl=a}function fp(o,a,f){ni[ii++]=Vi,ni[ii++]=Gi,ni[ii++]=Or,Or=o;var g=Vi;o=Gi;var S=32-hi(g)-1;g&=~(1<<S),f+=1;var T=32-hi(a)+S;if(30<T){var U=S-S%5;T=(g&(1<<U)-1).toString(32),g>>=U,S-=U,Vi=1<<32-hi(a)+S|f<<S|g,Gi=T+o}else Vi=1<<T|f<<S|g,Gi=o}function Fu(o){o.return!==null&&(Fr(o,1),fp(o,1,0))}function zu(o){for(;o===rl;)rl=Ts[--As],Ts[As]=null,sl=Ts[--As],Ts[As]=null;for(;o===Or;)Or=ni[--ii],ni[ii]=null,Gi=ni[--ii],ni[ii]=null,Vi=ni[--ii],ni[ii]=null}var qn=null,jn=null,Vt=!1,bo=!1,di=null;function dp(o,a){var f=ai(5,null,null,0);f.elementType="DELETED",f.stateNode=a,f.return=o,a=o.deletions,a===null?(o.deletions=[f],o.flags|=16):a.push(f)}function pp(o,a){switch(o.tag){case 5:return a=Xt(a,o.type,o.pendingProps),a!==null?(o.stateNode=a,qn=o,jn=Ya(a),!0):!1;case 6:return a=Va(a,o.pendingProps),a!==null?(o.stateNode=a,qn=o,jn=null,!0):!1;case 13:if(a=Ga(a),a!==null){var f=Or!==null?{id:Vi,overflow:Gi}:null;return o.memoizedState={dehydrated:a,treeContext:f,retryLane:1073741824},f=ai(18,null,null,0),f.stateNode=a,f.return=o,o.child=f,qn=o,jn=null,!0}return!1;default:return!1}}function Bu(o){return(o.mode&1)!==0&&(o.flags&128)===0}function ku(o){if(Vt){var a=jn;if(a){var f=a;if(!pp(o,a)){if(Bu(o))throw Error(l(418));a=Mi(f);var g=qn;a&&pp(o,a)?dp(g,f):(o.flags=o.flags&-4097|2,Vt=!1,qn=o)}}else{if(Bu(o))throw Error(l(418));o.flags=o.flags&-4097|2,Vt=!1,qn=o}}}function mp(o){for(o=o.return;o!==null&&o.tag!==5&&o.tag!==3&&o.tag!==13;)o=o.return;qn=o}function Ro(o){if(!_e||o!==qn)return!1;if(!Vt)return mp(o),Vt=!0,!1;if(o.tag!==3&&(o.tag!==5||it(o.type)&&!be(o.type,o.memoizedProps))){var a=jn;if(a){if(Bu(o)){for(o=jn;o;)o=Mi(o);throw Error(l(418))}for(;a;)dp(o,a),a=Mi(a)}}if(mp(o),o.tag===13){if(!_e)throw Error(l(316));if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));jn=le(o)}else jn=qn?Mi(o.stateNode):null;return!0}function bs(){_e&&(jn=qn=null,bo=Vt=!1)}function Hu(o){di===null?di=[o]:di.push(o)}function Co(o,a,f){if(o=f.ref,o!==null&&typeof o!="function"&&typeof o!="object"){if(f._owner){if(f=f._owner,f){if(f.tag!==1)throw Error(l(309));var g=f.stateNode}if(!g)throw Error(l(147,o));var S=g,T=""+o;return a!==null&&a.ref!==null&&typeof a.ref=="function"&&a.ref._stringRef===T?a.ref:(a=function(U){var W=S.refs;W===lp&&(W=S.refs={}),U===null?delete W[T]:W[T]=U},a._stringRef=T,a)}if(typeof o!="string")throw Error(l(284));if(!f._owner)throw Error(l(290,o))}return o}function ol(o,a){throw o=Object.prototype.toString.call(a),Error(l(31,o==="[object Object]"?"object with keys {"+Object.keys(a).join(", ")+"}":o))}function gp(o){var a=o._init;return a(o._payload)}function _p(o){function a(J,X){if(o){var ne=J.deletions;ne===null?(J.deletions=[X],J.flags|=16):ne.push(X)}}function f(J,X){if(!o)return null;for(;X!==null;)a(J,X),X=X.sibling;return null}function g(J,X){for(J=new Map;X!==null;)X.key!==null?J.set(X.key,X):J.set(X.index,X),X=X.sibling;return J}function S(J,X){return J=mr(J,X),J.index=0,J.sibling=null,J}function T(J,X,ne){return J.index=ne,o?(ne=J.alternate,ne!==null?(ne=ne.index,ne<X?(J.flags|=2,X):ne):(J.flags|=2,X)):(J.flags|=1048576,X)}function U(J){return o&&J.alternate===null&&(J.flags|=2),J}function W(J,X,ne,De){return X===null||X.tag!==6?(X=wh(ne,J.mode,De),X.return=J,X):(X=S(X,ne),X.return=J,X)}function re(J,X,ne,De){var qe=ne.type;return qe===d?Be(J,X,ne.props.children,De,ne.key):X!==null&&(X.elementType===qe||typeof qe=="object"&&qe!==null&&qe.$$typeof===M&&gp(qe)===X.type)?(De=S(X,ne.props),De.ref=Co(J,X,ne),De.return=J,De):(De=Fl(ne.type,ne.key,ne.props,null,J.mode,De),De.ref=Co(J,X,ne),De.return=J,De)}function we(J,X,ne,De){return X===null||X.tag!==4||X.stateNode.containerInfo!==ne.containerInfo||X.stateNode.implementation!==ne.implementation?(X=Th(ne,J.mode,De),X.return=J,X):(X=S(X,ne.children||[]),X.return=J,X)}function Be(J,X,ne,De,qe){return X===null||X.tag!==7?(X=Wr(ne,J.mode,De,qe),X.return=J,X):(X=S(X,ne),X.return=J,X)}function lt(J,X,ne){if(typeof X=="string"&&X!==""||typeof X=="number")return X=wh(""+X,J.mode,ne),X.return=J,X;if(typeof X=="object"&&X!==null){switch(X.$$typeof){case u:return ne=Fl(X.type,X.key,X.props,null,J.mode,ne),ne.ref=Co(J,null,X),ne.return=J,ne;case h:return X=Th(X,J.mode,ne),X.return=J,X;case M:var De=X._init;return lt(J,De(X._payload),ne)}if($(X)||C(X))return X=Wr(X,J.mode,ne,null),X.return=J,X;ol(J,X)}return null}function Qe(J,X,ne,De){var qe=X!==null?X.key:null;if(typeof ne=="string"&&ne!==""||typeof ne=="number")return qe!==null?null:W(J,X,""+ne,De);if(typeof ne=="object"&&ne!==null){switch(ne.$$typeof){case u:return ne.key===qe?re(J,X,ne,De):null;case h:return ne.key===qe?we(J,X,ne,De):null;case M:return qe=ne._init,Qe(J,X,qe(ne._payload),De)}if($(ne)||C(ne))return qe!==null?null:Be(J,X,ne,De,null);ol(J,ne)}return null}function Ut(J,X,ne,De,qe){if(typeof De=="string"&&De!==""||typeof De=="number")return J=J.get(ne)||null,W(X,J,""+De,qe);if(typeof De=="object"&&De!==null){switch(De.$$typeof){case u:return J=J.get(De.key===null?ne:De.key)||null,re(X,J,De,qe);case h:return J=J.get(De.key===null?ne:De.key)||null,we(X,J,De,qe);case M:var dt=De._init;return Ut(J,X,ne,dt(De._payload),qe)}if($(De)||C(De))return J=J.get(ne)||null,Be(X,J,De,qe,null);ol(X,De)}return null}function je(J,X,ne,De){for(var qe=null,dt=null,ct=X,At=X=0,gn=null;ct!==null&&At<ne.length;At++){ct.index>At?(gn=ct,ct=null):gn=ct.sibling;var bt=Qe(J,ct,ne[At],De);if(bt===null){ct===null&&(ct=gn);break}o&&ct&&bt.alternate===null&&a(J,ct),X=T(bt,X,At),dt===null?qe=bt:dt.sibling=bt,dt=bt,ct=gn}if(At===ne.length)return f(J,ct),Vt&&Fr(J,At),qe;if(ct===null){for(;At<ne.length;At++)ct=lt(J,ne[At],De),ct!==null&&(X=T(ct,X,At),dt===null?qe=ct:dt.sibling=ct,dt=ct);return Vt&&Fr(J,At),qe}for(ct=g(J,ct);At<ne.length;At++)gn=Ut(ct,J,At,ne[At],De),gn!==null&&(o&&gn.alternate!==null&&ct.delete(gn.key===null?At:gn.key),X=T(gn,X,At),dt===null?qe=gn:dt.sibling=gn,dt=gn);return o&&ct.forEach(function(gr){return a(J,gr)}),Vt&&Fr(J,At),qe}function Tn(J,X,ne,De){var qe=C(ne);if(typeof qe!="function")throw Error(l(150));if(ne=qe.call(ne),ne==null)throw Error(l(151));for(var dt=qe=null,ct=X,At=X=0,gn=null,bt=ne.next();ct!==null&&!bt.done;At++,bt=ne.next()){ct.index>At?(gn=ct,ct=null):gn=ct.sibling;var gr=Qe(J,ct,bt.value,De);if(gr===null){ct===null&&(ct=gn);break}o&&ct&&gr.alternate===null&&a(J,ct),X=T(gr,X,At),dt===null?qe=gr:dt.sibling=gr,dt=gr,ct=gn}if(bt.done)return f(J,ct),Vt&&Fr(J,At),qe;if(ct===null){for(;!bt.done;At++,bt=ne.next())bt=lt(J,bt.value,De),bt!==null&&(X=T(bt,X,At),dt===null?qe=bt:dt.sibling=bt,dt=bt);return Vt&&Fr(J,At),qe}for(ct=g(J,ct);!bt.done;At++,bt=ne.next())bt=Ut(ct,J,At,bt.value,De),bt!==null&&(o&&bt.alternate!==null&&ct.delete(bt.key===null?At:bt.key),X=T(bt,X,At),dt===null?qe=bt:dt.sibling=bt,dt=bt);return o&&ct.forEach(function(Yy){return a(J,Yy)}),Vt&&Fr(J,At),qe}function li(J,X,ne,De){if(typeof ne=="object"&&ne!==null&&ne.type===d&&ne.key===null&&(ne=ne.props.children),typeof ne=="object"&&ne!==null){switch(ne.$$typeof){case u:e:{for(var qe=ne.key,dt=X;dt!==null;){if(dt.key===qe){if(qe=ne.type,qe===d){if(dt.tag===7){f(J,dt.sibling),X=S(dt,ne.props.children),X.return=J,J=X;break e}}else if(dt.elementType===qe||typeof qe=="object"&&qe!==null&&qe.$$typeof===M&&gp(qe)===dt.type){f(J,dt.sibling),X=S(dt,ne.props),X.ref=Co(J,dt,ne),X.return=J,J=X;break e}f(J,dt);break}else a(J,dt);dt=dt.sibling}ne.type===d?(X=Wr(ne.props.children,J.mode,De,ne.key),X.return=J,J=X):(De=Fl(ne.type,ne.key,ne.props,null,J.mode,De),De.ref=Co(J,X,ne),De.return=J,J=De)}return U(J);case h:e:{for(dt=ne.key;X!==null;){if(X.key===dt)if(X.tag===4&&X.stateNode.containerInfo===ne.containerInfo&&X.stateNode.implementation===ne.implementation){f(J,X.sibling),X=S(X,ne.children||[]),X.return=J,J=X;break e}else{f(J,X);break}else a(J,X);X=X.sibling}X=Th(ne,J.mode,De),X.return=J,J=X}return U(J);case M:return dt=ne._init,li(J,X,dt(ne._payload),De)}if($(ne))return je(J,X,ne,De);if(C(ne))return Tn(J,X,ne,De);ol(J,ne)}return typeof ne=="string"&&ne!==""||typeof ne=="number"?(ne=""+ne,X!==null&&X.tag===6?(f(J,X.sibling),X=S(X,ne),X.return=J,J=X):(f(J,X),X=wh(ne,J.mode,De),X.return=J,J=X),U(J)):f(J,X)}return li}var Rs=_p(!0),vp=_p(!1),Po={},ri=at(Po),Lo=at(Po),Cs=at(Po);function bi(o){if(o===Po)throw Error(l(174));return o}function Vu(o,a){st(Cs,a),st(Lo,o),st(ri,Po),o=ie(a),Pt(ri),st(ri,o)}function Ps(){Pt(ri),Pt(Lo),Pt(Cs)}function yp(o){var a=bi(Cs.current),f=bi(ri.current);a=Y(f,o.type,a),f!==a&&(st(Lo,o),st(ri,a))}function Gu(o){Lo.current===o&&(Pt(ri),Pt(Lo))}var Gt=at(0);function al(o){for(var a=o;a!==null;){if(a.tag===13){var f=a.memoizedState;if(f!==null&&(f=f.dehydrated,f===null||Wa(f)||ar(f)))return a}else if(a.tag===19&&a.memoizedProps.revealOrder!==void 0){if((a.flags&128)!==0)return a}else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return null;a=a.return}a.sibling.return=a.return,a=a.sibling}return null}var Wu=[];function Xu(){for(var o=0;o<Wu.length;o++){var a=Wu[o];Ct?a._workInProgressVersionPrimary=null:a._workInProgressVersionSecondary=null}Wu.length=0}var ll=c.ReactCurrentDispatcher,si=c.ReactCurrentBatchConfig,Ls=0,jt=null,Mn=null,mn=null,cl=!1,Io=!1,Do=0,_y=0;function En(){throw Error(l(321))}function Yu(o,a){if(a===null)return!1;for(var f=0;f<a.length&&f<o.length;f++)if(!wi(o[f],a[f]))return!1;return!0}function qu(o,a,f,g,S,T){if(Ls=T,jt=a,a.memoizedState=null,a.updateQueue=null,a.lanes=0,ll.current=o===null||o.memoizedState===null?Sy:My,o=f(g,S),Io){T=0;do{if(Io=!1,Do=0,25<=T)throw Error(l(301));T+=1,mn=Mn=null,a.updateQueue=null,ll.current=Ey,o=f(g,S)}while(Io)}if(ll.current=pl,a=Mn!==null&&Mn.next!==null,Ls=0,mn=Mn=jt=null,cl=!1,a)throw Error(l(300));return o}function ju(){var o=Do!==0;return Do=0,o}function Wi(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return mn===null?jt.memoizedState=mn=o:mn=mn.next=o,mn}function Ri(){if(Mn===null){var o=jt.alternate;o=o!==null?o.memoizedState:null}else o=Mn.next;var a=mn===null?jt.memoizedState:mn.next;if(a!==null)mn=a,Mn=o;else{if(o===null)throw Error(l(310));Mn=o,o={memoizedState:Mn.memoizedState,baseState:Mn.baseState,baseQueue:Mn.baseQueue,queue:Mn.queue,next:null},mn===null?jt.memoizedState=mn=o:mn=mn.next=o}return mn}function zr(o,a){return typeof a=="function"?a(o):a}function ul(o){var a=Ri(),f=a.queue;if(f===null)throw Error(l(311));f.lastRenderedReducer=o;var g=Mn,S=g.baseQueue,T=f.pending;if(T!==null){if(S!==null){var U=S.next;S.next=T.next,T.next=U}g.baseQueue=S=T,f.pending=null}if(S!==null){T=S.next,g=g.baseState;var W=U=null,re=null,we=T;do{var Be=we.lane;if((Ls&Be)===Be)re!==null&&(re=re.next={lane:0,action:we.action,hasEagerState:we.hasEagerState,eagerState:we.eagerState,next:null}),g=we.hasEagerState?we.eagerState:o(g,we.action);else{var lt={lane:Be,action:we.action,hasEagerState:we.hasEagerState,eagerState:we.eagerState,next:null};re===null?(W=re=lt,U=g):re=re.next=lt,jt.lanes|=Be,Ds|=Be}we=we.next}while(we!==null&&we!==T);re===null?U=g:re.next=W,wi(g,a.memoizedState)||(Zn=!0),a.memoizedState=g,a.baseState=U,a.baseQueue=re,f.lastRenderedState=g}if(o=f.interleaved,o!==null){S=o;do T=S.lane,jt.lanes|=T,Ds|=T,S=S.next;while(S!==o)}else S===null&&(f.lanes=0);return[a.memoizedState,f.dispatch]}function hl(o){var a=Ri(),f=a.queue;if(f===null)throw Error(l(311));f.lastRenderedReducer=o;var g=f.dispatch,S=f.pending,T=a.memoizedState;if(S!==null){f.pending=null;var U=S=S.next;do T=o(T,U.action),U=U.next;while(U!==S);wi(T,a.memoizedState)||(Zn=!0),a.memoizedState=T,a.baseQueue===null&&(a.baseState=T),f.lastRenderedState=T}return[T,g]}function xp(){}function Sp(o,a){var f=jt,g=Ri(),S=a(),T=!wi(g.memoizedState,S);if(T&&(g.memoizedState=S,Zn=!0),g=g.queue,Uo(wp.bind(null,f,g,o),[o]),g.getSnapshot!==a||T||mn!==null&&mn.memoizedState.tag&1){if(f.flags|=2048,No(9,Ep.bind(null,f,g,S,a),void 0,null),sn===null)throw Error(l(349));(Ls&30)!==0||Mp(f,a,S)}return S}function Mp(o,a,f){o.flags|=16384,o={getSnapshot:a,value:f},a=jt.updateQueue,a===null?(a={lastEffect:null,stores:null},jt.updateQueue=a,a.stores=[o]):(f=a.stores,f===null?a.stores=[o]:f.push(o))}function Ep(o,a,f,g){a.value=f,a.getSnapshot=g,Tp(a)&&oi(o,1,-1)}function wp(o,a,f){return f(function(){Tp(a)&&oi(o,1,-1)})}function Tp(o){var a=o.getSnapshot;o=o.value;try{var f=a();return!wi(o,f)}catch{return!0}}function Zu(o){var a=Wi();return typeof o=="function"&&(o=o()),a.memoizedState=a.baseState=o,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:zr,lastRenderedState:o},a.queue=o,o=o.dispatch=xy.bind(null,jt,o),[a.memoizedState,o]}function No(o,a,f,g){return o={tag:o,create:a,destroy:f,deps:g,next:null},a=jt.updateQueue,a===null?(a={lastEffect:null,stores:null},jt.updateQueue=a,a.lastEffect=o.next=o):(f=a.lastEffect,f===null?a.lastEffect=o.next=o:(g=f.next,f.next=o,o.next=g,a.lastEffect=o)),o}function Ap(){return Ri().memoizedState}function fl(o,a,f,g){var S=Wi();jt.flags|=o,S.memoizedState=No(1|a,f,void 0,g===void 0?null:g)}function dl(o,a,f,g){var S=Ri();g=g===void 0?null:g;var T=void 0;if(Mn!==null){var U=Mn.memoizedState;if(T=U.destroy,g!==null&&Yu(g,U.deps)){S.memoizedState=No(a,f,T,g);return}}jt.flags|=o,S.memoizedState=No(1|a,f,T,g)}function Ju(o,a){return fl(8390656,8,o,a)}function Uo(o,a){return dl(2048,8,o,a)}function bp(o,a){return dl(4,2,o,a)}function Rp(o,a){return dl(4,4,o,a)}function Cp(o,a){if(typeof a=="function")return o=o(),a(o),function(){a(null)};if(a!=null)return o=o(),a.current=o,function(){a.current=null}}function Pp(o,a,f){return f=f!=null?f.concat([o]):null,dl(4,4,Cp.bind(null,a,o),f)}function Ku(){}function Lp(o,a){var f=Ri();a=a===void 0?null:a;var g=f.memoizedState;return g!==null&&a!==null&&Yu(a,g[1])?g[0]:(f.memoizedState=[o,a],o)}function Ip(o,a){var f=Ri();a=a===void 0?null:a;var g=f.memoizedState;return g!==null&&a!==null&&Yu(a,g[1])?g[0]:(o=o(),f.memoizedState=[o,a],o)}function vy(o,a){var f=Tt;Tt=f!==0&&4>f?f:4,o(!0);var g=si.transition;si.transition={};try{o(!1),a()}finally{Tt=f,si.transition=g}}function Dp(){return Ri().memoizedState}function yy(o,a,f){var g=dr(o);f={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null},Np(o)?Up(a,f):(Op(o,a,f),f=In(),o=oi(o,g,f),o!==null&&Fp(o,a,g))}function xy(o,a,f){var g=dr(o),S={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null};if(Np(o))Up(a,S);else{Op(o,a,S);var T=o.alternate;if(o.lanes===0&&(T===null||T.lanes===0)&&(T=a.lastRenderedReducer,T!==null))try{var U=a.lastRenderedState,W=T(U,f);if(S.hasEagerState=!0,S.eagerState=W,wi(W,U))return}catch{}finally{}f=In(),o=oi(o,g,f),o!==null&&Fp(o,a,g)}}function Np(o){var a=o.alternate;return o===jt||a!==null&&a===jt}function Up(o,a){Io=cl=!0;var f=o.pending;f===null?a.next=a:(a.next=f.next,f.next=a),o.pending=a}function Op(o,a,f){sn!==null&&(o.mode&1)!==0&&(_t&2)===0?(o=a.interleaved,o===null?(f.next=f,Ai===null?Ai=[a]:Ai.push(a)):(f.next=o.next,o.next=f),a.interleaved=f):(o=a.pending,o===null?f.next=f:(f.next=o.next,o.next=f),a.pending=f)}function Fp(o,a,f){if((f&4194240)!==0){var g=a.lanes;g&=o.pendingLanes,f|=g,a.lanes=f,Tu(o,f)}}var pl={readContext:ti,useCallback:En,useContext:En,useEffect:En,useImperativeHandle:En,useInsertionEffect:En,useLayoutEffect:En,useMemo:En,useReducer:En,useRef:En,useState:En,useDebugValue:En,useDeferredValue:En,useTransition:En,useMutableSource:En,useSyncExternalStore:En,useId:En,unstable_isNewReconciler:!1},Sy={readContext:ti,useCallback:function(o,a){return Wi().memoizedState=[o,a===void 0?null:a],o},useContext:ti,useEffect:Ju,useImperativeHandle:function(o,a,f){return f=f!=null?f.concat([o]):null,fl(4194308,4,Cp.bind(null,a,o),f)},useLayoutEffect:function(o,a){return fl(4194308,4,o,a)},useInsertionEffect:function(o,a){return fl(4,2,o,a)},useMemo:function(o,a){var f=Wi();return a=a===void 0?null:a,o=o(),f.memoizedState=[o,a],o},useReducer:function(o,a,f){var g=Wi();return a=f!==void 0?f(a):a,g.memoizedState=g.baseState=a,o={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:a},g.queue=o,o=o.dispatch=yy.bind(null,jt,o),[g.memoizedState,o]},useRef:function(o){var a=Wi();return o={current:o},a.memoizedState=o},useState:Zu,useDebugValue:Ku,useDeferredValue:function(o){var a=Zu(o),f=a[0],g=a[1];return Ju(function(){var S=si.transition;si.transition={};try{g(o)}finally{si.transition=S}},[o]),f},useTransition:function(){var o=Zu(!1),a=o[0];return o=vy.bind(null,o[1]),Wi().memoizedState=o,[a,o]},useMutableSource:function(){},useSyncExternalStore:function(o,a,f){var g=jt,S=Wi();if(Vt){if(f===void 0)throw Error(l(407));f=f()}else{if(f=a(),sn===null)throw Error(l(349));(Ls&30)!==0||Mp(g,a,f)}S.memoizedState=f;var T={value:f,getSnapshot:a};return S.queue=T,Ju(wp.bind(null,g,T,o),[o]),g.flags|=2048,No(9,Ep.bind(null,g,T,f,a),void 0,null),f},useId:function(){var o=Wi(),a=sn.identifierPrefix;if(Vt){var f=Gi,g=Vi;f=(g&~(1<<32-hi(g)-1)).toString(32)+f,a=":"+a+"R"+f,f=Do++,0<f&&(a+="H"+f.toString(32)),a+=":"}else f=_y++,a=":"+a+"r"+f.toString(32)+":";return o.memoizedState=a},unstable_isNewReconciler:!1},My={readContext:ti,useCallback:Lp,useContext:ti,useEffect:Uo,useImperativeHandle:Pp,useInsertionEffect:bp,useLayoutEffect:Rp,useMemo:Ip,useReducer:ul,useRef:Ap,useState:function(){return ul(zr)},useDebugValue:Ku,useDeferredValue:function(o){var a=ul(zr),f=a[0],g=a[1];return Uo(function(){var S=si.transition;si.transition={};try{g(o)}finally{si.transition=S}},[o]),f},useTransition:function(){var o=ul(zr)[0],a=Ri().memoizedState;return[o,a]},useMutableSource:xp,useSyncExternalStore:Sp,useId:Dp,unstable_isNewReconciler:!1},Ey={readContext:ti,useCallback:Lp,useContext:ti,useEffect:Uo,useImperativeHandle:Pp,useInsertionEffect:bp,useLayoutEffect:Rp,useMemo:Ip,useReducer:hl,useRef:Ap,useState:function(){return hl(zr)},useDebugValue:Ku,useDeferredValue:function(o){var a=hl(zr),f=a[0],g=a[1];return Uo(function(){var S=si.transition;si.transition={};try{g(o)}finally{si.transition=S}},[o]),f},useTransition:function(){var o=hl(zr)[0],a=Ri().memoizedState;return[o,a]},useMutableSource:xp,useSyncExternalStore:Sp,useId:Dp,unstable_isNewReconciler:!1};function Qu(o,a){try{var f="",g=a;do f+=gy(g),g=g.return;while(g);var S=f}catch(T){S=`
Error generating stack: `+T.message+`
`+T.stack}return{value:o,source:a,stack:S}}function $u(o,a){try{console.error(a.value)}catch(f){setTimeout(function(){throw f})}}var wy=typeof WeakMap=="function"?WeakMap:Map;function zp(o,a,f){f=Hi(-1,f),f.tag=3,f.payload={element:null};var g=a.value;return f.callback=function(){Pl||(Pl=!0,_h=g),$u(o,a)},f}function Bp(o,a,f){f=Hi(-1,f),f.tag=3;var g=o.type.getDerivedStateFromError;if(typeof g=="function"){var S=a.value;f.payload=function(){return g(S)},f.callback=function(){$u(o,a)}}var T=o.stateNode;return T!==null&&typeof T.componentDidCatch=="function"&&(f.callback=function(){$u(o,a),typeof g!="function"&&(hr===null?hr=new Set([this]):hr.add(this));var U=a.stack;this.componentDidCatch(a.value,{componentStack:U!==null?U:""})}),f}function kp(o,a,f){var g=o.pingCache;if(g===null){g=o.pingCache=new wy;var S=new Set;g.set(a,S)}else S=g.get(a),S===void 0&&(S=new Set,g.set(a,S));S.has(f)||(S.add(f),o=zy.bind(null,o,a,f),a.then(o,o))}function Hp(o){do{var a;if((a=o.tag===13)&&(a=o.memoizedState,a=a!==null?a.dehydrated!==null:!0),a)return o;o=o.return}while(o!==null);return null}function Vp(o,a,f,g,S){return(o.mode&1)===0?(o===a?o.flags|=65536:(o.flags|=128,f.flags|=131072,f.flags&=-52805,f.tag===1&&(f.alternate===null?f.tag=17:(a=Hi(-1,1),a.tag=2,ur(f,a))),f.lanes|=1),o):(o.flags|=65536,o.lanes=S,o)}function Ci(o){o.flags|=4}function Gp(o,a){if(o!==null&&o.child===a.child)return!0;if((a.flags&16)!==0)return!1;for(o=a.child;o!==null;){if((o.flags&12854)!==0||(o.subtreeFlags&12854)!==0)return!1;o=o.sibling}return!0}var Oo,Fo,ml,gl;if(Ve)Oo=function(o,a){for(var f=a.child;f!==null;){if(f.tag===5||f.tag===6)Q(o,f.stateNode);else if(f.tag!==4&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===a)break;for(;f.sibling===null;){if(f.return===null||f.return===a)return;f=f.return}f.sibling.return=f.return,f=f.sibling}},Fo=function(){},ml=function(o,a,f,g,S){if(o=o.memoizedProps,o!==g){var T=a.stateNode,U=bi(ri.current);f=Te(T,f,o,g,S,U),(a.updateQueue=f)&&Ci(a)}},gl=function(o,a,f,g){f!==g&&Ci(a)};else if(B){Oo=function(o,a,f,g){for(var S=a.child;S!==null;){if(S.tag===5){var T=S.stateNode;f&&g&&(T=Et(T,S.type,S.memoizedProps,S)),Q(o,T)}else if(S.tag===6)T=S.stateNode,f&&g&&(T=ln(T,S.memoizedProps,S)),Q(o,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),Oo(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};var Wp=function(o,a,f,g){for(var S=a.child;S!==null;){if(S.tag===5){var T=S.stateNode;f&&g&&(T=Et(T,S.type,S.memoizedProps,S)),Ue(o,T)}else if(S.tag===6)T=S.stateNode,f&&g&&(T=ln(T,S.memoizedProps,S)),Ue(o,T);else if(S.tag!==4){if(S.tag===22&&S.memoizedState!==null)T=S.child,T!==null&&(T.return=S),Wp(o,S,!0,!0);else if(S.child!==null){S.child.return=S,S=S.child;continue}}if(S===a)break;for(;S.sibling===null;){if(S.return===null||S.return===a)return;S=S.return}S.sibling.return=S.return,S=S.sibling}};Fo=function(o,a){var f=a.stateNode;if(!Gp(o,a)){o=f.containerInfo;var g=pe(o);Wp(g,a,!1,!1),f.pendingChildren=g,Ci(a),Je(o,g)}},ml=function(o,a,f,g,S){var T=o.stateNode,U=o.memoizedProps;if((o=Gp(o,a))&&U===g)a.stateNode=T;else{var W=a.stateNode,re=bi(ri.current),we=null;U!==g&&(we=Te(W,f,U,g,S,re)),o&&we===null?a.stateNode=T:(T=Le(T,we,f,U,g,a,o,W),fe(T,f,g,S,re)&&Ci(a),a.stateNode=T,o?Ci(a):Oo(T,a,!1,!1))}},gl=function(o,a,f,g){f!==g?(o=bi(Cs.current),f=bi(ri.current),a.stateNode=ke(g,o,f,a),Ci(a)):a.stateNode=o.stateNode}}else Fo=function(){},ml=function(){},gl=function(){};function zo(o,a){if(!Vt)switch(o.tailMode){case"hidden":a=o.tail;for(var f=null;a!==null;)a.alternate!==null&&(f=a),a=a.sibling;f===null?o.tail=null:f.sibling=null;break;case"collapsed":f=o.tail;for(var g=null;f!==null;)f.alternate!==null&&(g=f),f=f.sibling;g===null?a||o.tail===null?o.tail=null:o.tail.sibling=null:g.sibling=null}}function wn(o){var a=o.alternate!==null&&o.alternate.child===o.child,f=0,g=0;if(a)for(var S=o.child;S!==null;)f|=S.lanes|S.childLanes,g|=S.subtreeFlags&14680064,g|=S.flags&14680064,S.return=o,S=S.sibling;else for(S=o.child;S!==null;)f|=S.lanes|S.childLanes,g|=S.subtreeFlags,g|=S.flags,S.return=o,S=S.sibling;return o.subtreeFlags|=g,o.childLanes=f,a}function Ty(o,a,f){var g=a.pendingProps;switch(zu(a),a.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return wn(a),null;case 1:return qt(a.type)&&lr(),wn(a),null;case 3:return g=a.stateNode,Ps(),Pt(rn),Pt(cn),Xu(),g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null),(o===null||o.child===null)&&(Ro(a)?Ci(a):o===null||o.memoizedState.isDehydrated&&(a.flags&256)===0||(a.flags|=1024,di!==null&&(xh(di),di=null))),Fo(o,a),wn(a),null;case 5:Gu(a),f=bi(Cs.current);var S=a.type;if(o!==null&&a.stateNode!=null)ml(o,a,S,g,f),o.ref!==a.ref&&(a.flags|=512,a.flags|=2097152);else{if(!g){if(a.stateNode===null)throw Error(l(166));return wn(a),null}if(o=bi(ri.current),Ro(a)){if(!_e)throw Error(l(175));o=Mu(a.stateNode,a.type,a.memoizedProps,f,o,a,!bo),a.updateQueue=o,o!==null&&Ci(a)}else{var T=k(S,g,f,o,a);Oo(T,a,!1,!1),a.stateNode=T,fe(T,S,g,f,o)&&Ci(a)}a.ref!==null&&(a.flags|=512,a.flags|=2097152)}return wn(a),null;case 6:if(o&&a.stateNode!=null)gl(o,a,o.memoizedProps,g);else{if(typeof g!="string"&&a.stateNode===null)throw Error(l(166));if(o=bi(Cs.current),f=bi(ri.current),Ro(a)){if(!_e)throw Error(l(176));if(o=a.stateNode,g=a.memoizedProps,(f=N(o,g,a,!bo))&&(S=qn,S!==null))switch(T=(S.mode&1)!==0,S.tag){case 3:rt(S.stateNode.containerInfo,o,g,T);break;case 5:gt(S.type,S.memoizedProps,S.stateNode,o,g,T)}f&&Ci(a)}else a.stateNode=ke(g,o,f,a)}return wn(a),null;case 13:if(Pt(Gt),g=a.memoizedState,Vt&&jn!==null&&(a.mode&1)!==0&&(a.flags&128)===0){for(o=jn;o;)o=Mi(o);return bs(),a.flags|=98560,a}if(g!==null&&g.dehydrated!==null){if(g=Ro(a),o===null){if(!g)throw Error(l(318));if(!_e)throw Error(l(344));if(o=a.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(l(317));Z(o,a)}else bs(),(a.flags&128)===0&&(a.memoizedState=null),a.flags|=4;return wn(a),null}return di!==null&&(xh(di),di=null),(a.flags&128)!==0?(a.lanes=f,a):(g=g!==null,f=!1,o===null?Ro(a):f=o.memoizedState!==null,g&&!f&&(a.child.flags|=8192,(a.mode&1)!==0&&(o===null||(Gt.current&1)!==0?un===0&&(un=3):Mh())),a.updateQueue!==null&&(a.flags|=4),wn(a),null);case 4:return Ps(),Fo(o,a),o===null&&Ee(a.stateNode.containerInfo),wn(a),null;case 10:return Iu(a.type._context),wn(a),null;case 17:return qt(a.type)&&lr(),wn(a),null;case 19:if(Pt(Gt),S=a.memoizedState,S===null)return wn(a),null;if(g=(a.flags&128)!==0,T=S.rendering,T===null)if(g)zo(S,!1);else{if(un!==0||o!==null&&(o.flags&128)!==0)for(o=a.child;o!==null;){if(T=al(o),T!==null){for(a.flags|=128,zo(S,!1),o=T.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),a.subtreeFlags=0,o=f,g=a.child;g!==null;)f=g,S=o,f.flags&=14680066,T=f.alternate,T===null?(f.childLanes=0,f.lanes=S,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=T.childLanes,f.lanes=T.lanes,f.child=T.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=T.memoizedProps,f.memoizedState=T.memoizedState,f.updateQueue=T.updateQueue,f.type=T.type,S=T.dependencies,f.dependencies=S===null?null:{lanes:S.lanes,firstContext:S.firstContext}),g=g.sibling;return st(Gt,Gt.current&1|2),a.child}o=o.sibling}S.tail!==null&&pn()>gh&&(a.flags|=128,g=!0,zo(S,!1),a.lanes=4194304)}else{if(!g)if(o=al(T),o!==null){if(a.flags|=128,g=!0,o=o.updateQueue,o!==null&&(a.updateQueue=o,a.flags|=4),zo(S,!0),S.tail===null&&S.tailMode==="hidden"&&!T.alternate&&!Vt)return wn(a),null}else 2*pn()-S.renderingStartTime>gh&&f!==1073741824&&(a.flags|=128,g=!0,zo(S,!1),a.lanes=4194304);S.isBackwards?(T.sibling=a.child,a.child=T):(o=S.last,o!==null?o.sibling=T:a.child=T,S.last=T)}return S.tail!==null?(a=S.tail,S.rendering=a,S.tail=a.sibling,S.renderingStartTime=pn(),a.sibling=null,o=Gt.current,st(Gt,g?o&1|2:o&1),a):(wn(a),null);case 22:case 23:return Sh(),g=a.memoizedState!==null,o!==null&&o.memoizedState!==null!==g&&(a.flags|=8192),g&&(a.mode&1)!==0?(Jn&1073741824)!==0&&(wn(a),Ve&&a.subtreeFlags&6&&(a.flags|=8192)):wn(a),null;case 24:return null;case 25:return null}throw Error(l(156,a.tag))}var Ay=c.ReactCurrentOwner,Zn=!1;function Ln(o,a,f,g){a.child=o===null?vp(a,null,f,g):Rs(a,o.child,f,g)}function Xp(o,a,f,g,S){f=f.render;var T=a.ref;return ws(a,S),g=qu(o,a,f,g,T,S),f=ju(),o!==null&&!Zn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,Xi(o,a,S)):(Vt&&f&&Fu(a),a.flags|=1,Ln(o,a,g,S),a.child)}function Yp(o,a,f,g,S){if(o===null){var T=f.type;return typeof T=="function"&&!Eh(T)&&T.defaultProps===void 0&&f.compare===null&&f.defaultProps===void 0?(a.tag=15,a.type=T,qp(o,a,T,g,S)):(o=Fl(f.type,null,g,a,a.mode,S),o.ref=a.ref,o.return=a,a.child=o)}if(T=o.child,(o.lanes&S)===0){var U=T.memoizedProps;if(f=f.compare,f=f!==null?f:Qa,f(U,g)&&o.ref===a.ref)return Xi(o,a,S)}return a.flags|=1,o=mr(T,g),o.ref=a.ref,o.return=a,a.child=o}function qp(o,a,f,g,S){if(o!==null&&Qa(o.memoizedProps,g)&&o.ref===a.ref)if(Zn=!1,(o.lanes&S)!==0)(o.flags&131072)!==0&&(Zn=!0);else return a.lanes=o.lanes,Xi(o,a,S);return eh(o,a,f,g,S)}function jp(o,a,f){var g=a.pendingProps,S=g.children,T=o!==null?o.memoizedState:null;if(g.mode==="hidden")if((a.mode&1)===0)a.memoizedState={baseLanes:0,cachePool:null},st(Is,Jn),Jn|=f;else if((f&1073741824)!==0)a.memoizedState={baseLanes:0,cachePool:null},g=T!==null?T.baseLanes:f,st(Is,Jn),Jn|=g;else return o=T!==null?T.baseLanes|f:f,a.lanes=a.childLanes=1073741824,a.memoizedState={baseLanes:o,cachePool:null},a.updateQueue=null,st(Is,Jn),Jn|=o,null;else T!==null?(g=T.baseLanes|f,a.memoizedState=null):g=f,st(Is,Jn),Jn|=g;return Ln(o,a,S,f),a.child}function Zp(o,a){var f=a.ref;(o===null&&f!==null||o!==null&&o.ref!==f)&&(a.flags|=512,a.flags|=2097152)}function eh(o,a,f,g,S){var T=qt(f)?ui:cn.current;return T=Yt(a,T),ws(a,S),f=qu(o,a,f,g,T,S),g=ju(),o!==null&&!Zn?(a.updateQueue=o.updateQueue,a.flags&=-2053,o.lanes&=~S,Xi(o,a,S)):(Vt&&g&&Fu(a),a.flags|=1,Ln(o,a,f,S),a.child)}function Jp(o,a,f,g,S){if(qt(f)){var T=!0;Ms(a)}else T=!1;if(ws(a,S),a.stateNode===null)o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),up(a,f,g),Ou(a,f,g,S),g=!0;else if(o===null){var U=a.stateNode,W=a.memoizedProps;U.props=W;var re=U.context,we=f.contextType;typeof we=="object"&&we!==null?we=ti(we):(we=qt(f)?ui:cn.current,we=Yt(a,we));var Be=f.getDerivedStateFromProps,lt=typeof Be=="function"||typeof U.getSnapshotBeforeUpdate=="function";lt||typeof U.UNSAFE_componentWillReceiveProps!="function"&&typeof U.componentWillReceiveProps!="function"||(W!==g||re!==we)&&hp(a,U,g,we),cr=!1;var Qe=a.memoizedState;U.state=Qe,nl(a,g,U,S),re=a.memoizedState,W!==g||Qe!==re||rn.current||cr?(typeof Be=="function"&&(Uu(a,f,Be,g),re=a.memoizedState),(W=cr||cp(a,f,W,g,Qe,re,we))?(lt||typeof U.UNSAFE_componentWillMount!="function"&&typeof U.componentWillMount!="function"||(typeof U.componentWillMount=="function"&&U.componentWillMount(),typeof U.UNSAFE_componentWillMount=="function"&&U.UNSAFE_componentWillMount()),typeof U.componentDidMount=="function"&&(a.flags|=4194308)):(typeof U.componentDidMount=="function"&&(a.flags|=4194308),a.memoizedProps=g,a.memoizedState=re),U.props=g,U.state=re,U.context=we,g=W):(typeof U.componentDidMount=="function"&&(a.flags|=4194308),g=!1)}else{U=a.stateNode,sp(o,a),W=a.memoizedProps,we=a.type===a.elementType?W:fi(a.type,W),U.props=we,lt=a.pendingProps,Qe=U.context,re=f.contextType,typeof re=="object"&&re!==null?re=ti(re):(re=qt(f)?ui:cn.current,re=Yt(a,re));var Ut=f.getDerivedStateFromProps;(Be=typeof Ut=="function"||typeof U.getSnapshotBeforeUpdate=="function")||typeof U.UNSAFE_componentWillReceiveProps!="function"&&typeof U.componentWillReceiveProps!="function"||(W!==lt||Qe!==re)&&hp(a,U,g,re),cr=!1,Qe=a.memoizedState,U.state=Qe,nl(a,g,U,S);var je=a.memoizedState;W!==lt||Qe!==je||rn.current||cr?(typeof Ut=="function"&&(Uu(a,f,Ut,g),je=a.memoizedState),(we=cr||cp(a,f,we,g,Qe,je,re)||!1)?(Be||typeof U.UNSAFE_componentWillUpdate!="function"&&typeof U.componentWillUpdate!="function"||(typeof U.componentWillUpdate=="function"&&U.componentWillUpdate(g,je,re),typeof U.UNSAFE_componentWillUpdate=="function"&&U.UNSAFE_componentWillUpdate(g,je,re)),typeof U.componentDidUpdate=="function"&&(a.flags|=4),typeof U.getSnapshotBeforeUpdate=="function"&&(a.flags|=1024)):(typeof U.componentDidUpdate!="function"||W===o.memoizedProps&&Qe===o.memoizedState||(a.flags|=4),typeof U.getSnapshotBeforeUpdate!="function"||W===o.memoizedProps&&Qe===o.memoizedState||(a.flags|=1024),a.memoizedProps=g,a.memoizedState=je),U.props=g,U.state=je,U.context=re,g=we):(typeof U.componentDidUpdate!="function"||W===o.memoizedProps&&Qe===o.memoizedState||(a.flags|=4),typeof U.getSnapshotBeforeUpdate!="function"||W===o.memoizedProps&&Qe===o.memoizedState||(a.flags|=1024),g=!1)}return th(o,a,f,g,T,S)}function th(o,a,f,g,S,T){Zp(o,a);var U=(a.flags&128)!==0;if(!g&&!U)return S&&wo(a,f,!1),Xi(o,a,T);g=a.stateNode,Ay.current=a;var W=U&&typeof f.getDerivedStateFromError!="function"?null:g.render();return a.flags|=1,o!==null&&U?(a.child=Rs(a,o.child,null,T),a.child=Rs(a,null,W,T)):Ln(o,a,W,T),a.memoizedState=g.state,S&&wo(a,f,!0),a.child}function Kp(o){var a=o.stateNode;a.pendingContext?Sn(o,a.pendingContext,a.pendingContext!==a.context):a.context&&Sn(o,a.context,!1),Vu(o,a.containerInfo)}function Qp(o,a,f,g,S){return bs(),Hu(S),a.flags|=256,Ln(o,a,f,g),a.child}var _l={dehydrated:null,treeContext:null,retryLane:0};function vl(o){return{baseLanes:o,cachePool:null}}function $p(o,a,f){var g=a.pendingProps,S=Gt.current,T=!1,U=(a.flags&128)!==0,W;if((W=U)||(W=o!==null&&o.memoizedState===null?!1:(S&2)!==0),W?(T=!0,a.flags&=-129):(o===null||o.memoizedState!==null)&&(S|=1),st(Gt,S&1),o===null)return ku(a),o=a.memoizedState,o!==null&&(o=o.dehydrated,o!==null)?((a.mode&1)===0?a.lanes=1:ar(o)?a.lanes=8:a.lanes=1073741824,null):(S=g.children,o=g.fallback,T?(g=a.mode,T=a.child,S={mode:"hidden",children:S},(g&1)===0&&T!==null?(T.childLanes=0,T.pendingProps=S):T=zl(S,g,0,null),o=Wr(o,g,f,null),T.return=a,o.return=a,T.sibling=o,a.child=T,a.child.memoizedState=vl(f),a.memoizedState=_l,o):nh(a,S));if(S=o.memoizedState,S!==null){if(W=S.dehydrated,W!==null){if(U)return a.flags&256?(a.flags&=-257,yl(o,a,f,Error(l(422)))):a.memoizedState!==null?(a.child=o.child,a.flags|=128,null):(T=g.fallback,S=a.mode,g=zl({mode:"visible",children:g.children},S,0,null),T=Wr(T,S,f,null),T.flags|=2,g.return=a,T.return=a,g.sibling=T,a.child=g,(a.mode&1)!==0&&Rs(a,o.child,null,f),a.child.memoizedState=vl(f),a.memoizedState=_l,T);if((a.mode&1)===0)a=yl(o,a,f,null);else if(ar(W))a=yl(o,a,f,Error(l(419)));else if(g=(f&o.childLanes)!==0,Zn||g){if(g=sn,g!==null){switch(f&-f){case 4:T=2;break;case 16:T=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:T=32;break;case 536870912:T=268435456;break;default:T=0}g=(T&(g.suspendedLanes|f))!==0?0:T,g!==0&&g!==S.retryLane&&(S.retryLane=g,oi(o,g,-1))}Mh(),a=yl(o,a,f,Error(l(421)))}else Wa(W)?(a.flags|=128,a.child=o.child,a=By.bind(null,o),Xa(W,a),a=null):(f=S.treeContext,_e&&(jn=Su(W),qn=a,Vt=!0,di=null,bo=!1,f!==null&&(ni[ii++]=Vi,ni[ii++]=Gi,ni[ii++]=Or,Vi=f.id,Gi=f.overflow,Or=a)),a=nh(a,a.pendingProps.children),a.flags|=4096);return a}return T?(g=tm(o,a,g.children,g.fallback,f),T=a.child,S=o.child.memoizedState,T.memoizedState=S===null?vl(f):{baseLanes:S.baseLanes|f,cachePool:null},T.childLanes=o.childLanes&~f,a.memoizedState=_l,g):(f=em(o,a,g.children,f),a.memoizedState=null,f)}return T?(g=tm(o,a,g.children,g.fallback,f),T=a.child,S=o.child.memoizedState,T.memoizedState=S===null?vl(f):{baseLanes:S.baseLanes|f,cachePool:null},T.childLanes=o.childLanes&~f,a.memoizedState=_l,g):(f=em(o,a,g.children,f),a.memoizedState=null,f)}function nh(o,a){return a=zl({mode:"visible",children:a},o.mode,0,null),a.return=o,o.child=a}function em(o,a,f,g){var S=o.child;return o=S.sibling,f=mr(S,{mode:"visible",children:f}),(a.mode&1)===0&&(f.lanes=g),f.return=a,f.sibling=null,o!==null&&(g=a.deletions,g===null?(a.deletions=[o],a.flags|=16):g.push(o)),a.child=f}function tm(o,a,f,g,S){var T=a.mode;o=o.child;var U=o.sibling,W={mode:"hidden",children:f};return(T&1)===0&&a.child!==o?(f=a.child,f.childLanes=0,f.pendingProps=W,a.deletions=null):(f=mr(o,W),f.subtreeFlags=o.subtreeFlags&14680064),U!==null?g=mr(U,g):(g=Wr(g,T,S,null),g.flags|=2),g.return=a,f.return=a,f.sibling=g,a.child=f,g}function yl(o,a,f,g){return g!==null&&Hu(g),Rs(a,o.child,null,f),o=nh(a,a.pendingProps.children),o.flags|=2,a.memoizedState=null,o}function nm(o,a,f){o.lanes|=a;var g=o.alternate;g!==null&&(g.lanes|=a),Du(o.return,a,f)}function ih(o,a,f,g,S){var T=o.memoizedState;T===null?o.memoizedState={isBackwards:a,rendering:null,renderingStartTime:0,last:g,tail:f,tailMode:S}:(T.isBackwards=a,T.rendering=null,T.renderingStartTime=0,T.last=g,T.tail=f,T.tailMode=S)}function im(o,a,f){var g=a.pendingProps,S=g.revealOrder,T=g.tail;if(Ln(o,a,g.children,f),g=Gt.current,(g&2)!==0)g=g&1|2,a.flags|=128;else{if(o!==null&&(o.flags&128)!==0)e:for(o=a.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&nm(o,f,a);else if(o.tag===19)nm(o,f,a);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===a)break e;for(;o.sibling===null;){if(o.return===null||o.return===a)break e;o=o.return}o.sibling.return=o.return,o=o.sibling}g&=1}if(st(Gt,g),(a.mode&1)===0)a.memoizedState=null;else switch(S){case"forwards":for(f=a.child,S=null;f!==null;)o=f.alternate,o!==null&&al(o)===null&&(S=f),f=f.sibling;f=S,f===null?(S=a.child,a.child=null):(S=f.sibling,f.sibling=null),ih(a,!1,S,f,T);break;case"backwards":for(f=null,S=a.child,a.child=null;S!==null;){if(o=S.alternate,o!==null&&al(o)===null){a.child=S;break}o=S.sibling,S.sibling=f,f=S,S=o}ih(a,!0,f,null,T);break;case"together":ih(a,!1,null,null,void 0);break;default:a.memoizedState=null}return a.child}function Xi(o,a,f){if(o!==null&&(a.dependencies=o.dependencies),Ds|=a.lanes,(f&a.childLanes)===0)return null;if(o!==null&&a.child!==o.child)throw Error(l(153));if(a.child!==null){for(o=a.child,f=mr(o,o.pendingProps),a.child=f,f.return=a;o.sibling!==null;)o=o.sibling,f=f.sibling=mr(o,o.pendingProps),f.return=a;f.sibling=null}return a.child}function by(o,a,f){switch(a.tag){case 3:Kp(a),bs();break;case 5:yp(a);break;case 1:qt(a.type)&&Ms(a);break;case 4:Vu(a,a.stateNode.containerInfo);break;case 10:rp(a,a.type._context,a.memoizedProps.value);break;case 13:var g=a.memoizedState;if(g!==null)return g.dehydrated!==null?(st(Gt,Gt.current&1),a.flags|=128,null):(f&a.child.childLanes)!==0?$p(o,a,f):(st(Gt,Gt.current&1),o=Xi(o,a,f),o!==null?o.sibling:null);st(Gt,Gt.current&1);break;case 19:if(g=(f&a.childLanes)!==0,(o.flags&128)!==0){if(g)return im(o,a,f);a.flags|=128}var S=a.memoizedState;if(S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),st(Gt,Gt.current),g)break;return null;case 22:case 23:return a.lanes=0,jp(o,a,f)}return Xi(o,a,f)}function Ry(o,a){switch(zu(a),a.tag){case 1:return qt(a.type)&&lr(),o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 3:return Ps(),Pt(rn),Pt(cn),Xu(),o=a.flags,(o&65536)!==0&&(o&128)===0?(a.flags=o&-65537|128,a):null;case 5:return Gu(a),null;case 13:if(Pt(Gt),o=a.memoizedState,o!==null&&o.dehydrated!==null){if(a.alternate===null)throw Error(l(340));bs()}return o=a.flags,o&65536?(a.flags=o&-65537|128,a):null;case 19:return Pt(Gt),null;case 4:return Ps(),null;case 10:return Iu(a.type._context),null;case 22:case 23:return Sh(),null;case 24:return null;default:return null}}var xl=!1,Br=!1,Cy=typeof WeakSet=="function"?WeakSet:Set,Ie=null;function Sl(o,a){var f=o.ref;if(f!==null)if(typeof f=="function")try{f(null)}catch(g){kn(o,a,g)}else f.current=null}function rh(o,a,f){try{f()}catch(g){kn(o,a,g)}}var rm=!1;function Py(o,a){for(q(o.containerInfo),Ie=a;Ie!==null;)if(o=Ie,a=o.child,(o.subtreeFlags&1028)!==0&&a!==null)a.return=o,Ie=a;else for(;Ie!==null;){o=Ie;try{var f=o.alternate;if((o.flags&1024)!==0)switch(o.tag){case 0:case 11:case 15:break;case 1:if(f!==null){var g=f.memoizedProps,S=f.memoizedState,T=o.stateNode,U=T.getSnapshotBeforeUpdate(o.elementType===o.type?g:fi(o.type,g),S);T.__reactInternalSnapshotBeforeUpdate=U}break;case 3:Ve&&Ce(o.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(l(163))}}catch(W){kn(o,o.return,W)}if(a=o.sibling,a!==null){a.return=o.return,Ie=a;break}Ie=o.return}return f=rm,rm=!1,f}function kr(o,a,f){var g=a.updateQueue;if(g=g!==null?g.lastEffect:null,g!==null){var S=g=g.next;do{if((S.tag&o)===o){var T=S.destroy;S.destroy=void 0,T!==void 0&&rh(a,f,T)}S=S.next}while(S!==g)}}function Bo(o,a){if(a=a.updateQueue,a=a!==null?a.lastEffect:null,a!==null){var f=a=a.next;do{if((f.tag&o)===o){var g=f.create;f.destroy=g()}f=f.next}while(f!==a)}}function sh(o){var a=o.ref;if(a!==null){var f=o.stateNode;switch(o.tag){case 5:o=oe(f);break;default:o=f}typeof a=="function"?a(o):a.current=o}}function sm(o,a,f){if(Ei&&typeof Ei.onCommitFiberUnmount=="function")try{Ei.onCommitFiberUnmount(Ja,a)}catch{}switch(a.tag){case 0:case 11:case 14:case 15:if(o=a.updateQueue,o!==null&&(o=o.lastEffect,o!==null)){var g=o=o.next;do{var S=g,T=S.destroy;S=S.tag,T!==void 0&&((S&2)!==0||(S&4)!==0)&&rh(a,f,T),g=g.next}while(g!==o)}break;case 1:if(Sl(a,f),o=a.stateNode,typeof o.componentWillUnmount=="function")try{o.props=a.memoizedProps,o.state=a.memoizedState,o.componentWillUnmount()}catch(U){kn(a,f,U)}break;case 5:Sl(a,f);break;case 4:Ve?hm(o,a,f):B&&B&&(a=a.stateNode.containerInfo,f=pe(a),Ht(a,f))}}function om(o,a,f){for(var g=a;;)if(sm(o,g,f),g.child===null||Ve&&g.tag===4){if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return}g.sibling.return=g.return,g=g.sibling}else g.child.return=g,g=g.child}function am(o){var a=o.alternate;a!==null&&(o.alternate=null,am(a)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(a=o.stateNode,a!==null&&Xe(a)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}function lm(o){return o.tag===5||o.tag===3||o.tag===4}function cm(o){e:for(;;){for(;o.sibling===null;){if(o.return===null||lm(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.flags&2||o.child===null||o.tag===4)continue e;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function um(o){if(Ve){e:{for(var a=o.return;a!==null;){if(lm(a))break e;a=a.return}throw Error(l(160))}var f=a;switch(f.tag){case 5:a=f.stateNode,f.flags&32&&(ae(a),f.flags&=-33),f=cm(o),ah(o,f,a);break;case 3:case 4:a=f.stateNode.containerInfo,f=cm(o),oh(o,f,a);break;default:throw Error(l(161))}}}function oh(o,a,f){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?Me(f,o,a):Ge(f,o);else if(g!==4&&(o=o.child,o!==null))for(oh(o,a,f),o=o.sibling;o!==null;)oh(o,a,f),o=o.sibling}function ah(o,a,f){var g=o.tag;if(g===5||g===6)o=o.stateNode,a?St(f,o,a):xe(f,o);else if(g!==4&&(o=o.child,o!==null))for(ah(o,a,f),o=o.sibling;o!==null;)ah(o,a,f),o=o.sibling}function hm(o,a,f){for(var g=a,S=!1,T,U;;){if(!S){S=g.return;e:for(;;){if(S===null)throw Error(l(160));switch(T=S.stateNode,S.tag){case 5:U=!1;break e;case 3:T=T.containerInfo,U=!0;break e;case 4:T=T.containerInfo,U=!0;break e}S=S.return}S=!0}if(g.tag===5||g.tag===6)om(o,g,f),U?V(T,g.stateNode):Mt(T,g.stateNode);else if(g.tag===18)U?Ke(T,g.stateNode):ze(T,g.stateNode);else if(g.tag===4){if(g.child!==null){T=g.stateNode.containerInfo,U=!0,g.child.return=g,g=g.child;continue}}else if(sm(o,g,f),g.child!==null){g.child.return=g,g=g.child;continue}if(g===a)break;for(;g.sibling===null;){if(g.return===null||g.return===a)return;g=g.return,g.tag===4&&(S=!1)}g.sibling.return=g.return,g=g.sibling}}function lh(o,a){if(Ve){switch(a.tag){case 0:case 11:case 14:case 15:kr(3,a,a.return),Bo(3,a),kr(5,a,a.return);return;case 1:return;case 5:var f=a.stateNode;if(f!=null){var g=a.memoizedProps;o=o!==null?o.memoizedProps:g;var S=a.type,T=a.updateQueue;a.updateQueue=null,T!==null&&nt(f,T,S,o,g,a)}return;case 6:if(a.stateNode===null)throw Error(l(162));f=a.memoizedProps,Ae(a.stateNode,o!==null?o.memoizedProps:f,f);return;case 3:_e&&o!==null&&o.memoizedState.isDehydrated&&K(a.stateNode.containerInfo);return;case 12:return;case 13:Ml(a);return;case 19:Ml(a);return;case 17:return}throw Error(l(163))}switch(a.tag){case 0:case 11:case 14:case 15:kr(3,a,a.return),Bo(3,a),kr(5,a,a.return);return;case 12:return;case 13:Ml(a);return;case 19:Ml(a);return;case 3:_e&&o!==null&&o.memoizedState.isDehydrated&&K(a.stateNode.containerInfo);break;case 22:case 23:return}e:if(B){switch(a.tag){case 1:case 5:case 6:break e;case 3:case 4:a=a.stateNode,Ht(a.containerInfo,a.pendingChildren);break e}throw Error(l(163))}}function Ml(o){var a=o.updateQueue;if(a!==null){o.updateQueue=null;var f=o.stateNode;f===null&&(f=o.stateNode=new Cy),a.forEach(function(g){var S=ky.bind(null,o,g);f.has(g)||(f.add(g),g.then(S,S))})}}function Ly(o,a){for(Ie=a;Ie!==null;){a=Ie;var f=a.deletions;if(f!==null)for(var g=0;g<f.length;g++){var S=f[g];try{var T=o;Ve?hm(T,S,a):om(T,S,a);var U=S.alternate;U!==null&&(U.return=null),S.return=null}catch(qe){kn(S,a,qe)}}if(f=a.child,(a.subtreeFlags&12854)!==0&&f!==null)f.return=a,Ie=f;else for(;Ie!==null;){a=Ie;try{var W=a.flags;if(W&32&&Ve&&ae(a.stateNode),W&512){var re=a.alternate;if(re!==null){var we=re.ref;we!==null&&(typeof we=="function"?we(null):we.current=null)}}if(W&8192)switch(a.tag){case 13:if(a.memoizedState!==null){var Be=a.alternate;(Be===null||Be.memoizedState===null)&&(mh=pn())}break;case 22:var lt=a.memoizedState!==null,Qe=a.alternate,Ut=Qe!==null&&Qe.memoizedState!==null;if(f=a,Ve){e:if(g=f,S=lt,T=null,Ve)for(var je=g;;){if(je.tag===5){if(T===null){T=je;var Tn=je.stateNode;S?ve(Tn):me(je.stateNode,je.memoizedProps)}}else if(je.tag===6){if(T===null){var li=je.stateNode;S?F(li):ye(li,je.memoizedProps)}}else if((je.tag!==22&&je.tag!==23||je.memoizedState===null||je===g)&&je.child!==null){je.child.return=je,je=je.child;continue}if(je===g)break;for(;je.sibling===null;){if(je.return===null||je.return===g)break e;T===je&&(T=null),je=je.return}T===je&&(T=null),je.sibling.return=je.return,je=je.sibling}}if(lt&&!Ut&&(f.mode&1)!==0){Ie=f;for(var J=f.child;J!==null;){for(f=Ie=J;Ie!==null;){g=Ie;var X=g.child;switch(g.tag){case 0:case 11:case 14:case 15:kr(4,g,g.return);break;case 1:Sl(g,g.return);var ne=g.stateNode;if(typeof ne.componentWillUnmount=="function"){var De=g.return;try{ne.props=g.memoizedProps,ne.state=g.memoizedState,ne.componentWillUnmount()}catch(qe){kn(g,De,qe)}}break;case 5:Sl(g,g.return);break;case 22:if(g.memoizedState!==null){pm(f);continue}}X!==null?(X.return=g,Ie=X):pm(f)}J=J.sibling}}}switch(W&4102){case 2:um(a),a.flags&=-3;break;case 6:um(a),a.flags&=-3,lh(a.alternate,a);break;case 4096:a.flags&=-4097;break;case 4100:a.flags&=-4097,lh(a.alternate,a);break;case 4:lh(a.alternate,a)}}catch(qe){kn(a,a.return,qe)}if(f=a.sibling,f!==null){f.return=a.return,Ie=f;break}Ie=a.return}}}function Iy(o,a,f){Ie=o,fm(o)}function fm(o,a,f){for(var g=(o.mode&1)!==0;Ie!==null;){var S=Ie,T=S.child;if(S.tag===22&&g){var U=S.memoizedState!==null||xl;if(!U){var W=S.alternate,re=W!==null&&W.memoizedState!==null||Br;W=xl;var we=Br;if(xl=U,(Br=re)&&!we)for(Ie=S;Ie!==null;)U=Ie,re=U.child,U.tag===22&&U.memoizedState!==null?mm(S):re!==null?(re.return=U,Ie=re):mm(S);for(;T!==null;)Ie=T,fm(T),T=T.sibling;Ie=S,xl=W,Br=we}dm(o)}else(S.subtreeFlags&8772)!==0&&T!==null?(T.return=S,Ie=T):dm(o)}}function dm(o){for(;Ie!==null;){var a=Ie;if((a.flags&8772)!==0){var f=a.alternate;try{if((a.flags&8772)!==0)switch(a.tag){case 0:case 11:case 15:Br||Bo(5,a);break;case 1:var g=a.stateNode;if(a.flags&4&&!Br)if(f===null)g.componentDidMount();else{var S=a.elementType===a.type?f.memoizedProps:fi(a.type,f.memoizedProps);g.componentDidUpdate(S,f.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}var T=a.updateQueue;T!==null&&ap(a,T,g);break;case 3:var U=a.updateQueue;if(U!==null){if(f=null,a.child!==null)switch(a.child.tag){case 5:f=oe(a.child.stateNode);break;case 1:f=a.child.stateNode}ap(a,U,f)}break;case 5:var W=a.stateNode;f===null&&a.flags&4&&Pe(W,a.type,a.memoizedProps,a);break;case 6:break;case 4:break;case 12:break;case 13:if(_e&&a.memoizedState===null){var re=a.alternate;if(re!==null){var we=re.memoizedState;if(we!==null){var Be=we.dehydrated;Be!==null&&ce(Be)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(l(163))}Br||a.flags&512&&sh(a)}catch(lt){kn(a,a.return,lt)}}if(a===o){Ie=null;break}if(f=a.sibling,f!==null){f.return=a.return,Ie=f;break}Ie=a.return}}function pm(o){for(;Ie!==null;){var a=Ie;if(a===o){Ie=null;break}var f=a.sibling;if(f!==null){f.return=a.return,Ie=f;break}Ie=a.return}}function mm(o){for(;Ie!==null;){var a=Ie;try{switch(a.tag){case 0:case 11:case 15:var f=a.return;try{Bo(4,a)}catch(re){kn(a,f,re)}break;case 1:var g=a.stateNode;if(typeof g.componentDidMount=="function"){var S=a.return;try{g.componentDidMount()}catch(re){kn(a,S,re)}}var T=a.return;try{sh(a)}catch(re){kn(a,T,re)}break;case 5:var U=a.return;try{sh(a)}catch(re){kn(a,U,re)}}}catch(re){kn(a,a.return,re)}if(a===o){Ie=null;break}var W=a.sibling;if(W!==null){W.return=a.return,Ie=W;break}Ie=a.return}}var El=0,wl=1,Tl=2,Al=3,bl=4;if(typeof Symbol=="function"&&Symbol.for){var ko=Symbol.for;El=ko("selector.component"),wl=ko("selector.has_pseudo_class"),Tl=ko("selector.role"),Al=ko("selector.test_id"),bl=ko("selector.text")}function ch(o){var a=he(o);if(a!=null){if(typeof a.memoizedProps["data-testname"]!="string")throw Error(l(364));return a}if(o=mt(o),o===null)throw Error(l(362));return o.stateNode.current}function uh(o,a){switch(a.$$typeof){case El:if(o.type===a.value)return!0;break;case wl:e:{a=a.value,o=[o,0];for(var f=0;f<o.length;){var g=o[f++],S=o[f++],T=a[S];if(g.tag!==5||!P(g)){for(;T!=null&&uh(g,T);)S++,T=a[S];if(S===a.length){a=!0;break e}else for(g=g.child;g!==null;)o.push(g,S),g=g.sibling}}a=!1}return a;case Tl:if(o.tag===5&&ee(o.stateNode,a.value))return!0;break;case bl:if((o.tag===5||o.tag===6)&&(o=O(o),o!==null&&0<=o.indexOf(a.value)))return!0;break;case Al:if(o.tag===5&&(o=o.memoizedProps["data-testname"],typeof o=="string"&&o.toLowerCase()===a.value.toLowerCase()))return!0;break;default:throw Error(l(365))}return!1}function hh(o){switch(o.$$typeof){case El:return"<"+(I(o.value)||"Unknown")+">";case wl:return":has("+(hh(o)||"")+")";case Tl:return'[role="'+o.value+'"]';case bl:return'"'+o.value+'"';case Al:return'[data-testname="'+o.value+'"]';default:throw Error(l(365))}}function gm(o,a){var f=[];o=[o,0];for(var g=0;g<o.length;){var S=o[g++],T=o[g++],U=a[T];if(S.tag!==5||!P(S)){for(;U!=null&&uh(S,U);)T++,U=a[T];if(T===a.length)f.push(S);else for(S=S.child;S!==null;)o.push(S,T),S=S.sibling}}return f}function fh(o,a){if(!et)throw Error(l(363));o=ch(o),o=gm(o,a),a=[],o=Array.from(o);for(var f=0;f<o.length;){var g=o[f++];if(g.tag===5)P(g)||a.push(g.stateNode);else for(g=g.child;g!==null;)o.push(g),g=g.sibling}return a}var Dy=Math.ceil,Rl=c.ReactCurrentDispatcher,dh=c.ReactCurrentOwner,Kt=c.ReactCurrentBatchConfig,_t=0,sn=null,on=null,vn=0,Jn=0,Is=at(0),un=0,Ho=null,Ds=0,Cl=0,ph=0,Vo=null,zn=null,mh=0,gh=1/0;function Ns(){gh=pn()+500}var Pl=!1,_h=null,hr=null,Ll=!1,fr=null,Il=0,Go=0,vh=null,Dl=-1,Nl=0;function In(){return(_t&6)!==0?pn():Dl!==-1?Dl:Dl=pn()}function dr(o){return(o.mode&1)===0?1:(_t&2)!==0&&vn!==0?vn&-vn:my.transition!==null?(Nl===0&&(o=qa,qa<<=1,(qa&4194240)===0&&(qa=64),Nl=o),Nl):(o=Tt,o!==0?o:de())}function oi(o,a,f){if(50<Go)throw Go=0,vh=null,Error(l(185));var g=Ul(o,a);return g===null?null:(Ao(g,a,f),((_t&2)===0||g!==sn)&&(g===sn&&((_t&2)===0&&(Cl|=a),un===4&&pr(g,vn)),Bn(g,f),a===1&&_t===0&&(o.mode&1)===0&&(Ns(),Ka&&Ti())),g)}function Ul(o,a){o.lanes|=a;var f=o.alternate;for(f!==null&&(f.lanes|=a),f=o,o=o.return;o!==null;)o.childLanes|=a,f=o.alternate,f!==null&&(f.childLanes|=a),f=o,o=o.return;return f.tag===3?f.stateNode:null}function Bn(o,a){var f=o.callbackNode;oy(o,a);var g=Za(o,o===sn?vn:0);if(g===0)f!==null&&np(f),o.callbackNode=null,o.callbackPriority=0;else if(a=g&-g,o.callbackPriority!==a){if(f!=null&&np(f),a===1)o.tag===0?py(vm.bind(null,o)):ip(vm.bind(null,o)),Ne?Oe(function(){_t===0&&Ti()}):Au(bu,Ti),f=null;else{switch(tp(g)){case 1:f=bu;break;case 4:f=uy;break;case 16:f=Ru;break;case 536870912:f=hy;break;default:f=Ru}f=bm(f,_m.bind(null,o))}o.callbackPriority=a,o.callbackNode=f}}function _m(o,a){if(Dl=-1,Nl=0,(_t&6)!==0)throw Error(l(327));var f=o.callbackNode;if(Gr()&&o.callbackNode!==f)return null;var g=Za(o,o===sn?vn:0);if(g===0)return null;if((g&30)!==0||(g&o.expiredLanes)!==0||a)a=Ol(o,g);else{a=g;var S=_t;_t|=2;var T=Sm();(sn!==o||vn!==a)&&(Ns(),Hr(o,a));do try{Oy();break}catch(W){xm(o,W)}while(!0);Lu(),Rl.current=T,_t=S,on!==null?a=0:(sn=null,vn=0,a=un)}if(a!==0){if(a===2&&(S=Eu(o),S!==0&&(g=S,a=yh(o,S))),a===1)throw f=Ho,Hr(o,0),pr(o,g),Bn(o,pn()),f;if(a===6)pr(o,g);else{if(S=o.current.alternate,(g&30)===0&&!Ny(S)&&(a=Ol(o,g),a===2&&(T=Eu(o),T!==0&&(g=T,a=yh(o,T))),a===1))throw f=Ho,Hr(o,0),pr(o,g),Bn(o,pn()),f;switch(o.finishedWork=S,o.finishedLanes=g,a){case 0:case 1:throw Error(l(345));case 2:Vr(o,zn);break;case 3:if(pr(o,g),(g&130023424)===g&&(a=mh+500-pn(),10<a)){if(Za(o,0)!==0)break;if(S=o.suspendedLanes,(S&g)!==g){In(),o.pingedLanes|=o.suspendedLanes&S;break}o.timeoutHandle=He(Vr.bind(null,o,zn),a);break}Vr(o,zn);break;case 4:if(pr(o,g),(g&4194240)===g)break;for(a=o.eventTimes,S=-1;0<g;){var U=31-hi(g);T=1<<U,U=a[U],U>S&&(S=U),g&=~T}if(g=S,g=pn()-g,g=(120>g?120:480>g?480:1080>g?1080:1920>g?1920:3e3>g?3e3:4320>g?4320:1960*Dy(g/1960))-g,10<g){o.timeoutHandle=He(Vr.bind(null,o,zn),g);break}Vr(o,zn);break;case 5:Vr(o,zn);break;default:throw Error(l(329))}}}return Bn(o,pn()),o.callbackNode===f?_m.bind(null,o):null}function yh(o,a){var f=Vo;return o.current.memoizedState.isDehydrated&&(Hr(o,a).flags|=256),o=Ol(o,a),o!==2&&(a=zn,zn=f,a!==null&&xh(a)),o}function xh(o){zn===null?zn=o:zn.push.apply(zn,o)}function Ny(o){for(var a=o;;){if(a.flags&16384){var f=a.updateQueue;if(f!==null&&(f=f.stores,f!==null))for(var g=0;g<f.length;g++){var S=f[g],T=S.getSnapshot;S=S.value;try{if(!wi(T(),S))return!1}catch{return!1}}}if(f=a.child,a.subtreeFlags&16384&&f!==null)f.return=a,a=f;else{if(a===o)break;for(;a.sibling===null;){if(a.return===null||a.return===o)return!0;a=a.return}a.sibling.return=a.return,a=a.sibling}}return!0}function pr(o,a){for(a&=~ph,a&=~Cl,o.suspendedLanes|=a,o.pingedLanes&=~a,o=o.expirationTimes;0<a;){var f=31-hi(a),g=1<<f;o[f]=-1,a&=~g}}function vm(o){if((_t&6)!==0)throw Error(l(327));Gr();var a=Za(o,0);if((a&1)===0)return Bn(o,pn()),null;var f=Ol(o,a);if(o.tag!==0&&f===2){var g=Eu(o);g!==0&&(a=g,f=yh(o,g))}if(f===1)throw f=Ho,Hr(o,0),pr(o,a),Bn(o,pn()),f;if(f===6)throw Error(l(345));return o.finishedWork=o.current.alternate,o.finishedLanes=a,Vr(o,zn),Bn(o,pn()),null}function ym(o){fr!==null&&fr.tag===0&&(_t&6)===0&&Gr();var a=_t;_t|=1;var f=Kt.transition,g=Tt;try{if(Kt.transition=null,Tt=1,o)return o()}finally{Tt=g,Kt.transition=f,_t=a,(_t&6)===0&&Ti()}}function Sh(){Jn=Is.current,Pt(Is)}function Hr(o,a){o.finishedWork=null,o.finishedLanes=0;var f=o.timeoutHandle;if(f!==yt&&(o.timeoutHandle=yt,Ze(f)),on!==null)for(f=on.return;f!==null;){var g=f;switch(zu(g),g.tag){case 1:g=g.type.childContextTypes,g!=null&&lr();break;case 3:Ps(),Pt(rn),Pt(cn),Xu();break;case 5:Gu(g);break;case 4:Ps();break;case 13:Pt(Gt);break;case 19:Pt(Gt);break;case 10:Iu(g.type._context);break;case 22:case 23:Sh()}f=f.return}if(sn=o,on=o=mr(o.current,null),vn=Jn=a,un=0,Ho=null,ph=Cl=Ds=0,zn=Vo=null,Ai!==null){for(a=0;a<Ai.length;a++)if(f=Ai[a],g=f.interleaved,g!==null){f.interleaved=null;var S=g.next,T=f.pending;if(T!==null){var U=T.next;T.next=S,g.next=U}f.pending=g}Ai=null}return o}function xm(o,a){do{var f=on;try{if(Lu(),ll.current=pl,cl){for(var g=jt.memoizedState;g!==null;){var S=g.queue;S!==null&&(S.pending=null),g=g.next}cl=!1}if(Ls=0,mn=Mn=jt=null,Io=!1,Do=0,dh.current=null,f===null||f.return===null){un=1,Ho=a,on=null;break}e:{var T=o,U=f.return,W=f,re=a;if(a=vn,W.flags|=32768,re!==null&&typeof re=="object"&&typeof re.then=="function"){var we=re,Be=W,lt=Be.tag;if((Be.mode&1)===0&&(lt===0||lt===11||lt===15)){var Qe=Be.alternate;Qe?(Be.updateQueue=Qe.updateQueue,Be.memoizedState=Qe.memoizedState,Be.lanes=Qe.lanes):(Be.updateQueue=null,Be.memoizedState=null)}var Ut=Hp(U);if(Ut!==null){Ut.flags&=-257,Vp(Ut,U,W,T,a),Ut.mode&1&&kp(T,we,a),a=Ut,re=we;var je=a.updateQueue;if(je===null){var Tn=new Set;Tn.add(re),a.updateQueue=Tn}else je.add(re);break e}else{if((a&1)===0){kp(T,we,a),Mh();break e}re=Error(l(426))}}else if(Vt&&W.mode&1){var li=Hp(U);if(li!==null){(li.flags&65536)===0&&(li.flags|=256),Vp(li,U,W,T,a),Hu(re);break e}}T=re,un!==4&&(un=2),Vo===null?Vo=[T]:Vo.push(T),re=Qu(re,W),W=U;do{switch(W.tag){case 3:W.flags|=65536,a&=-a,W.lanes|=a;var J=zp(W,re,a);op(W,J);break e;case 1:T=re;var X=W.type,ne=W.stateNode;if((W.flags&128)===0&&(typeof X.getDerivedStateFromError=="function"||ne!==null&&typeof ne.componentDidCatch=="function"&&(hr===null||!hr.has(ne)))){W.flags|=65536,a&=-a,W.lanes|=a;var De=Bp(W,T,a);op(W,De);break e}}W=W.return}while(W!==null)}Em(f)}catch(qe){a=qe,on===f&&f!==null&&(on=f=f.return);continue}break}while(!0)}function Sm(){var o=Rl.current;return Rl.current=pl,o===null?pl:o}function Mh(){(un===0||un===3||un===2)&&(un=4),sn===null||(Ds&268435455)===0&&(Cl&268435455)===0||pr(sn,vn)}function Ol(o,a){var f=_t;_t|=2;var g=Sm();sn===o&&vn===a||Hr(o,a);do try{Uy();break}catch(S){xm(o,S)}while(!0);if(Lu(),_t=f,Rl.current=g,on!==null)throw Error(l(261));return sn=null,vn=0,un}function Uy(){for(;on!==null;)Mm(on)}function Oy(){for(;on!==null&&!ly();)Mm(on)}function Mm(o){var a=Am(o.alternate,o,Jn);o.memoizedProps=o.pendingProps,a===null?Em(o):on=a,dh.current=null}function Em(o){var a=o;do{var f=a.alternate;if(o=a.return,(a.flags&32768)===0){if(f=Ty(f,a,Jn),f!==null){on=f;return}}else{if(f=Ry(f,a),f!==null){f.flags&=32767,on=f;return}if(o!==null)o.flags|=32768,o.subtreeFlags=0,o.deletions=null;else{un=6,on=null;return}}if(a=a.sibling,a!==null){on=a;return}on=a=o}while(a!==null);un===0&&(un=5)}function Vr(o,a){var f=Tt,g=Kt.transition;try{Kt.transition=null,Tt=1,Fy(o,a,f)}finally{Kt.transition=g,Tt=f}return null}function Fy(o,a,f){do Gr();while(fr!==null);if((_t&6)!==0)throw Error(l(327));var g=o.finishedWork,S=o.finishedLanes;if(g===null)return null;if(o.finishedWork=null,o.finishedLanes=0,g===o.current)throw Error(l(177));o.callbackNode=null,o.callbackPriority=0;var T=g.lanes|g.childLanes;if(ay(o,T),o===sn&&(on=sn=null,vn=0),(g.subtreeFlags&2064)===0&&(g.flags&2064)===0||Ll||(Ll=!0,bm(Ru,function(){return Gr(),null})),T=(g.flags&15990)!==0,(g.subtreeFlags&15990)!==0||T){T=Kt.transition,Kt.transition=null;var U=Tt;Tt=1;var W=_t;_t|=4,dh.current=null,Py(o,g),Ly(o,g),j(o.containerInfo),o.current=g,Iy(g),cy(),_t=W,Tt=U,Kt.transition=T}else o.current=g;if(Ll&&(Ll=!1,fr=o,Il=S),T=o.pendingLanes,T===0&&(hr=null),fy(g.stateNode),Bn(o,pn()),a!==null)for(f=o.onRecoverableError,g=0;g<a.length;g++)f(a[g]);if(Pl)throw Pl=!1,o=_h,_h=null,o;return(Il&1)!==0&&o.tag!==0&&Gr(),T=o.pendingLanes,(T&1)!==0?o===vh?Go++:(Go=0,vh=o):Go=0,Ti(),null}function Gr(){if(fr!==null){var o=tp(Il),a=Kt.transition,f=Tt;try{if(Kt.transition=null,Tt=16>o?16:o,fr===null)var g=!1;else{if(o=fr,fr=null,Il=0,(_t&6)!==0)throw Error(l(331));var S=_t;for(_t|=4,Ie=o.current;Ie!==null;){var T=Ie,U=T.child;if((Ie.flags&16)!==0){var W=T.deletions;if(W!==null){for(var re=0;re<W.length;re++){var we=W[re];for(Ie=we;Ie!==null;){var Be=Ie;switch(Be.tag){case 0:case 11:case 15:kr(8,Be,T)}var lt=Be.child;if(lt!==null)lt.return=Be,Ie=lt;else for(;Ie!==null;){Be=Ie;var Qe=Be.sibling,Ut=Be.return;if(am(Be),Be===we){Ie=null;break}if(Qe!==null){Qe.return=Ut,Ie=Qe;break}Ie=Ut}}}var je=T.alternate;if(je!==null){var Tn=je.child;if(Tn!==null){je.child=null;do{var li=Tn.sibling;Tn.sibling=null,Tn=li}while(Tn!==null)}}Ie=T}}if((T.subtreeFlags&2064)!==0&&U!==null)U.return=T,Ie=U;else e:for(;Ie!==null;){if(T=Ie,(T.flags&2048)!==0)switch(T.tag){case 0:case 11:case 15:kr(9,T,T.return)}var J=T.sibling;if(J!==null){J.return=T.return,Ie=J;break e}Ie=T.return}}var X=o.current;for(Ie=X;Ie!==null;){U=Ie;var ne=U.child;if((U.subtreeFlags&2064)!==0&&ne!==null)ne.return=U,Ie=ne;else e:for(U=X;Ie!==null;){if(W=Ie,(W.flags&2048)!==0)try{switch(W.tag){case 0:case 11:case 15:Bo(9,W)}}catch(qe){kn(W,W.return,qe)}if(W===U){Ie=null;break e}var De=W.sibling;if(De!==null){De.return=W.return,Ie=De;break e}Ie=W.return}}if(_t=S,Ti(),Ei&&typeof Ei.onPostCommitFiberRoot=="function")try{Ei.onPostCommitFiberRoot(Ja,o)}catch{}g=!0}return g}finally{Tt=f,Kt.transition=a}}return!1}function wm(o,a,f){a=Qu(f,a),a=zp(o,a,1),ur(o,a),a=In(),o=Ul(o,1),o!==null&&(Ao(o,1,a),Bn(o,a))}function kn(o,a,f){if(o.tag===3)wm(o,o,f);else for(;a!==null;){if(a.tag===3){wm(a,o,f);break}else if(a.tag===1){var g=a.stateNode;if(typeof a.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(hr===null||!hr.has(g))){o=Qu(f,o),o=Bp(a,o,1),ur(a,o),o=In(),a=Ul(a,1),a!==null&&(Ao(a,1,o),Bn(a,o));break}}a=a.return}}function zy(o,a,f){var g=o.pingCache;g!==null&&g.delete(a),a=In(),o.pingedLanes|=o.suspendedLanes&f,sn===o&&(vn&f)===f&&(un===4||un===3&&(vn&130023424)===vn&&500>pn()-mh?Hr(o,0):ph|=f),Bn(o,a)}function Tm(o,a){a===0&&((o.mode&1)===0?a=1:(a=ja,ja<<=1,(ja&130023424)===0&&(ja=4194304)));var f=In();o=Ul(o,a),o!==null&&(Ao(o,a,f),Bn(o,f))}function By(o){var a=o.memoizedState,f=0;a!==null&&(f=a.retryLane),Tm(o,f)}function ky(o,a){var f=0;switch(o.tag){case 13:var g=o.stateNode,S=o.memoizedState;S!==null&&(f=S.retryLane);break;case 19:g=o.stateNode;break;default:throw Error(l(314))}g!==null&&g.delete(a),Tm(o,f)}var Am;Am=function(o,a,f){if(o!==null)if(o.memoizedProps!==a.pendingProps||rn.current)Zn=!0;else{if((o.lanes&f)===0&&(a.flags&128)===0)return Zn=!1,by(o,a,f);Zn=(o.flags&131072)!==0}else Zn=!1,Vt&&(a.flags&1048576)!==0&&fp(a,sl,a.index);switch(a.lanes=0,a.tag){case 2:var g=a.type;o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps;var S=Yt(a,cn.current);ws(a,f),S=qu(null,a,g,o,S,f);var T=ju();return a.flags|=1,typeof S=="object"&&S!==null&&typeof S.render=="function"&&S.$$typeof===void 0?(a.tag=1,a.memoizedState=null,a.updateQueue=null,qt(g)?(T=!0,Ms(a)):T=!1,a.memoizedState=S.state!==null&&S.state!==void 0?S.state:null,Nu(a),S.updater=il,a.stateNode=S,S._reactInternals=a,Ou(a,g,o,f),a=th(null,a,g,!0,T,f)):(a.tag=0,Vt&&T&&Fu(a),Ln(null,a,S,f),a=a.child),a;case 16:g=a.elementType;e:{switch(o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),o=a.pendingProps,S=g._init,g=S(g._payload),a.type=g,S=a.tag=Vy(g),o=fi(g,o),S){case 0:a=eh(null,a,g,o,f);break e;case 1:a=Jp(null,a,g,o,f);break e;case 11:a=Xp(null,a,g,o,f);break e;case 14:a=Yp(null,a,g,fi(g.type,o),f);break e}throw Error(l(306,g,""))}return a;case 0:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:fi(g,S),eh(o,a,g,S,f);case 1:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:fi(g,S),Jp(o,a,g,S,f);case 3:e:{if(Kp(a),o===null)throw Error(l(387));g=a.pendingProps,T=a.memoizedState,S=T.element,sp(o,a),nl(a,g,null,f);var U=a.memoizedState;if(g=U.element,_e&&T.isDehydrated)if(T={element:g,isDehydrated:!1,cache:U.cache,transitions:U.transitions},a.updateQueue.baseState=T,a.memoizedState=T,a.flags&256){S=Error(l(423)),a=Qp(o,a,g,f,S);break e}else if(g!==S){S=Error(l(424)),a=Qp(o,a,g,f,S);break e}else for(_e&&(jn=xu(a.stateNode.containerInfo),qn=a,Vt=!0,di=null,bo=!1),f=vp(a,null,g,f),a.child=f;f;)f.flags=f.flags&-3|4096,f=f.sibling;else{if(bs(),g===S){a=Xi(o,a,f);break e}Ln(o,a,g,f)}a=a.child}return a;case 5:return yp(a),o===null&&ku(a),g=a.type,S=a.pendingProps,T=o!==null?o.memoizedProps:null,U=S.children,be(g,S)?U=null:T!==null&&be(g,T)&&(a.flags|=32),Zp(o,a),Ln(o,a,U,f),a.child;case 6:return o===null&&ku(a),null;case 13:return $p(o,a,f);case 4:return Vu(a,a.stateNode.containerInfo),g=a.pendingProps,o===null?a.child=Rs(a,null,g,f):Ln(o,a,g,f),a.child;case 11:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:fi(g,S),Xp(o,a,g,S,f);case 7:return Ln(o,a,a.pendingProps,f),a.child;case 8:return Ln(o,a,a.pendingProps.children,f),a.child;case 12:return Ln(o,a,a.pendingProps.children,f),a.child;case 10:e:{if(g=a.type._context,S=a.pendingProps,T=a.memoizedProps,U=S.value,rp(a,g,U),T!==null)if(wi(T.value,U)){if(T.children===S.children&&!rn.current){a=Xi(o,a,f);break e}}else for(T=a.child,T!==null&&(T.return=a);T!==null;){var W=T.dependencies;if(W!==null){U=T.child;for(var re=W.firstContext;re!==null;){if(re.context===g){if(T.tag===1){re=Hi(-1,f&-f),re.tag=2;var we=T.updateQueue;if(we!==null){we=we.shared;var Be=we.pending;Be===null?re.next=re:(re.next=Be.next,Be.next=re),we.pending=re}}T.lanes|=f,re=T.alternate,re!==null&&(re.lanes|=f),Du(T.return,f,a),W.lanes|=f;break}re=re.next}}else if(T.tag===10)U=T.type===a.type?null:T.child;else if(T.tag===18){if(U=T.return,U===null)throw Error(l(341));U.lanes|=f,W=U.alternate,W!==null&&(W.lanes|=f),Du(U,f,a),U=T.sibling}else U=T.child;if(U!==null)U.return=T;else for(U=T;U!==null;){if(U===a){U=null;break}if(T=U.sibling,T!==null){T.return=U.return,U=T;break}U=U.return}T=U}Ln(o,a,S.children,f),a=a.child}return a;case 9:return S=a.type,g=a.pendingProps.children,ws(a,f),S=ti(S),g=g(S),a.flags|=1,Ln(o,a,g,f),a.child;case 14:return g=a.type,S=fi(g,a.pendingProps),S=fi(g.type,S),Yp(o,a,g,S,f);case 15:return qp(o,a,a.type,a.pendingProps,f);case 17:return g=a.type,S=a.pendingProps,S=a.elementType===g?S:fi(g,S),o!==null&&(o.alternate=null,a.alternate=null,a.flags|=2),a.tag=1,qt(g)?(o=!0,Ms(a)):o=!1,ws(a,f),up(a,g,S),Ou(a,g,S,f),th(null,a,g,!0,o,f);case 19:return im(o,a,f);case 22:return jp(o,a,f)}throw Error(l(156,a.tag))};function bm(o,a){return Au(o,a)}function Hy(o,a,f,g){this.tag=o,this.key=f,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=a,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function ai(o,a,f,g){return new Hy(o,a,f,g)}function Eh(o){return o=o.prototype,!(!o||!o.isReactComponent)}function Vy(o){if(typeof o=="function")return Eh(o)?1:0;if(o!=null){if(o=o.$$typeof,o===E)return 11;if(o===w)return 14}return 2}function mr(o,a){var f=o.alternate;return f===null?(f=ai(o.tag,a,o.key,o.mode),f.elementType=o.elementType,f.type=o.type,f.stateNode=o.stateNode,f.alternate=o,o.alternate=f):(f.pendingProps=a,f.type=o.type,f.flags=0,f.subtreeFlags=0,f.deletions=null),f.flags=o.flags&14680064,f.childLanes=o.childLanes,f.lanes=o.lanes,f.child=o.child,f.memoizedProps=o.memoizedProps,f.memoizedState=o.memoizedState,f.updateQueue=o.updateQueue,a=o.dependencies,f.dependencies=a===null?null:{lanes:a.lanes,firstContext:a.firstContext},f.sibling=o.sibling,f.index=o.index,f.ref=o.ref,f}function Fl(o,a,f,g,S,T){var U=2;if(g=o,typeof o=="function")Eh(o)&&(U=1);else if(typeof o=="string")U=5;else e:switch(o){case d:return Wr(f.children,S,T,a);case p:U=8,S|=8;break;case m:return o=ai(12,f,a,S|2),o.elementType=m,o.lanes=T,o;case x:return o=ai(13,f,a,S),o.elementType=x,o.lanes=T,o;case v:return o=ai(19,f,a,S),o.elementType=v,o.lanes=T,o;case A:return zl(f,S,T,a);default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case _:U=10;break e;case y:U=9;break e;case E:U=11;break e;case w:U=14;break e;case M:U=16,g=null;break e}throw Error(l(130,o==null?o:typeof o,""))}return a=ai(U,f,a,S),a.elementType=o,a.type=g,a.lanes=T,a}function Wr(o,a,f,g){return o=ai(7,o,g,a),o.lanes=f,o}function zl(o,a,f,g){return o=ai(22,o,g,a),o.elementType=A,o.lanes=f,o.stateNode={},o}function wh(o,a,f){return o=ai(6,o,null,a),o.lanes=f,o}function Th(o,a,f){return a=ai(4,o.children!==null?o.children:[],o.key,a),a.lanes=f,a.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},a}function Gy(o,a,f,g,S){this.tag=a,this.containerInfo=o,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=yt,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=wu(0),this.expirationTimes=wu(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=wu(0),this.identifierPrefix=g,this.onRecoverableError=S,_e&&(this.mutableSourceEagerHydrationData=null)}function Rm(o,a,f,g,S,T,U,W,re){return o=new Gy(o,a,f,W,re),a===1?(a=1,T===!0&&(a|=8)):a=0,T=ai(3,null,null,a),o.current=T,T.stateNode=o,T.memoizedState={element:g,isDehydrated:f,cache:null,transitions:null},Nu(T),o}function Cm(o){if(!o)return xn;o=o._reactInternals;e:{if(b(o)!==o||o.tag!==1)throw Error(l(170));var a=o;do{switch(a.tag){case 3:a=a.stateNode.context;break e;case 1:if(qt(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break e}}a=a.return}while(a!==null);throw Error(l(171))}if(o.tag===1){var f=o.type;if(qt(f))return Ss(o,f,a)}return a}function Pm(o){var a=o._reactInternals;if(a===void 0)throw typeof o.render=="function"?Error(l(188)):(o=Object.keys(o).join(","),Error(l(268,o)));return o=te(a),o===null?null:o.stateNode}function Lm(o,a){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var f=o.retryLane;o.retryLane=f!==0&&f<a?f:a}}function Ah(o,a){Lm(o,a),(o=o.alternate)&&Lm(o,a)}function Wy(o){return o=te(o),o===null?null:o.stateNode}function Xy(){return null}return t.attemptContinuousHydration=function(o){if(o.tag===13){var a=In();oi(o,134217728,a),Ah(o,134217728)}},t.attemptHydrationAtCurrentPriority=function(o){if(o.tag===13){var a=In(),f=dr(o);oi(o,f,a),Ah(o,f)}},t.attemptSynchronousHydration=function(o){switch(o.tag){case 3:var a=o.stateNode;if(a.current.memoizedState.isDehydrated){var f=To(a.pendingLanes);f!==0&&(Tu(a,f|1),Bn(a,pn()),(_t&6)===0&&(Ns(),Ti()))}break;case 13:var g=In();ym(function(){return oi(o,1,g)}),Ah(o,1)}},t.batchedUpdates=function(o,a){var f=_t;_t|=1;try{return o(a)}finally{_t=f,_t===0&&(Ns(),Ka&&Ti())}},t.createComponentSelector=function(o){return{$$typeof:El,value:o}},t.createContainer=function(o,a,f,g,S,T,U){return Rm(o,a,!1,null,f,g,S,T,U)},t.createHasPseudoClassSelector=function(o){return{$$typeof:wl,value:o}},t.createHydrationContainer=function(o,a,f,g,S,T,U,W,re){return o=Rm(f,g,!0,o,S,T,U,W,re),o.context=Cm(null),f=o.current,g=In(),S=dr(f),T=Hi(g,S),T.callback=a??null,ur(f,T),o.current.lanes=S,Ao(o,S,g),Bn(o,g),o},t.createPortal=function(o,a,f){var g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:g==null?null:""+g,children:o,containerInfo:a,implementation:f}},t.createRoleSelector=function(o){return{$$typeof:Tl,value:o}},t.createTestNameSelector=function(o){return{$$typeof:Al,value:o}},t.createTextSelector=function(o){return{$$typeof:bl,value:o}},t.deferredUpdates=function(o){var a=Tt,f=Kt.transition;try{return Kt.transition=null,Tt=16,o()}finally{Tt=a,Kt.transition=f}},t.discreteUpdates=function(o,a,f,g,S){var T=Tt,U=Kt.transition;try{return Kt.transition=null,Tt=1,o(a,f,g,S)}finally{Tt=T,Kt.transition=U,_t===0&&Ns()}},t.findAllNodes=fh,t.findBoundingRects=function(o,a){if(!et)throw Error(l(363));a=fh(o,a),o=[];for(var f=0;f<a.length;f++)o.push(Dt(a[f]));for(a=o.length-1;0<a;a--){f=o[a];for(var g=f.x,S=g+f.width,T=f.y,U=T+f.height,W=a-1;0<=W;W--)if(a!==W){var re=o[W],we=re.x,Be=we+re.width,lt=re.y,Qe=lt+re.height;if(g>=we&&T>=lt&&S<=Be&&U<=Qe){o.splice(a,1);break}else if(g!==we||f.width!==re.width||Qe<T||lt>U){if(!(T!==lt||f.height!==re.height||Be<g||we>S)){we>g&&(re.width+=we-g,re.x=g),Be<S&&(re.width=S-we),o.splice(a,1);break}}else{lt>T&&(re.height+=lt-T,re.y=T),Qe<U&&(re.height=U-lt),o.splice(a,1);break}}}return o},t.findHostInstance=Pm,t.findHostInstanceWithNoPortals=function(o){return o=H(o),o=o!==null?G(o):null,o===null?null:o.stateNode},t.findHostInstanceWithWarning=function(o){return Pm(o)},t.flushControlled=function(o){var a=_t;_t|=1;var f=Kt.transition,g=Tt;try{Kt.transition=null,Tt=1,o()}finally{Tt=g,Kt.transition=f,_t=a,_t===0&&(Ns(),Ti())}},t.flushPassiveEffects=Gr,t.flushSync=ym,t.focusWithin=function(o,a){if(!et)throw Error(l(363));for(o=ch(o),a=gm(o,a),a=Array.from(a),o=0;o<a.length;){var f=a[o++];if(!P(f)){if(f.tag===5&&Se(f.stateNode))return!0;for(f=f.child;f!==null;)a.push(f),f=f.sibling}}return!1},t.getCurrentUpdatePriority=function(){return Tt},t.getFindAllNodesFailureDescription=function(o,a){if(!et)throw Error(l(363));var f=0,g=[];o=[ch(o),0];for(var S=0;S<o.length;){var T=o[S++],U=o[S++],W=a[U];if((T.tag!==5||!P(T))&&(uh(T,W)&&(g.push(hh(W)),U++,U>f&&(f=U)),U<a.length))for(T=T.child;T!==null;)o.push(T,U),T=T.sibling}if(f<a.length){for(o=[];f<a.length;f++)o.push(hh(a[f]));return`findAllNodes was able to match part of the selector:
  `+(g.join(" > ")+`

No matching component was found for:
  `)+o.join(" > ")}return null},t.getPublicRootInstance=function(o){if(o=o.current,!o.child)return null;switch(o.child.tag){case 5:return oe(o.child.stateNode);default:return o.child.stateNode}},t.injectIntoDevTools=function(o){if(o={bundleType:o.bundleType,version:o.version,rendererPackageName:o.rendererPackageName,rendererConfig:o.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:Wy,findFiberByHostInstance:o.findFiberByHostInstance||Xy,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")o=!1;else{var a=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(a.isDisabled||!a.supportsFiber)o=!0;else{try{Ja=a.inject(o),Ei=a}catch{}o=!!a.checkDCE}}return o},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(o,a,f,g){if(!et)throw Error(l(363));o=fh(o,a);var S=ge(o,f,g).disconnect;return{disconnect:function(){S()}}},t.registerMutableSourceForHydration=function(o,a){var f=a._getVersion;f=f(a._source),o.mutableSourceEagerHydrationData==null?o.mutableSourceEagerHydrationData=[a,f]:o.mutableSourceEagerHydrationData.push(a,f)},t.runWithPriority=function(o,a){var f=Tt;try{return Tt=o,a()}finally{Tt=f}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(o,a,f,g){var S=a.current,T=In(),U=dr(S);return f=Cm(f),a.context===null?a.context=f:a.pendingContext=f,a=Hi(T,U),a.payload={element:o},g=g===void 0?null:g,g!==null&&(a.callback=g),ur(S,a),o=oi(S,U,T),o!==null&&tl(o,S,U),U},t}),hf}var h0;function BA(){return h0||(h0=1,lf.exports=zA()),lf.exports}var kA=BA();const HA=jy(kA);var f0=zv();const $d={},VA=r=>void Object.assign($d,r);function GA(r,e){function t(d,{args:p=[],attach:m,..._},y){let E=`${d[0].toUpperCase()}${d.slice(1)}`,x;if(d==="primitive"){if(_.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const v=_.object;x=so(v,{type:d,root:y,attach:m,primitive:!0})}else{const v=$d[E];if(!v)throw new Error(`R3F: ${E} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");x=so(new v(...p),{type:d,root:y,attach:m,memoizedProps:{args:p}})}return x.__r3f.attach===void 0&&(x.isBufferGeometry?x.__r3f.attach="geometry":x.isMaterial&&(x.__r3f.attach="material")),E!=="inject"&&pf(x,_),x}function n(d,p){let m=!1;if(p){var _,y;(_=p.__r3f)!=null&&_.attach?df(d,p,p.__r3f.attach):p.isObject3D&&d.isObject3D&&(d.add(p),m=!0),m||(y=d.__r3f)==null||y.objects.push(p),p.__r3f||so(p,{}),p.__r3f.parent=d,cd(p),oo(p)}}function i(d,p,m){let _=!1;if(p){var y,E;if((y=p.__r3f)!=null&&y.attach)df(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){p.parent=d,p.dispatchEvent({type:"added"}),d.dispatchEvent({type:"childadded",child:p});const x=d.children.filter(w=>w!==p),v=x.indexOf(m);d.children=[...x.slice(0,v),p,...x.slice(v)],_=!0}_||(E=d.__r3f)==null||E.objects.push(p),p.__r3f||so(p,{}),p.__r3f.parent=d,cd(p),oo(p)}}function s(d,p,m=!1){d&&[...d].forEach(_=>l(p,_,m))}function l(d,p,m){if(p){var _,y,E;if(p.__r3f&&(p.__r3f.parent=null),(_=d.__r3f)!=null&&_.objects&&(d.__r3f.objects=d.__r3f.objects.filter(A=>A!==p)),(y=p.__r3f)!=null&&y.attach)_0(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){var x;d.remove(p),(x=p.__r3f)!=null&&x.root&&JA(zc(p),p)}const w=(E=p.__r3f)==null?void 0:E.primitive,M=!w&&(m===void 0?p.dispose!==null:m);if(!w){var v;s((v=p.__r3f)==null?void 0:v.objects,p,M),s(p.children,p,M)}if(delete p.__r3f,M&&p.dispose&&p.type!=="Scene"){const A=()=>{try{p.dispose()}catch{}};typeof IS_REACT_ACT_ENVIRONMENT>"u"?f0.unstable_scheduleCallback(f0.unstable_IdlePriority,A):A()}oo(d)}}function c(d,p,m,_){var y;const E=(y=d.__r3f)==null?void 0:y.parent;if(!E)return;const x=t(p,m,d.__r3f.root);if(d.children){for(const v of d.children)v.__r3f&&n(x,v);d.children=d.children.filter(v=>!v.__r3f)}d.__r3f.objects.forEach(v=>n(x,v)),d.__r3f.objects=[],d.__r3f.autoRemovedBeforeAppend||l(E,d),x.parent&&(x.__r3f.autoRemovedBeforeAppend=!0),n(E,x),x.raycast&&x.__r3f.eventCount&&zc(x).getState().internal.interaction.push(x),[_,_.alternate].forEach(v=>{v!==null&&(v.stateNode=x,v.ref&&(typeof v.ref=="function"?v.ref(x):v.ref.current=x))})}const u=()=>{};return{reconciler:HA({createInstance:t,removeChild:l,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(d,p)=>{if(!p)return;const m=d.getState().scene;m.__r3f&&(m.__r3f.root=d,n(m,p))},removeChildFromContainer:(d,p)=>{p&&l(d.getState().scene,p)},insertInContainerBefore:(d,p,m)=>{if(!p||!m)return;const _=d.getState().scene;_.__r3f&&i(_,p,m)},getRootHostContext:()=>null,getChildHostContext:d=>d,finalizeInitialChildren(d){var p;return!!((p=d==null?void 0:d.__r3f)!=null?p:{}).handlers},prepareUpdate(d,p,m,_){var y;if(((y=d==null?void 0:d.__r3f)!=null?y:{}).primitive&&_.object&&_.object!==d)return[!0];{const{args:x=[],children:v,...w}=_,{args:M=[],children:A,...R}=m;if(!Array.isArray(x))throw new Error("R3F: the args prop must be an array!");if(x.some((I,z)=>I!==M[z]))return[!0];const C=Xv(d,w,R,!0);return C.changes.length?[!1,C]:null}},commitUpdate(d,[p,m],_,y,E,x){p?c(d,_,E,x):pf(d,m)},commitMount(d,p,m,_){var y;const E=(y=d.__r3f)!=null?y:{};d.raycast&&E.handlers&&E.eventCount&&zc(d).getState().internal.interaction.push(d)},getPublicInstance:d=>d,prepareForCommit:()=>null,preparePortalMount:d=>so(d.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(d){var p;const{attach:m,parent:_}=(p=d.__r3f)!=null?p:{};m&&_&&_0(_,d,m),d.isObject3D&&(d.visible=!1),oo(d)},unhideInstance(d,p){var m;const{attach:_,parent:y}=(m=d.__r3f)!=null?m:{};_&&y&&df(y,d,_),(d.isObject3D&&p.visible==null||p.visible)&&(d.visible=!0),oo(d)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():ho.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&kt.fun(performance.now)?performance.now:kt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:kt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:kt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:pf}}var d0,p0;const ff=r=>"colorSpace"in r||"outputColorSpace"in r,Bv=()=>{var r;return(r=$d.ColorManagement)!=null?r:null},kv=r=>r&&r.isOrthographicCamera,WA=r=>r&&r.hasOwnProperty("current"),Ha=typeof window<"u"&&((d0=window.document)!=null&&d0.createElement||((p0=window.navigator)==null?void 0:p0.product)==="ReactNative")?Ye.useLayoutEffect:Ye.useEffect;function Hv(r){const e=Ye.useRef(r);return Ha(()=>void(e.current=r),[r]),e}function XA({set:r}){return Ha(()=>(r(new Promise(()=>null)),()=>r(!1)),[r]),null}class Vv extends Ye.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}Vv.getDerivedStateFromError=()=>({error:!0});const Gv="__default",m0=new Map,YA=r=>r&&!!r.memoized&&!!r.changes;function Wv(r){var e;const t=typeof window<"u"?(e=window.devicePixelRatio)!=null?e:2:1;return Array.isArray(r)?Math.min(Math.max(r[0],t),r[1]):r}const ea=r=>{var e;return(e=r.__r3f)==null?void 0:e.root.getState()};function zc(r){let e=r.__r3f.root;for(;e.getState().previousRoot;)e=e.getState().previousRoot;return e}const kt={obj:r=>r===Object(r)&&!kt.arr(r)&&typeof r!="function",fun:r=>typeof r=="function",str:r=>typeof r=="string",num:r=>typeof r=="number",boo:r=>typeof r=="boolean",und:r=>r===void 0,arr:r=>Array.isArray(r),equ(r,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof r!=typeof e||!!r!=!!e)return!1;if(kt.str(r)||kt.num(r)||kt.boo(r))return r===e;const s=kt.obj(r);if(s&&n==="reference")return r===e;const l=kt.arr(r);if(l&&t==="reference")return r===e;if((l||s)&&r===e)return!0;let c;for(c in r)if(!(c in e))return!1;if(s&&t==="shallow"&&n==="shallow"){for(c in i?e:r)if(!kt.equ(r[c],e[c],{strict:i,objects:"reference"}))return!1}else for(c in i?e:r)if(r[c]!==e[c])return!1;if(kt.und(c)){if(l&&r.length===0&&e.length===0||s&&Object.keys(r).length===0&&Object.keys(e).length===0)return!0;if(r!==e)return!1}return!0}};function qA(r){r.dispose&&r.type!=="Scene"&&r.dispose();for(const e in r)e.dispose==null||e.dispose(),delete r[e]}function so(r,e){const t=r;return t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e},r}function ld(r,e){let t=r;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((s,l)=>s[l],r),{target:t,key:i}}else return{target:t,key:e}}const g0=/-\d+$/;function df(r,e,t){if(kt.str(t)){if(g0.test(t)){const s=t.replace(g0,""),{target:l,key:c}=ld(r,s);Array.isArray(l[c])||(l[c]=[])}const{target:n,key:i}=ld(r,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(r,e)}function _0(r,e,t){var n,i;if(kt.str(t)){const{target:s,key:l}=ld(r,t),c=e.__r3f.previousAttach;c===void 0?delete s[l]:s[l]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(r,e);(i=e.__r3f)==null||delete i.previousAttach}function Xv(r,{children:e,key:t,ref:n,...i},{children:s,key:l,ref:c,...u}={},h=!1){const d=r.__r3f,p=Object.entries(i),m=[];if(h){const y=Object.keys(u);for(let E=0;E<y.length;E++)i.hasOwnProperty(y[E])||p.unshift([y[E],Gv+"remove"])}p.forEach(([y,E])=>{var x;if((x=r.__r3f)!=null&&x.primitive&&y==="object"||kt.equ(E,u[y]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(y))return m.push([y,E,!0,[]]);let v=[];y.includes("-")&&(v=y.split("-")),m.push([y,E,!1,v]);for(const w in i){const M=i[w];w.startsWith(`${y}-`)&&m.push([w,M,!1,w.split("-")])}});const _={...i};return d!=null&&d.memoizedProps&&d!=null&&d.memoizedProps.args&&(_.args=d.memoizedProps.args),d!=null&&d.memoizedProps&&d!=null&&d.memoizedProps.attach&&(_.attach=d.memoizedProps.attach),{memoized:_,changes:m}}function pf(r,e){var t;const n=r.__r3f,i=n==null?void 0:n.root,s=i==null||i.getState==null?void 0:i.getState(),{memoized:l,changes:c}=YA(e)?e:Xv(r,e),u=n==null?void 0:n.eventCount;r.__r3f&&(r.__r3f.memoizedProps=l);for(let m=0;m<c.length;m++){let[_,y,E,x]=c[m];if(ff(r)){const A="srgb",R="srgb-linear";_==="encoding"?(_="colorSpace",y=y===3001?A:R):_==="outputEncoding"&&(_="outputColorSpace",y=y===3001?A:R)}let v=r,w=v[_];if(x.length&&(w=x.reduce((M,A)=>M[A],r),!(w&&w.set))){const[M,...A]=x.reverse();v=A.reverse().reduce((R,C)=>R[C],r),_=M}if(y===Gv+"remove")if(v.constructor){let M=m0.get(v.constructor);M||(M=new v.constructor,m0.set(v.constructor,M)),y=M[_]}else y=0;if(E&&n)y?n.handlers[_]=y:delete n.handlers[_],n.eventCount=Object.keys(n.handlers).length;else if(w&&w.set&&(w.copy||w instanceof hs)){if(Array.isArray(y))w.fromArray?w.fromArray(y):w.set(...y);else if(w.copy&&y&&y.constructor&&w.constructor===y.constructor)w.copy(y);else if(y!==void 0){var h;const M=(h=w)==null?void 0:h.isColor;!M&&w.setScalar?w.setScalar(y):w instanceof hs&&y instanceof hs?w.mask=y.mask:w.set(y),!Bv()&&s&&!s.linear&&M&&w.convertSRGBToLinear()}}else{var d;if(v[_]=y,(d=v[_])!=null&&d.isTexture&&v[_].format===Gn&&v[_].type===Ni&&s){const M=v[_];ff(M)&&ff(s.gl)?M.colorSpace=s.gl.outputColorSpace:M.encoding=s.gl.outputEncoding}}oo(r)}if(n&&n.parent&&r.raycast&&u!==n.eventCount){const m=zc(r).getState().internal,_=m.interaction.indexOf(r);_>-1&&m.interaction.splice(_,1),n.eventCount&&m.interaction.push(r)}return!(c.length===1&&c[0][0]==="onUpdate")&&c.length&&(t=r.__r3f)!=null&&t.parent&&cd(r),r}function oo(r){var e,t;const n=(e=r.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function cd(r){r.onUpdate==null||r.onUpdate(r)}function jA(r,e){r.manual||(kv(r)?(r.left=e.width/-2,r.right=e.width/2,r.top=e.height/2,r.bottom=e.height/-2):r.aspect=e.width/e.height,r.updateProjectionMatrix(),r.updateMatrixWorld())}function bc(r){return(r.eventObject||r.object).uuid+"/"+r.index+r.instanceId}function ZA(){var r;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return ho.DefaultEventPriority;switch((r=e.event)==null?void 0:r.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return ho.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return ho.ContinuousEventPriority;default:return ho.DefaultEventPriority}}function Yv(r,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(r.delete(n),i.target.releasePointerCapture(n)))}function JA(r,e){const{internal:t}=r.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{Yv(t.capturedMap,e,n,i)})}function KA(r){function e(u){const{internal:h}=r.getState(),d=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(d*d+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(d=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+d]}))}function n(u,h){const d=r.getState(),p=new Set,m=[],_=h?h(d.internal.interaction):d.internal.interaction;for(let v=0;v<_.length;v++){const w=ea(_[v]);w&&(w.raycaster.camera=void 0)}d.previousRoot||d.events.compute==null||d.events.compute(u,d);function y(v){const w=ea(v);if(!w||!w.events.enabled||w.raycaster.camera===null)return[];if(w.raycaster.camera===void 0){var M;w.events.compute==null||w.events.compute(u,w,(M=w.previousRoot)==null?void 0:M.getState()),w.raycaster.camera===void 0&&(w.raycaster.camera=null)}return w.raycaster.camera?w.raycaster.intersectObject(v,!0):[]}let E=_.flatMap(y).sort((v,w)=>{const M=ea(v.object),A=ea(w.object);return!M||!A?v.distance-w.distance:A.events.priority-M.events.priority||v.distance-w.distance}).filter(v=>{const w=bc(v);return p.has(w)?!1:(p.add(w),!0)});d.events.filter&&(E=d.events.filter(E,d));for(const v of E){let w=v.object;for(;w;){var x;(x=w.__r3f)!=null&&x.eventCount&&m.push({...v,eventObject:w}),w=w.parent}}if("pointerId"in u&&d.internal.capturedMap.has(u.pointerId))for(let v of d.internal.capturedMap.get(u.pointerId).values())p.has(bc(v.intersection))||m.push(v.intersection);return m}function i(u,h,d,p){const m=r.getState();if(u.length){const _={stopped:!1};for(const y of u){const E=ea(y.object)||m,{raycaster:x,pointer:v,camera:w,internal:M}=E,A=new D(v.x,v.y,0).unproject(w),R=L=>{var H,te;return(H=(te=M.capturedMap.get(L))==null?void 0:te.has(y.eventObject))!=null?H:!1},C=L=>{const H={intersection:y,target:h.target};M.capturedMap.has(L)?M.capturedMap.get(L).set(y.eventObject,H):M.capturedMap.set(L,new Map([[y.eventObject,H]])),h.target.setPointerCapture(L)},I=L=>{const H=M.capturedMap.get(L);H&&Yv(M.capturedMap,y.eventObject,H,L)};let z={};for(let L in h){let H=h[L];typeof H!="function"&&(z[L]=H)}let b={...y,...z,pointer:v,intersections:u,stopped:_.stopped,delta:d,unprojectedPoint:A,ray:x.ray,camera:w,stopPropagation(){const L="pointerId"in h&&M.capturedMap.get(h.pointerId);if((!L||L.has(y.eventObject))&&(b.stopped=_.stopped=!0,M.hovered.size&&Array.from(M.hovered.values()).find(H=>H.eventObject===y.eventObject))){const H=u.slice(0,u.indexOf(y));s([...H,y])}},target:{hasPointerCapture:R,setPointerCapture:C,releasePointerCapture:I},currentTarget:{hasPointerCapture:R,setPointerCapture:C,releasePointerCapture:I},nativeEvent:h};if(p(b),_.stopped===!0)break}}return u}function s(u){const{internal:h}=r.getState();for(const d of h.hovered.values())if(!u.length||!u.find(p=>p.object===d.object&&p.index===d.index&&p.instanceId===d.instanceId)){const m=d.eventObject.__r3f,_=m==null?void 0:m.handlers;if(h.hovered.delete(bc(d)),m!=null&&m.eventCount){const y={...d,intersections:u};_.onPointerOut==null||_.onPointerOut(y),_.onPointerLeave==null||_.onPointerLeave(y)}}}function l(u,h){for(let d=0;d<h.length;d++){const p=h[d].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>s([]);case"onLostPointerCapture":return h=>{const{internal:d}=r.getState();"pointerId"in h&&d.capturedMap.has(h.pointerId)&&requestAnimationFrame(()=>{d.capturedMap.has(h.pointerId)&&(d.capturedMap.delete(h.pointerId),s([]))})}}return function(d){const{onPointerMissed:p,internal:m}=r.getState();m.lastEvent.current=d;const _=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",x=n(d,_?t:void 0),v=y?e(d):0;u==="onPointerDown"&&(m.initialClick=[d.offsetX,d.offsetY],m.initialHits=x.map(M=>M.eventObject)),y&&!x.length&&v<=2&&(l(d,m.interaction),p&&p(d)),_&&s(x);function w(M){const A=M.eventObject,R=A.__r3f,C=R==null?void 0:R.handlers;if(R!=null&&R.eventCount)if(_){if(C.onPointerOver||C.onPointerEnter||C.onPointerOut||C.onPointerLeave){const I=bc(M),z=m.hovered.get(I);z?z.stopped&&M.stopPropagation():(m.hovered.set(I,M),C.onPointerOver==null||C.onPointerOver(M),C.onPointerEnter==null||C.onPointerEnter(M))}C.onPointerMove==null||C.onPointerMove(M)}else{const I=C[u];I?(!y||m.initialHits.includes(A))&&(l(d,m.interaction.filter(z=>!m.initialHits.includes(z))),I(M)):y&&m.initialHits.includes(A)&&l(d,m.interaction.filter(z=>!m.initialHits.includes(z)))}}i(x,d,v,w)}}return{handlePointer:c}}const qv=r=>!!(r!=null&&r.render),jv=Ye.createContext(null),QA=(r,e)=>{const t=OA((c,u)=>{const h=new D,d=new D,p=new D;function m(v=u().camera,w=d,M=u().size){const{width:A,height:R,top:C,left:I}=M,z=A/R;w.isVector3?p.copy(w):p.set(...w);const b=v.getWorldPosition(h).distanceTo(p);if(kv(v))return{width:A/v.zoom,height:R/v.zoom,top:C,left:I,factor:1,distance:b,aspect:z};{const L=v.fov*Math.PI/180,H=2*Math.tan(L/2)*b,te=H*(A/R);return{width:te,height:H,top:C,left:I,factor:A/te,distance:b,aspect:z}}}let _;const y=v=>c(w=>({performance:{...w.performance,current:v}})),E=new ue;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,scene:null,invalidate:(v=1)=>r(u(),v),advance:(v,w)=>e(v,w,u()),legacy:!1,linear:!1,flat:!1,controls:null,clock:new Zd,pointer:E,mouse:E,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const v=u();_&&clearTimeout(_),v.performance.current!==v.performance.min&&y(v.performance.min),_=setTimeout(()=>y(u().performance.max),v.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:v=>c(w=>({...w,events:{...w.events,...v}})),setSize:(v,w,M,A,R)=>{const C=u().camera,I={width:v,height:w,top:A||0,left:R||0,updateStyle:M};c(z=>({size:I,viewport:{...z.viewport,...m(C,d,I)}}))},setDpr:v=>c(w=>{const M=Wv(v);return{viewport:{...w.viewport,dpr:M,initialDpr:w.viewport.initialDpr||M}}}),setFrameloop:(v="always")=>{const w=u().clock;w.stop(),w.elapsedTime=0,v!=="never"&&(w.start(),w.elapsedTime=0),c(()=>({frameloop:v}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:Ye.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(v,w,M)=>{const A=u().internal;return A.priority=A.priority+(w>0?1:0),A.subscribers.push({ref:v,priority:w,store:M}),A.subscribers=A.subscribers.sort((R,C)=>R.priority-C.priority),()=>{const R=u().internal;R!=null&&R.subscribers&&(R.priority=R.priority-(w>0?1:0),R.subscribers=R.subscribers.filter(C=>C.ref!==v))}}}}}),n=t.getState();let i=n.size,s=n.viewport.dpr,l=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:d,set:p}=t.getState();if(u.width!==i.width||u.height!==i.height||h.dpr!==s){var m;i=u,s=h.dpr,jA(c,u),d.setPixelRatio(h.dpr);const _=(m=u.updateStyle)!=null?m:typeof HTMLCanvasElement<"u"&&d.domElement instanceof HTMLCanvasElement;d.setSize(u.width,u.height,_)}c!==l&&(l=c,p(_=>({viewport:{..._.viewport,..._.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>r(c)),t};let Rc,$A=new Set,eb=new Set,tb=new Set;function mf(r,e){if(r.size)for(const{callback:t}of r.values())t(e)}function ta(r,e){switch(r){case"before":return mf($A,e);case"after":return mf(eb,e);case"tail":return mf(tb,e)}}let gf,_f;function vf(r,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof r=="number"&&(n=r-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=r),gf=e.internal.subscribers,Rc=0;Rc<gf.length;Rc++)_f=gf[Rc],_f.ref.current(_f.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function nb(r){let e=!1,t=!1,n,i,s;function l(h){i=requestAnimationFrame(l),e=!0,n=0,ta("before",h),t=!0;for(const p of r.values()){var d;s=p.store.getState(),s.internal.active&&(s.frameloop==="always"||s.internal.frames>0)&&!((d=s.gl.xr)!=null&&d.isPresenting)&&(n+=vf(h,s))}if(t=!1,ta("after",h),n===0)return ta("tail",h),e=!1,cancelAnimationFrame(i)}function c(h,d=1){var p;if(!h)return r.forEach(m=>c(m.store.getState(),d));(p=h.gl.xr)!=null&&p.isPresenting||!h.internal.active||h.frameloop==="never"||(d>1?h.internal.frames=Math.min(60,h.internal.frames+d):t?h.internal.frames=2:h.internal.frames=1,e||(e=!0,requestAnimationFrame(l)))}function u(h,d=!0,p,m){if(d&&ta("before",h),p)vf(h,p,m);else for(const _ of r.values())vf(h,_.store.getState());d&&ta("after",h)}return{loop:l,invalidate:c,advance:u}}function Zv(){const r=Ye.useContext(jv);if(!r)throw new Error("R3F: Hooks can only be used within the Canvas component!");return r}function wr(r=t=>t,e){return Zv()(r,e)}function Jv(r,e=0){const t=Zv(),n=t.getState().internal.subscribe,i=Hv(r);return Ha(()=>n(i,e,t),[e,n,t]),null}const yo=new Map,{invalidate:v0,advance:y0}=nb(yo),{reconciler:Wc,applyProps:io}=GA(yo,ZA),ro={objects:"shallow",strict:!1},ib=(r,e)=>{const t=typeof r=="function"?r(e):r;return qv(t)?t:new Ld({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...r})};function rb(r,e){const t=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement;if(e){const{width:n,height:i,top:s,left:l,updateStyle:c=t}=e;return{width:n,height:i,top:s,left:l,updateStyle:c}}else if(typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement&&r.parentElement){const{width:n,height:i,top:s,left:l}=r.parentElement.getBoundingClientRect();return{width:n,height:i,top:s,left:l,updateStyle:t}}else if(typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas)return{width:r.width,height:r.height,top:0,left:0,updateStyle:t};return{width:0,height:0,top:0,left:0}}function sb(r){const e=yo.get(r),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,s=n||QA(v0,y0),l=t||Wc.createContainer(s,ho.ConcurrentRoot,null,!1,null,"",i,null);e||yo.set(r,{fiber:l,store:s});let c,u=!1,h;return{configure(d={}){let{gl:p,size:m,scene:_,events:y,onCreated:E,shadows:x=!1,linear:v=!1,flat:w=!1,legacy:M=!1,orthographic:A=!1,frameloop:R="always",dpr:C=[1,2],performance:I,raycaster:z,camera:b,onPointerMissed:L}=d,H=s.getState(),te=H.gl;H.gl||H.set({gl:te=ib(p,r)});let se=H.raycaster;se||H.set({raycaster:se=new Ov});const{params:G,...$}=z||{};if(kt.equ($,se,ro)||io(se,{...$}),kt.equ(G,se.params,ro)||io(se,{params:{...se.params,...G}}),!H.camera||H.camera===h&&!kt.equ(h,b,ro)){h=b;const j=b instanceof Na,k=j?b:A?new Rr(0,0,0,0,.1,1e3):new tn(75,0,.1,1e3);j||(k.position.z=5,b&&(io(k,b),("aspect"in b||"left"in b||"right"in b||"bottom"in b||"top"in b)&&(k.manual=!0,k.updateProjectionMatrix())),!H.camera&&!(b!=null&&b.rotation)&&k.lookAt(0,0,0)),H.set({camera:k}),se.camera=k}if(!H.scene){let j;_!=null&&_.isScene?j=_:(j=new Id,_&&io(j,_)),H.set({scene:so(j)})}if(!H.xr){var oe;const j=(fe,Te)=>{const be=s.getState();be.frameloop!=="never"&&y0(fe,!0,be,Te)},k=()=>{const fe=s.getState();fe.gl.xr.enabled=fe.gl.xr.isPresenting,fe.gl.xr.setAnimationLoop(fe.gl.xr.isPresenting?j:null),fe.gl.xr.isPresenting||v0(fe)},Q={connect(){const fe=s.getState().gl;fe.xr.addEventListener("sessionstart",k),fe.xr.addEventListener("sessionend",k)},disconnect(){const fe=s.getState().gl;fe.xr.removeEventListener("sessionstart",k),fe.xr.removeEventListener("sessionend",k)}};typeof((oe=te.xr)==null?void 0:oe.addEventListener)=="function"&&Q.connect(),H.set({xr:Q})}if(te.shadowMap){const j=te.shadowMap.enabled,k=te.shadowMap.type;if(te.shadowMap.enabled=!!x,kt.boo(x))te.shadowMap.type=ra;else if(kt.str(x)){var ie;const Q={basic:L0,percentage:Yc,soft:ra,variance:gi};te.shadowMap.type=(ie=Q[x])!=null?ie:ra}else kt.obj(x)&&Object.assign(te.shadowMap,x);(j!==te.shadowMap.enabled||k!==te.shadowMap.type)&&(te.shadowMap.needsUpdate=!0)}const Y=Bv();Y&&("enabled"in Y?Y.enabled=!M:"legacyMode"in Y&&(Y.legacyMode=M)),u||io(te,{outputEncoding:v?3e3:3001,toneMapping:w?Di:dd}),H.legacy!==M&&H.set(()=>({legacy:M})),H.linear!==v&&H.set(()=>({linear:v})),H.flat!==w&&H.set(()=>({flat:w})),p&&!kt.fun(p)&&!qv(p)&&!kt.equ(p,te,ro)&&io(te,p),y&&!H.events.handlers&&H.set({events:y(s)});const q=rb(r,m);return kt.equ(q,H.size,ro)||H.setSize(q.width,q.height,q.updateStyle,q.top,q.left),C&&H.viewport.dpr!==Wv(C)&&H.setDpr(C),H.frameloop!==R&&H.setFrameloop(R),H.onPointerMissed||H.set({onPointerMissed:L}),I&&!kt.equ(I,H.performance,ro)&&H.set(j=>({performance:{...j.performance,...I}})),c=E,u=!0,this},render(d){return u||this.configure(),Wc.updateContainer(xt.jsx(ob,{store:s,children:d,onCreated:c,rootElement:r}),l,null,()=>{}),s},unmount(){Kv(r)}}}function ob({store:r,children:e,onCreated:t,rootElement:n}){return Ha(()=>{const i=r.getState();i.set(s=>({internal:{...s.internal,active:!0}})),t&&t(i),r.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),xt.jsx(jv.Provider,{value:r,children:e})}function Kv(r,e){const t=yo.get(r),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),Wc.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var s,l,c,u;i.events.disconnect==null||i.events.disconnect(),(s=i.gl)==null||(l=s.renderLists)==null||l.dispose==null||l.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),qA(i),yo.delete(r)}catch{}},500)})}}Wc.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Ye.version});const yf={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function ab(r){const{handlePointer:e}=KA(r);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(yf).reduce((t,n)=>({...t,[n]:e(n)}),{}),update:()=>{var t;const{events:n,internal:i}=r.getState();(t=i.lastEvent)!=null&&t.current&&n.handlers&&n.handlers.onPointerMove(i.lastEvent.current)},connect:t=>{var n;const{set:i,events:s}=r.getState();s.disconnect==null||s.disconnect(),i(l=>({events:{...l.events,connected:t}})),Object.entries((n=s.handlers)!=null?n:[]).forEach(([l,c])=>{const[u,h]=yf[l];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=r.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([s,l])=>{if(n&&n.connected instanceof HTMLElement){const[c]=yf[s];n.connected.removeEventListener(c,l)}}),t(s=>({events:{...s.events,connected:void 0}}))}}}}function x0(r,e){let t;return(...n)=>{window.clearTimeout(t),t=window.setTimeout(()=>r(...n),e)}}function lb({debounce:r,scroll:e,polyfill:t,offsetSize:n}={debounce:0,scroll:!1,offsetSize:!1}){const i=t||(typeof window>"u"?class{}:window.ResizeObserver);if(!i)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[s,l]=Ye.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),c=Ye.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:s,orientationHandler:null}),u=r?typeof r=="number"?r:r.scroll:null,h=r?typeof r=="number"?r:r.resize:null,d=Ye.useRef(!1);Ye.useEffect(()=>(d.current=!0,()=>void(d.current=!1)));const[p,m,_]=Ye.useMemo(()=>{const v=()=>{if(!c.current.element)return;const{left:w,top:M,width:A,height:R,bottom:C,right:I,x:z,y:b}=c.current.element.getBoundingClientRect(),L={left:w,top:M,width:A,height:R,bottom:C,right:I,x:z,y:b};c.current.element instanceof HTMLElement&&n&&(L.height=c.current.element.offsetHeight,L.width=c.current.element.offsetWidth),Object.freeze(L),d.current&&!fb(c.current.lastBounds,L)&&l(c.current.lastBounds=L)};return[v,h?x0(v,h):v,u?x0(v,u):v]},[l,n,u,h]);function y(){c.current.scrollContainers&&(c.current.scrollContainers.forEach(v=>v.removeEventListener("scroll",_,!0)),c.current.scrollContainers=null),c.current.resizeObserver&&(c.current.resizeObserver.disconnect(),c.current.resizeObserver=null),c.current.orientationHandler&&("orientation"in screen&&"removeEventListener"in screen.orientation?screen.orientation.removeEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.removeEventListener("orientationchange",c.current.orientationHandler))}function E(){c.current.element&&(c.current.resizeObserver=new i(_),c.current.resizeObserver.observe(c.current.element),e&&c.current.scrollContainers&&c.current.scrollContainers.forEach(v=>v.addEventListener("scroll",_,{capture:!0,passive:!0})),c.current.orientationHandler=()=>{_()},"orientation"in screen&&"addEventListener"in screen.orientation?screen.orientation.addEventListener("change",c.current.orientationHandler):"onorientationchange"in window&&window.addEventListener("orientationchange",c.current.orientationHandler))}const x=v=>{!v||v===c.current.element||(y(),c.current.element=v,c.current.scrollContainers=Qv(v),E())};return ub(_,!!e),cb(m),Ye.useEffect(()=>{y(),E()},[e,_,m]),Ye.useEffect(()=>y,[]),[x,s,p]}function cb(r){Ye.useEffect(()=>{const e=r;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[r])}function ub(r,e){Ye.useEffect(()=>{if(e){const t=r;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[r,e])}function Qv(r){const e=[];if(!r||r===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(r);return[t,n,i].some(s=>s==="auto"||s==="scroll")&&e.push(r),[...e,...Qv(r.parentElement)]}const hb=["x","y","top","bottom","left","right","width","height"],fb=(r,e)=>hb.every(t=>r[t]===e[t]);var db=Object.defineProperty,pb=Object.defineProperties,mb=Object.getOwnPropertyDescriptors,S0=Object.getOwnPropertySymbols,gb=Object.prototype.hasOwnProperty,_b=Object.prototype.propertyIsEnumerable,M0=(r,e,t)=>e in r?db(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,E0=(r,e)=>{for(var t in e||(e={}))gb.call(e,t)&&M0(r,t,e[t]);if(S0)for(var t of S0(e))_b.call(e,t)&&M0(r,t,e[t]);return r},vb=(r,e)=>pb(r,mb(e)),w0,T0;typeof window<"u"&&((w0=window.document)!=null&&w0.createElement||((T0=window.navigator)==null?void 0:T0.product)==="ReactNative")?Ye.useLayoutEffect:Ye.useEffect;function $v(r,e,t){if(!r)return;if(t(r)===!0)return r;let n=r.child;for(;n;){const i=$v(n,e,t);if(i)return i;n=n.sibling}}function ey(r){try{return Object.defineProperties(r,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return r}}const A0=console.error;console.error=function(){const r=[...arguments].join("");if(r!=null&&r.startsWith("Warning:")&&r.includes("useContext")){console.error=A0;return}return A0.apply(this,arguments)};const ep=ey(Ye.createContext(null));class ty extends Ye.Component{render(){return Ye.createElement(ep.Provider,{value:this._reactInternals},this.props.children)}}function yb(){const r=Ye.useContext(ep);if(r===null)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=Ye.useId();return Ye.useMemo(()=>{for(const n of[r,r==null?void 0:r.alternate]){if(!n)continue;const i=$v(n,!1,s=>{let l=s.memoizedState;for(;l;){if(l.memoizedState===e)return!0;l=l.next}});if(i)return i}},[r,e])}function xb(){const r=yb(),[e]=Ye.useState(()=>new Map);e.clear();let t=r;for(;t;){if(t.type&&typeof t.type=="object"){const i=t.type._context===void 0&&t.type.Provider===t.type?t.type:t.type._context;i&&i!==ep&&!e.has(i)&&e.set(i,Ye.useContext(ey(i)))}t=t.return}return e}function Sb(){const r=xb();return Ye.useMemo(()=>Array.from(r.keys()).reduce((e,t)=>n=>Ye.createElement(e,null,Ye.createElement(t.Provider,vb(E0({},n),{value:r.get(t)}))),e=>Ye.createElement(ty,E0({},e))),[r])}const Mb=Ye.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:s,events:l=ab,eventSource:c,eventPrefix:u,shadows:h,linear:d,flat:p,legacy:m,orthographic:_,frameloop:y,dpr:E,performance:x,raycaster:v,camera:w,scene:M,onPointerMissed:A,onCreated:R,...C},I){Ye.useMemo(()=>VA(LA),[]);const z=Sb(),[b,L]=lb({scroll:!0,debounce:{scroll:50,resize:0},...n}),H=Ye.useRef(null),te=Ye.useRef(null);Ye.useImperativeHandle(I,()=>H.current);const se=Hv(A),[G,$]=Ye.useState(!1),[oe,ie]=Ye.useState(!1);if(G)throw G;if(oe)throw oe;const Y=Ye.useRef(null);Ha(()=>{const j=H.current;L.width>0&&L.height>0&&j&&(Y.current||(Y.current=sb(j)),Y.current.configure({gl:s,events:l,shadows:h,linear:d,flat:p,legacy:m,orthographic:_,frameloop:y,dpr:E,performance:x,raycaster:v,camera:w,scene:M,size:L,onPointerMissed:(...k)=>se.current==null?void 0:se.current(...k),onCreated:k=>{k.events.connect==null||k.events.connect(c?WA(c)?c.current:c:te.current),u&&k.setEvents({compute:(Q,fe)=>{const Te=Q[u+"X"],be=Q[u+"Y"];fe.pointer.set(Te/fe.size.width*2-1,-(be/fe.size.height)*2+1),fe.raycaster.setFromCamera(fe.pointer,fe.camera)}}),R==null||R(k)}}),Y.current.render(xt.jsx(z,{children:xt.jsx(Vv,{set:ie,children:xt.jsx(Ye.Suspense,{fallback:xt.jsx(XA,{set:$}),children:e??null})})})))}),Ye.useEffect(()=>{const j=H.current;if(j)return()=>Kv(j)},[]);const q=c?"none":"auto";return xt.jsx("div",{ref:te,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:q,...i},...C,children:xt.jsx("div",{ref:b,style:{width:"100%",height:"100%"},children:xt.jsx("canvas",{ref:H,style:{display:"block"},children:t})})})}),Eb=Ye.forwardRef(function(e,t){return xt.jsx(ty,{children:xt.jsx(Mb,{...e,ref:t})})});function ud(){return ud=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)({}).hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r},ud.apply(null,arguments)}var wb=Object.defineProperty,Tb=(r,e,t)=>e in r?wb(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,Ab=(r,e,t)=>(Tb(r,e+"",t),t);class bb{constructor(){Ab(this,"_listeners")}addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,l=i.length;s<l;s++)i[s].call(this,e);e.target=null}}}var Rb=Object.defineProperty,Cb=(r,e,t)=>e in r?Rb(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,$e=(r,e,t)=>(Cb(r,typeof e!="symbol"?e+"":e,t),t);const Cc=new _s,b0=new $i,Pb=Math.cos(70*(Math.PI/180)),R0=(r,e)=>(r%e+e)%e;let Lb=class extends bb{constructor(e,t){super(),$e(this,"object"),$e(this,"domElement"),$e(this,"enabled",!0),$e(this,"target",new D),$e(this,"minDistance",0),$e(this,"maxDistance",1/0),$e(this,"minZoom",0),$e(this,"maxZoom",1/0),$e(this,"minPolarAngle",0),$e(this,"maxPolarAngle",Math.PI),$e(this,"minAzimuthAngle",-1/0),$e(this,"maxAzimuthAngle",1/0),$e(this,"enableDamping",!1),$e(this,"dampingFactor",.05),$e(this,"enableZoom",!0),$e(this,"zoomSpeed",1),$e(this,"enableRotate",!0),$e(this,"rotateSpeed",1),$e(this,"enablePan",!0),$e(this,"panSpeed",1),$e(this,"screenSpacePanning",!0),$e(this,"keyPanSpeed",7),$e(this,"zoomToCursor",!1),$e(this,"autoRotate",!1),$e(this,"autoRotateSpeed",2),$e(this,"reverseOrbit",!1),$e(this,"reverseHorizontalOrbit",!1),$e(this,"reverseVerticalOrbit",!1),$e(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),$e(this,"mouseButtons",{LEFT:es.ROTATE,MIDDLE:es.DOLLY,RIGHT:es.PAN}),$e(this,"touches",{ONE:ts.ROTATE,TWO:ts.DOLLY_PAN}),$e(this,"target0"),$e(this,"position0"),$e(this,"zoom0"),$e(this,"_domElementKeyEvents",null),$e(this,"getPolarAngle"),$e(this,"getAzimuthalAngle"),$e(this,"setPolarAngle"),$e(this,"setAzimuthalAngle"),$e(this,"getDistance"),$e(this,"getZoomScale"),$e(this,"listenToKeyEvents"),$e(this,"stopListenToKeyEvents"),$e(this,"saveState"),$e(this,"reset"),$e(this,"update"),$e(this,"connect"),$e(this,"dispose"),$e(this,"dollyIn"),$e(this,"dollyOut"),$e(this,"getScale"),$e(this,"setScale"),this.object=e,this.domElement=t,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>d.phi,this.getAzimuthalAngle=()=>d.theta,this.setPolarAngle=V=>{let ae=R0(V,2*Math.PI),ve=d.phi;ve<0&&(ve+=2*Math.PI),ae<0&&(ae+=2*Math.PI);let F=Math.abs(ae-ve);2*Math.PI-F<F&&(ae<ve?ae+=2*Math.PI:ve+=2*Math.PI),p.phi=ae-ve,n.update()},this.setAzimuthalAngle=V=>{let ae=R0(V,2*Math.PI),ve=d.theta;ve<0&&(ve+=2*Math.PI),ae<0&&(ae+=2*Math.PI);let F=Math.abs(ae-ve);2*Math.PI-F<F&&(ae<ve?ae+=2*Math.PI:ve+=2*Math.PI),p.theta=ae-ve,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=V=>{V.addEventListener("keydown",xe),this._domElementKeyEvents=V},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",xe),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),u=c.NONE},this.update=(()=>{const V=new D,ae=new D(0,1,0),ve=new Cn().setFromUnitVectors(e.up,ae),F=ve.clone().invert(),me=new D,ye=new Cn,Ce=2*Math.PI;return function(){const pe=n.object.position;ve.setFromUnitVectors(e.up,ae),F.copy(ve).invert(),V.copy(pe).sub(n.target),V.applyQuaternion(ve),d.setFromVector3(V),n.autoRotate&&u===c.NONE&&G(te()),n.enableDamping?(d.theta+=p.theta*n.dampingFactor,d.phi+=p.phi*n.dampingFactor):(d.theta+=p.theta,d.phi+=p.phi);let Ue=n.minAzimuthAngle,Je=n.maxAzimuthAngle;isFinite(Ue)&&isFinite(Je)&&(Ue<-Math.PI?Ue+=Ce:Ue>Math.PI&&(Ue-=Ce),Je<-Math.PI?Je+=Ce:Je>Math.PI&&(Je-=Ce),Ue<=Je?d.theta=Math.max(Ue,Math.min(Je,d.theta)):d.theta=d.theta>(Ue+Je)/2?Math.max(Ue,d.theta):Math.min(Je,d.theta)),d.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,d.phi)),d.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(_,n.dampingFactor):n.target.add(_),n.zoomToCursor&&b||n.object.isOrthographicCamera?d.radius=fe(d.radius):d.radius=fe(d.radius*m),V.setFromSpherical(d),V.applyQuaternion(F),pe.copy(n.target).add(V),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),n.enableDamping===!0?(p.theta*=1-n.dampingFactor,p.phi*=1-n.dampingFactor,_.multiplyScalar(1-n.dampingFactor)):(p.set(0,0,0),_.set(0,0,0));let Ht=!1;if(n.zoomToCursor&&b){let Et=null;if(n.object instanceof tn&&n.object.isPerspectiveCamera){const ln=V.length();Et=fe(ln*m);const Xt=ln-Et;n.object.position.addScaledVector(I,Xt),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const ln=new D(z.x,z.y,0);ln.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/m)),n.object.updateProjectionMatrix(),Ht=!0;const Xt=new D(z.x,z.y,0);Xt.unproject(n.object),n.object.position.sub(Xt).add(ln),n.object.updateMatrixWorld(),Et=V.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;Et!==null&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(Et).add(n.object.position):(Cc.origin.copy(n.object.position),Cc.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(Cc.direction))<Pb?e.lookAt(n.target):(b0.setFromNormalAndCoplanarPoint(n.object.up,n.target),Cc.intersectPlane(b0,n.target))))}else n.object instanceof Rr&&n.object.isOrthographicCamera&&(Ht=m!==1,Ht&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/m)),n.object.updateProjectionMatrix()));return m=1,b=!1,Ht||me.distanceToSquared(n.object.position)>h||8*(1-ye.dot(n.object.quaternion))>h?(n.dispatchEvent(i),me.copy(n.object.position),ye.copy(n.object.quaternion),Ht=!1,!0):!1}})(),this.connect=V=>{n.domElement=V,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",Pe),n.domElement.addEventListener("pointerdown",Dt),n.domElement.addEventListener("pointercancel",P),n.domElement.addEventListener("wheel",ge)},this.dispose=()=>{var V,ae,ve,F,me,ye;n.domElement&&(n.domElement.style.touchAction="auto"),(V=n.domElement)==null||V.removeEventListener("contextmenu",Pe),(ae=n.domElement)==null||ae.removeEventListener("pointerdown",Dt),(ve=n.domElement)==null||ve.removeEventListener("pointercancel",P),(F=n.domElement)==null||F.removeEventListener("wheel",ge),(me=n.domElement)==null||me.ownerDocument.removeEventListener("pointermove",O),(ye=n.domElement)==null||ye.ownerDocument.removeEventListener("pointerup",P),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",xe)};const n=this,i={type:"change"},s={type:"start"},l={type:"end"},c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let u=c.NONE;const h=1e-6,d=new ad,p=new ad;let m=1;const _=new D,y=new ue,E=new ue,x=new ue,v=new ue,w=new ue,M=new ue,A=new ue,R=new ue,C=new ue,I=new D,z=new ue;let b=!1;const L=[],H={};function te(){return 2*Math.PI/60/60*n.autoRotateSpeed}function se(){return Math.pow(.95,n.zoomSpeed)}function G(V){n.reverseOrbit||n.reverseHorizontalOrbit?p.theta+=V:p.theta-=V}function $(V){n.reverseOrbit||n.reverseVerticalOrbit?p.phi+=V:p.phi-=V}const oe=(()=>{const V=new D;return function(ve,F){V.setFromMatrixColumn(F,0),V.multiplyScalar(-ve),_.add(V)}})(),ie=(()=>{const V=new D;return function(ve,F){n.screenSpacePanning===!0?V.setFromMatrixColumn(F,1):(V.setFromMatrixColumn(F,0),V.crossVectors(n.object.up,V)),V.multiplyScalar(ve),_.add(V)}})(),Y=(()=>{const V=new D;return function(ve,F){const me=n.domElement;if(me&&n.object instanceof tn&&n.object.isPerspectiveCamera){const ye=n.object.position;V.copy(ye).sub(n.target);let Ce=V.length();Ce*=Math.tan(n.object.fov/2*Math.PI/180),oe(2*ve*Ce/me.clientHeight,n.object.matrix),ie(2*F*Ce/me.clientHeight,n.object.matrix)}else me&&n.object instanceof Rr&&n.object.isOrthographicCamera?(oe(ve*(n.object.right-n.object.left)/n.object.zoom/me.clientWidth,n.object.matrix),ie(F*(n.object.top-n.object.bottom)/n.object.zoom/me.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function q(V){n.object instanceof tn&&n.object.isPerspectiveCamera||n.object instanceof Rr&&n.object.isOrthographicCamera?m=V:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function j(V){q(m/V)}function k(V){q(m*V)}function Q(V){if(!n.zoomToCursor||!n.domElement)return;b=!0;const ae=n.domElement.getBoundingClientRect(),ve=V.clientX-ae.left,F=V.clientY-ae.top,me=ae.width,ye=ae.height;z.x=ve/me*2-1,z.y=-(F/ye)*2+1,I.set(z.x,z.y,1).unproject(n.object).sub(n.object.position).normalize()}function fe(V){return Math.max(n.minDistance,Math.min(n.maxDistance,V))}function Te(V){y.set(V.clientX,V.clientY)}function be(V){Q(V),A.set(V.clientX,V.clientY)}function ke(V){v.set(V.clientX,V.clientY)}function He(V){E.set(V.clientX,V.clientY),x.subVectors(E,y).multiplyScalar(n.rotateSpeed);const ae=n.domElement;ae&&(G(2*Math.PI*x.x/ae.clientHeight),$(2*Math.PI*x.y/ae.clientHeight)),y.copy(E),n.update()}function Ze(V){R.set(V.clientX,V.clientY),C.subVectors(R,A),C.y>0?j(se()):C.y<0&&k(se()),A.copy(R),n.update()}function yt(V){w.set(V.clientX,V.clientY),M.subVectors(w,v).multiplyScalar(n.panSpeed),Y(M.x,M.y),v.copy(w),n.update()}function Ct(V){Q(V),V.deltaY<0?k(se()):V.deltaY>0&&j(se()),n.update()}function Ve(V){let ae=!1;switch(V.code){case n.keys.UP:Y(0,n.keyPanSpeed),ae=!0;break;case n.keys.BOTTOM:Y(0,-n.keyPanSpeed),ae=!0;break;case n.keys.LEFT:Y(n.keyPanSpeed,0),ae=!0;break;case n.keys.RIGHT:Y(-n.keyPanSpeed,0),ae=!0;break}ae&&(V.preventDefault(),n.update())}function B(){if(L.length==1)y.set(L[0].pageX,L[0].pageY);else{const V=.5*(L[0].pageX+L[1].pageX),ae=.5*(L[0].pageY+L[1].pageY);y.set(V,ae)}}function _e(){if(L.length==1)v.set(L[0].pageX,L[0].pageY);else{const V=.5*(L[0].pageX+L[1].pageX),ae=.5*(L[0].pageY+L[1].pageY);v.set(V,ae)}}function he(){const V=L[0].pageX-L[1].pageX,ae=L[0].pageY-L[1].pageY,ve=Math.sqrt(V*V+ae*ae);A.set(0,ve)}function Ee(){n.enableZoom&&he(),n.enablePan&&_e()}function de(){n.enableZoom&&he(),n.enableRotate&&B()}function Xe(V){if(L.length==1)E.set(V.pageX,V.pageY);else{const ve=Mt(V),F=.5*(V.pageX+ve.x),me=.5*(V.pageY+ve.y);E.set(F,me)}x.subVectors(E,y).multiplyScalar(n.rotateSpeed);const ae=n.domElement;ae&&(G(2*Math.PI*x.x/ae.clientHeight),$(2*Math.PI*x.y/ae.clientHeight)),y.copy(E)}function Ne(V){if(L.length==1)w.set(V.pageX,V.pageY);else{const ae=Mt(V),ve=.5*(V.pageX+ae.x),F=.5*(V.pageY+ae.y);w.set(ve,F)}M.subVectors(w,v).multiplyScalar(n.panSpeed),Y(M.x,M.y),v.copy(w)}function Oe(V){const ae=Mt(V),ve=V.pageX-ae.x,F=V.pageY-ae.y,me=Math.sqrt(ve*ve+F*F);R.set(0,me),C.set(0,Math.pow(R.y/A.y,n.zoomSpeed)),j(C.y),A.copy(R)}function et(V){n.enableZoom&&Oe(V),n.enablePan&&Ne(V)}function mt(V){n.enableZoom&&Oe(V),n.enableRotate&&Xe(V)}function Dt(V){var ae,ve;n.enabled!==!1&&(L.length===0&&((ae=n.domElement)==null||ae.ownerDocument.addEventListener("pointermove",O),(ve=n.domElement)==null||ve.ownerDocument.addEventListener("pointerup",P)),nt(V),V.pointerType==="touch"?Ge(V):ee(V))}function O(V){n.enabled!==!1&&(V.pointerType==="touch"?Ae(V):Se(V))}function P(V){var ae,ve,F;St(V),L.length===0&&((ae=n.domElement)==null||ae.releasePointerCapture(V.pointerId),(ve=n.domElement)==null||ve.ownerDocument.removeEventListener("pointermove",O),(F=n.domElement)==null||F.ownerDocument.removeEventListener("pointerup",P)),n.dispatchEvent(l),u=c.NONE}function ee(V){let ae;switch(V.button){case 0:ae=n.mouseButtons.LEFT;break;case 1:ae=n.mouseButtons.MIDDLE;break;case 2:ae=n.mouseButtons.RIGHT;break;default:ae=-1}switch(ae){case es.DOLLY:if(n.enableZoom===!1)return;be(V),u=c.DOLLY;break;case es.ROTATE:if(V.ctrlKey||V.metaKey||V.shiftKey){if(n.enablePan===!1)return;ke(V),u=c.PAN}else{if(n.enableRotate===!1)return;Te(V),u=c.ROTATE}break;case es.PAN:if(V.ctrlKey||V.metaKey||V.shiftKey){if(n.enableRotate===!1)return;Te(V),u=c.ROTATE}else{if(n.enablePan===!1)return;ke(V),u=c.PAN}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(s)}function Se(V){if(n.enabled!==!1)switch(u){case c.ROTATE:if(n.enableRotate===!1)return;He(V);break;case c.DOLLY:if(n.enableZoom===!1)return;Ze(V);break;case c.PAN:if(n.enablePan===!1)return;yt(V);break}}function ge(V){n.enabled===!1||n.enableZoom===!1||u!==c.NONE&&u!==c.ROTATE||(V.preventDefault(),n.dispatchEvent(s),Ct(V),n.dispatchEvent(l))}function xe(V){n.enabled===!1||n.enablePan===!1||Ve(V)}function Ge(V){switch(Me(V),L.length){case 1:switch(n.touches.ONE){case ts.ROTATE:if(n.enableRotate===!1)return;B(),u=c.TOUCH_ROTATE;break;case ts.PAN:if(n.enablePan===!1)return;_e(),u=c.TOUCH_PAN;break;default:u=c.NONE}break;case 2:switch(n.touches.TWO){case ts.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ee(),u=c.TOUCH_DOLLY_PAN;break;case ts.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;de(),u=c.TOUCH_DOLLY_ROTATE;break;default:u=c.NONE}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(s)}function Ae(V){switch(Me(V),u){case c.TOUCH_ROTATE:if(n.enableRotate===!1)return;Xe(V),n.update();break;case c.TOUCH_PAN:if(n.enablePan===!1)return;Ne(V),n.update();break;case c.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;et(V),n.update();break;case c.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;mt(V),n.update();break;default:u=c.NONE}}function Pe(V){n.enabled!==!1&&V.preventDefault()}function nt(V){L.push(V)}function St(V){delete H[V.pointerId];for(let ae=0;ae<L.length;ae++)if(L[ae].pointerId==V.pointerId){L.splice(ae,1);return}}function Me(V){let ae=H[V.pointerId];ae===void 0&&(ae=new ue,H[V.pointerId]=ae),ae.set(V.pageX,V.pageY)}function Mt(V){const ae=V.pointerId===L[0].pointerId?L[1]:L[0];return H[ae.pointerId]}this.dollyIn=(V=se())=>{k(V),n.update()},this.dollyOut=(V=se())=>{j(V),n.update()},this.getScale=()=>m,this.setScale=V=>{q(V),n.update()},this.getZoomScale=()=>se(),t!==void 0&&this.connect(t),this.update()}};const Ib=Ye.forwardRef(({makeDefault:r,camera:e,regress:t,domElement:n,enableDamping:i=!0,keyEvents:s=!1,onChange:l,onStart:c,onEnd:u,...h},d)=>{const p=wr(C=>C.invalidate),m=wr(C=>C.camera),_=wr(C=>C.gl),y=wr(C=>C.events),E=wr(C=>C.setEvents),x=wr(C=>C.set),v=wr(C=>C.get),w=wr(C=>C.performance),M=e||m,A=n||y.connected||_.domElement,R=Ye.useMemo(()=>new Lb(M),[M]);return Jv(()=>{R.enabled&&R.update()},-1),Ye.useEffect(()=>(s&&R.connect(s===!0?A:s),R.connect(A),()=>void R.dispose()),[s,A,t,R,p]),Ye.useEffect(()=>{const C=b=>{p(),t&&w.regress(),l&&l(b)},I=b=>{c&&c(b)},z=b=>{u&&u(b)};return R.addEventListener("change",C),R.addEventListener("start",I),R.addEventListener("end",z),()=>{R.removeEventListener("start",I),R.removeEventListener("end",z),R.removeEventListener("change",C)}},[l,c,u,R,p,E]),Ye.useEffect(()=>{if(r){const C=v().controls;return x({controls:R}),()=>x({controls:C})}},[r,R]),Ye.createElement("primitive",ud({ref:d,object:R,enableDamping:i},h))});function Db(){const r=Ye.useRef(null);return Jv(()=>{r.current&&(r.current.rotateX(.01),r.current.rotateY(.01))}),xt.jsxs(xt.Fragment,{children:[xt.jsx(Ib,{makeDefault:!0}),xt.jsx("ambientLight",{position:[2.94,-1.06,5.36],intensity:1}),xt.jsx("directionalLight",{intensity:1.5,position:[0,2.22,-5.5],castShadow:!0}),xt.jsx("directionalLight",{intensity:1.02,position:[0,2.32,7.2],castShadow:!0}),xt.jsxs("mesh",{position:[0,.57,0],ref:r,children:[xt.jsx("boxGeometry",{args:[2,2,2]}),xt.jsx("meshStandardMaterial",{color:new Fe(Zy.secondary500.hex)})]})]})}function Nb({className:r}){return xt.jsx(Eb,{camera:{position:[3,3,-5],fov:75},style:{width:"100vw",height:"100vh",maxWidth:"100vw",maxHeight:"100vh"},className:r,children:xt.jsx(Db,{})})}function zb(){return xt.jsxs("div",{className:"relative scheme-only-dark",children:[xt.jsxs("div",{className:"max-h-screen max-w-screen min-h-screen min-w-screen overflow-y-auto  absolute z-10 *:min-h-screen top-0",children:[xt.jsx("div",{className:"flex place-content-center items-center",children:xt.jsx("div",{className:"text-8xl bg-clip-text text-transparent bg-gradient-to-r from-primary-400 to-primary-800 font-mono ",children:"Hu-More-Bot"})}),xt.jsxs("div",{className:"bg-surface-800 text-primary-100 text-justify flex flex-col rounded-t-3xl items-center",children:[xt.jsx("div",{className:"font-mono underline underline-offset-2 text-4xl my-8",children:"About Us"}),xt.jsxs("div",{className:"max-w-screen  lg:w-4xl p-4 text-sm lg:text-lg",children:["The Hu-More-Bot team was originally founded in 2019 under the name Robo quartet. ",xt.jsx("br",{}),"We all love robotics and technology, that’s what brought us together as a team, although the team members have changed over the years. Our team has been accumulating success since the beginning, because in the year of its foundation, we won the MIRK 2019 OnStage league with our performance “The Bremen Town Musicians”. ",xt.jsx("br",{}),"In the same year, some of us from the team also participated in other competitions, such as the Robot Exatlon held in Nyíregyháza. After that, as we all remember, the 2020-21 pandemic followed and the whole country was forced to work from home, but this did not deter us. We spent these two years preparing a more ambitious show called Treasure hunters. With this performance, we achieved not only domestic but international success, as we made it to the 2022 RoboCup Junior Europen in Porto, from which we returned with the special award for Best Technical Solutions. This competition gave us a huge boost, as we decided that we would like to qualify for next year’s World Championship.  ",xt.jsx("br",{}),"So we started working under the name Hu-More-Bot. Their performance in 2023 was called The Ladybug of Szeged, which was also a great success with the Hungarian audience, as it was about a Hungarian invention, Dr. Dániel Muszka’s robot ladybug, so we made it to the second time. This time, however, we traveled to Bordeaux, France, for the World Championship. ",xt.jsx("br",{}),"This competition is a world-wide known and recognized competition, where not only the competition but also the technological innovations are given considerable emphasis. This competition provided us with a great experience and we also won the OnStage superteam league with the Slovak and Japanese teams in 2023.",xt.jsx("br",{}),"We are currently looking for sponsors for our trip to the World Cup this year in Salvador, Brazil.",xt.jsx("br",{})]})]})]}),xt.jsx(Nb,{className:""})]})}export{zb as default};
